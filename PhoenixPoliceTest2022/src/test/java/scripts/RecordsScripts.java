package scripts;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import org.testng.ITestContext;
import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.Test;

import application.Accounting;
import application.Activity;
import application.Alarms;
import application.AnimalControl;
import application.CM;
import application.Coroner;
import application.Geo;
import application.Home;
import application.K9;
import application.Loader;
import application.Login;
import application.Names;
import application.Personnel;
import application.Popup;
import application.Property;
import application.QA;
import application.Records;
import application.Settings;
import application.Tow;
import application.Traffic;
import application.TrafficWI;
import application.Vehicle;
import reports.ExtentReport;
import utilities.Browser;
import utilities.ObjectIdentification;
import utilities.Playback;

public class RecordsScripts {

	public Records records;
	public Login login;
	public Loader loader;
	public Names names;
	public Popup popup;
	public Home home;
	public Settings settings;
	public ObjectIdentification objectIdentification;
	public Personnel personnel;
	public Vehicle vehicle;
	public Property property;
	public Geo geo;
	public Activity activity;
	public Accounting accounting;
	public Tow tow;
	public CM cm;
	public TrafficWI trafficWI;
	public Traffic traffic;
	public AnimalControl animalControl;
	public Alarms alarms;
	public QA qA;
	public K9 k9;
	public Coroner coroner;

	@BeforeSuite(groups = { "ReportEntrySupervisor", "ManagementReportStatus", "ReportEntryPoliceOfficer",
			"ReportApprovalProcess", "ReportApprovalProcess1", "incidentreportScripts", "2020DefectCallEntry",
			"2020DefectCallEntrySequential", "2020DefectCallSearch", "2020DefectCaseSearch", "2020DefectCaseSearch2",
			"2020DefectCaseSearchSequential", "2020DefectReportEntry", "2020DefectReportSearch",
			"2020DefectReportSearchSequential", "2020DefectCaseUpdateTabs", "2020DefectIBRSubmission",
			"2020DefectReportsVerify", "2020DefectIBRSubmissionSequential", "2020DefectUOF", "2020DefectUOFSequential",
			"2020DefectLocalRunScripts", "2020DefectCaseFolder", "2020DefectUCR", "2021DefectTestCases",
			"2021DefectTestCases2", "2021DefectTestCases3", "2021DefectTestCases4", "IBRcodeCompletedWI",
			"DomesticVoilenceFunctional", "OpenRecordRequestFuntional", "MohanCRM", "ReportApprovalProcess",
			"ReportApprovalProcess1", "VehicleRelatedTestCase", "HomeRelatedTestCase", "GeoRelatedTestCase",
			"CallSummaryEnhancement", "DirectReportSuspectAndProfileSearchFunctional",
			"RecordRequestCompleteFunctionality", "CaseUpdateIcons", "CallEntryIcons", "CallEntryTabFunctionality",
			"CaseSearchFunctional", "CallSearchFunctional", "CaseUpdateTabsFunctional", "CaseUpdateTabsFunctional1" })
	public void beforeRunSuite(ITestContext testContext) {
		String suitePath = testContext.getCurrentXmlTest().getSuite().getFileName();
		ExtentReport.startReport(suitePath);
		ExtentReport.TotalTestsInSuite(testContext.getSuite());

	}

	@BeforeMethod(groups = { "ReportEntrySupervisor", "ManagementReportStatus", "2020DefectAttachments",
			"2020DefectAttachmentsSequential", "ReportEntryPoliceOfficer", "2020DefectCallEntry",
			"2020DefectCallEntrySequential", "2020DefectCallSearch", "2020DefectCaseSearch", "2020DefectCaseSearch2",
			"2020DefectCaseSearchSequential", "2020DefectReportEntry", "2020DefectReportSearch",
			"2020DefectReportSearchSequential", "2020DefectCaseUpdateTabs", "2020DefectIBRSubmission",
			"2020DefectReportsVerify", "2020DefectIBRSubmissionSequential", "2020DefectUOF", "2020DefectUOFSequential",
			"2020DefectLocalRunScripts", "2020DefectCaseFolder", "2020DefectUCR", "2021DefectTestCases",
			"2021DefectTestCases2", "2021DefectTestCases3", "2021DefectTestCases4", "IBRcodeCompletedWI",
			"DomesticVoilenceFunctional", "OpenRecordRequestFuntional", "MohanCRM", "incidentreportScripts",
			"ReportApprovalProcess", "ReportApprovalProcess1", "VehicleRelatedTestCase", "HomeRelatedTestCase",
			"GeoRelatedTestCase", "CallSummaryEnhancement", "DirectReportSuspectAndProfileSearchFunctional",
			"RecordRequestCompleteFunctionality", "CaseUpdateIcons", "CallEntryIcons", "CallEntryTabFunctionality",
			"CaseSearchFunctional", "CallSearchFunctional", "CaseUpdateTabsFunctional", "CaseUpdateTabsFunctional1" })
	public void beforeSuite(ITestContext testContext) {
		testContext.setAttribute("moduleName", "Records");
		Playback.testContext = testContext;
		Playback.start();
		login = new Login();
		loader = new Loader();
		records = new Records();
		popup = new Popup();
		home = new Home();
		settings = new Settings();
		objectIdentification = new ObjectIdentification();
		personnel = new Personnel();
		vehicle = new Vehicle();
		property = new Property();
		geo = new Geo();
		names = new Names();
		activity = new Activity();
		accounting = new Accounting();
		tow = new Tow();
		cm = new CM();
		trafficWI = new TrafficWI();
		animalControl = new AnimalControl();
		alarms = new Alarms();
		qA = new QA();
		k9 = new K9();
		coroner = new Coroner();
	}

	public void beforeMethodrecords(ITestContext testContext) {
		testContext.setAttribute("moduleName", "Records");
		Playback.testContext = testContext;

		Playback.start();
		login = new Login();
		loader = new Loader();
		records = new Records();
		popup = new Popup();
		home = new Home();
		settings = new Settings();
		objectIdentification = new ObjectIdentification();
		personnel = new Personnel();
		vehicle = new Vehicle();
		property = new Property();
		geo = new Geo();
		names = new Names();
		activity = new Activity();
		accounting = new Accounting();
		tow = new Tow();
		cm = new CM();
		trafficWI = new TrafficWI();
		animalControl = new AnimalControl();
		alarms = new Alarms();
		qA = new QA();

	}

	@Test
	public void PoliceSprintRecord_150275(ITestContext testContext) {
		testContext.setAttribute("testID", "150275");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.ClickResetButton();
		records.reportSearch.SelectReportTypeAsIncidentReport();
		records.reportSearch.SelectStatusAsOnHold();
		records.reportSearch.ClickSearchButton();
		records.reportSearch.SelectOnHoldReport();
		records.switchToReportStatus();
		records.reportStatus.VerifyIcidentReportIsOpening();
		records.reportStatus.close();
		records.switchToReportSearch();
		records.reportSearch.clickBackButton();
		Playback.popupThreadWait();
		records.reportSearch.ClickResetButton();
		Playback.popupThreadWait();
		records.reportSearch.SelectStatusAsSubmitted();
		records.reportSearch.SelectReportTypeAsIncidentReport();
		records.reportSearch.ClickSearchButton();
		records.reportSearch.SelectSubmittedReport();
		records.switchToReportStatus();
		records.reportStatus.VerifyIncidentReportAsSubmittedIsOpening();
		records.reportStatus.close();
		records.switchToReportSearch();
		records.reportSearch.clickBackButton();
		Playback.popupThreadWait();
		records.reportSearch.ClickResetButton();
		Playback.popupThreadWait();
		records.reportSearch.SelectStatusAsApproved();
		records.reportSearch.SelectReportTypeAsIncidentReport();
		records.reportSearch.ClickSearchButton();
		records.reportSearch.SelectApprovedReport();
		records.switchToReportStatus();
		records.reportStatus.VerifyIncidentReportAsApprovedIsOpening();
		records.reportStatus.close();
		records.switchToReportSearch();
		records.reportSearch.clickBackButton();
		Playback.popupThreadWait();
		records.reportSearch.ClickResetButton();
		Playback.popupThreadWait();
		records.reportSearch.SelectStatusAsRejected();
		records.reportSearch.SelectReportTypeAsIncidentReport();
		records.reportSearch.ClickSearchButton();
		records.reportSearch.SelectRejectedReport();
		records.switchToReportStatus();
		records.reportStatus.VerifyIncidentReportAsRejectedIsOpening();
		records.reportStatus.close();
	}

	@Test
	public void PoliceSprintRecord_150639(ITestContext testContext) {
		testContext.setAttribute("testID", "150639");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsSubmitted();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.VerifyIncidentReportAsSubmittedIsOpening();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsReject();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.switchToReportManager();
		records.reportManager.save(); // This error is still existing
	}

	@Test
	public void PoliceSprintRecord_150667(ITestContext testContext) {
		testContext.setAttribute("testID", "150667");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.SelectReportTypeAsIncidentReport();
		records.reportSearch.SelectStatusAsOnHold();
		records.reportSearch.ClickSearchButton();
		records.reportSearch.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.ClickVehicleButton();
		records.switchToCaseVehicle();
		records.caseVehicle.ClickVehicleSearchMagnifyIcon();
		vehicle.switchToVehicleBoatSearchHelpWindow();
		vehicle.vehicleBoatSearch.verifyAtPlate(0);
		vehicle.vehicleBoatSearch.clickBack();
		vehicle.vehicleBoatSearch.vehicleTab.enterAtPlateNo();
		vehicle.vehicleBoatSearch.clickSearch();
		vehicle.vehicleBoatSearch.selectAtVehicleBoat();
		vehicle.vehicleBoatSearch.clickSelectIncidentVehicle();
		records.switchToCaseVehicle();
		records.caseVehicle.VerifyVehicleBoatSearchWindowDisappears();
	}

	@Test
	public void PoliceSprintRecord_150740(ITestContext testContext) {
		testContext.setAttribute("testID", "150740");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.selectAtStatus();
		records.reportSearch.ClickSearchButton();
		records.reportSearch.MouseHoverAtCaseNumberAndVerify();
		records.reportSearch.MouseHoverAtCFSAndVerify();
	}

	@Test
	public void PoliceSprintRecord_150965(ITestContext testContext) {
		testContext.setAttribute("testID", "150965");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		Playback.pageLoadThreadWait();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		Playback.controlReadyThreadWait();
		records.reportManager.updateStatusTab.ClickSignReportCheckBox();
		settings.switchToPhoenixAuthenticatorWindow();
		settings.phoenixAuthenticatorWindow.enterAtPassword();
		settings.phoenixAuthenticatorWindow.clickAcceptButton();
		records.switchToReportManager();
		records.reportManager.Close();
	}

	@Test
	public void Police2017Sprint1Record_143755(ITestContext testContext) {
		testContext.setAttribute("testID", "143755");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.EnterFromAndEndAtCaseNo();
		records.reportSearch.SelectReportTypeAsIncidentReport();
		records.reportSearch.EnterAtOfficerPF();
		records.reportSearch.clickSearch();
		records.reportSearch.VerifyAtOfficer(0);
		records.reportSearch.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.EnterAtLastName();
		records.caseNames.EnterAtFirstName();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCaseNames();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.close();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyAtLastNameAndFirstName(0);
		records.caseUpdate.caseUpdateNamesTab.VerifyActivityAsVictim(0);
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
	}

	@Test
	public void Police2017Sprint1Record_143756(ITestContext testContext) // Police MJ only
	{
		testContext.setAttribute("testID", "143756");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.ClickGeographyTextView();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.selectFieldUsageAsMandatory();
		settings.repositoryEntry.saveScreen();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.closeScreen();
		records.switchToFTC();
		records.fTC.ClickSaveButton();
		records.fTC.VerifyAcknowledgeMessageGeography();
		records.fTC.SelectGeography();

		records.fTC.ClickStudentHousingFacilityTextView();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.selectFieldUsageAsMandatory();
		settings.repositoryEntry.saveScreen();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.closeScreen();
		records.switchToFTC();
		records.fTC.ClickSaveButton();
		records.fTC.VerifyAcknowledgeMessageStudentHousingFacility();
		records.fTC.SelectStudentHousingFacility();

		records.fTC.ClickGeneralLocationTextView();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.selectFieldUsageAsMandatory();
		settings.repositoryEntry.saveScreen();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.closeScreen();
		records.switchToFTC();
		records.fTC.ClickSaveButton();
		records.fTC.VerifyAcknowledgeMessageGeneralLocation();
		records.fTC.SelectGeneralLocation();

		records.fTC.ClickDomesticViolenceTextView();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.selectFieldUsageAsMandatory();
		settings.repositoryEntry.saveScreen();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.closeScreen();
		records.switchToFTC();
		records.fTC.ClickSaveButton();
		records.fTC.VerifyAcknowledgeMessageDomesticViolence();
		records.fTC.SelectDomesticViolence();

		records.fTC.ClickDatingViolenceTextView();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.selectFieldUsageAsMandatory();
		settings.repositoryEntry.saveScreen();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.closeScreen();
		records.switchToFTC();
		records.fTC.ClickSaveButton();
		records.fTC.VerifyAcknowledgeMessageDatingViolance();
		records.fTC.SelectDatingViolence();

		records.fTC.ClickStalkingTextView();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.selectFieldUsageAsMandatory();
		settings.repositoryEntry.saveScreen();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.closeScreen();
		records.switchToFTC();
		records.fTC.ClickSaveButton();
		records.fTC.VerifyAcknowledgeMessageStalking();
		records.fTC.SelectStalking();
		records.fTC.CloseScreen();

	}

	@Test
	public void Police2017Sprint1Record_143758(ITestContext testContext) {
		testContext.setAttribute("testID", "143758");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.VerifyFromDate15DayPrevious();
		records.reportSearch.VerifyToDateAsCurrentDate();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.clickSearch();
		records.reportSearch.VerifyAcknowledgeMessage();

	}

	@Test
	public void Police2017Sprint2recordsModule_149387(ITestContext testContext) {
		testContext.setAttribute("testID", "149387");

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.ClickALCIcon();
		home.switchToALCScreen();
		home.aLCScreen.ClickPFTab();
		home.aLCScreen.aLCPFTab.SelectAtAction();
		home.aLCScreen.aLCPFTab.EnterAtPFCode();
		home.aLCScreen.aLCPFTab.ClickAddButton();
		home.aLCScreen.aLCPFTab.VerifyAtActionInGrid(0);
		home.aLCScreen.SaveScreen();
		home.aLCScreen.CloseScreen();
		records.switchToCallEntry();
		records.callEntry.closeScreen();
		loader.logout();
		objectIdentification.windowHandle.switchToWindowUsingURL("Police");
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.callSearch.VerifyNoRecordAcknowledgeMessage();
		records.callSearch.ClickResetButton();
		records.callSearch.EnterToDateAsCurrentDate();
		records.callSearch.clickSearchButton();
		records.callSearch.ClickPrintIcon();
		home.switchToSelectReport();
		home.selectReport.VerifyRecordCountCallSearch();

	}

	@Test
	public void Police2017Sprint2recordsModule_149397(ITestContext testContext) {
		testContext.setAttribute("testID", "149397");

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickALCIcon();
		home.switchToALCScreen();
		home.aLCScreen.ClickPFTab();
		home.aLCScreen.aLCPFTab.SelectAtAction();
		home.aLCScreen.aLCPFTab.EnterAtPFCode();
		home.aLCScreen.aLCPFTab.ClickAddButton();
		home.aLCScreen.aLCPFTab.VerifyAtActionInGrid(0);
		home.aLCScreen.SaveScreen();
		home.aLCScreen.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		loader.logout();
		objectIdentification.windowHandle.switchToWindowUsingURL("Police");
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.caseSearch.VerifyNoRecordAcknowledgeMessage();
		records.caseSearch.ClickReset();
		records.caseSearch.enterToDateAsCurrentDate();
		records.caseSearch.clickSearch();
		records.caseSearch.ClickPrint();
		home.switchToSelectReport();
		home.selectReport.VerifyRecordCountCaseSearch();

	}

	@Test
	public void Police2018recordsModule_159607(ITestContext testContext) {
		testContext.setAttribute("testID", "159607");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
//records.switchToReportStatus();
//records.reportStatus.ClickArrestButton();
//NamesScripts.NamesTestContext = recordsTestContext;
//names.switchToArrestEntry();
//names.arrestEntry.EnterAtLastName();
//names.arrestEntry.EnterAtFirstName();
//Names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
//names.switchToArrestEntry();
//names.arrestEntry.SwitchToArrestTab();
//names.arrestEntry.arrestTab.VerifyAtCaseNo();
//names.arrestEntry.arrestTab.TabTheArrestDateAndTime();
//names.arrestEntry.arrestTab.SelectHow();
//names.arrestEntry.arrestTab.EnterOffenderID();
//names.arrestEntry.arrestTab.SelectArmed();
//names.arrestEntry.arrestTab.TabTheBookingDateAndTime();
//names.arrestEntry.SwitchToChargeTab();
		names.arrestEntry.chargeTab.VerifyAtCaseNo();
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectAtStatus();
		names.arrestEntry.chargeTab.clickTheAddButton();
//names.arrestEntry.SaveScreen();
//names.switchToArrestEntry();
//names.arrestEntry.ClickAllTabs();
//names.arrestEntry.SaveScreen();
// names.switchToArrestEntry();
// names.arrestEntry.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.VerifyPopupAtDescription(0);
		records.aCD.ClickPopupGridCheckboxUsingAtDescription();
		records.aCD.ClickPopupCopyButton();
		records.aCD.VerifyAtDescriptionInGrid(0);
		records.switchToFTC();
		records.fTC.VerifyAtCFS();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.SaveScreen();
		records.switchToFTC();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolation();
		records.aCD.Save();
		records.switchToACD();
// records.aCD.Close();
//records.switchToReportStatus();
//records.reportStatus.close();
	}

	@Test
	public void Police2018recordsModule_159613(ITestContext testContext) {
		testContext.setAttribute("testID", "159613");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.EnterFromAndEndAtCaseNo();
		records.reportSearch.clickSearch();
		records.reportSearch.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.VerfiyAtNameInCopyNameGrid(0);
		records.caseNames.ClickPopupCopyButton();
		records.caseNames.VerfiyAtNameInGrid(1);
		records.caseNames.VerifyAtActivityInGrid(1);
		records.caseNames.Save();
		records.switchToCaseNames();
//  records.caseNames.CloseTheScreen();
// records.switchToReportStatus();
//  records.reportStatus.close();

	}

	@Test
	public void Police2018recordsModule_159616(ITestContext testContext) {
		testContext.setAttribute("testID", "159616");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.EnterFromAndEndAtCaseNo();
		records.reportSearch.clickSearch();
		records.reportSearch.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickPopupCancelButton();
		records.caseNames.ClickNameSearchButton();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.VerifyAtActivityInIncidentActivityGridUsingByName();
		names.nameSearchHelpWindow.VerifyAtNameInIncidentActivityGridUsingByActivity();
		names.nameSearchHelpWindow.CloseScreen();
		records.switchToCaseNames();
//records.caseNames.CloseTheScreen();
//records.switchToReportStatus();
//records.reportStatus.close();
	}

	@Test
	public void Police2018recordsModule_159617(ITestContext testContext) {
		testContext.setAttribute("testID", "159617");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.EnterFromAndEndAtCaseNo();
		records.reportSearch.clickSearch();
		records.reportSearch.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterAtValue();
		property.propertyEntry.propertyEntryMainTab.EnterAtLastName();
		property.propertyEntry.propertyEntryMainTab.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveNClose();
		property.switchToPropertyEditEntryPopup();
		property.propertyEntry.closeTheScreen();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickPopupCancelButton();
		records.caseNames.ClickNameInfoButton();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.VerifyAtNameInIncidentActivityGridUsingByActivity();
		names.nameSearchHelpWindow.VerifyAtActivityInIncidentActivityGridUsingByName();
// Names.nameSearchHelpWindow.SelectAtActivityInIncidentActivityGrid(); //ID was changed each checkbox have different ID's
		names.nameSearchHelpWindow.ClickIncidentNameActivity1RowCheckBox();
		records.switchToCaseNames();
		records.caseNames.VerifyAtNameRowColorAsRed();
		records.caseNames.ClickSaveButton();
		records.caseNames.VerifySystemActivityCodeAcknowledgeMessage();
		records.caseNames.ClickAtNameInGrid();
		records.caseNames.SelectActivityAsCaller();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.VerifyAtNameRowColorAsBlack();
		records.caseNames.Save();
		records.switchToCaseNames();
// records.caseNames.CloseTheScreen();
//  records.switchToReportStatus();
//  records.reportStatus.close();

	}

	@Test
	public void Police2018recordsModule_159621(ITestContext testContext) {
		testContext.setAttribute("testID", "159621");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.EnterFromAndEndAtCaseNo();
		records.reportSearch.clickSearch();
		records.reportSearch.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickAtActivityInGrid();
		records.caseNames.EnterAtSortOrder();
		records.caseNames.clickAddButton();
		records.caseNames.ClickAtActivity1InGrid();
		records.caseNames.EnterAtSortOrder1();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.VerifyAtActivity1InGrid(0);
		records.caseNames.VerifyAtActivityInGrid(1);
		records.caseNames.Save();
		records.switchToCaseNames();
//  records.caseNames.CloseTheScreen();
// records.switchToReportStatus();
// records.reportStatus.close();

	}

	@Test
	public void Police2018recordsModule_159625(ITestContext testContext) {
		testContext.setAttribute("testID", "159607"); // Chrome browser only

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.EnterFromAndEndAtCaseNo();
		records.reportSearch.clickSearch();
		records.reportSearch.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.ClickConfigrueMailExtenstionButton();
		records.reportStatus.ClickDownloadMailExtensionSdkLink();
		records.reportStatus.close();

	}

	@Test
	public void Police2018recordsModule_160980(ITestContext testContext) {
		testContext.setAttribute("testID", "160980");

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.SwithchtoNotesTab();
		records.callEntry.notesTab.VerifyNotesTabAllFieldsDisabled();
		records.switchToCallEntry();
		records.callEntry.closeScreen();

	}

	@Test
	public void Police2018recordsModule_160982(ITestContext testContext) {
		testContext.setAttribute("testID", "160982");
		String CFS = null;
		String ReportedLocation = null;
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.GetInitialCFS(CFS);
		records.callEntry.GetReportedLocation(ReportedLocation);
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.EnterRelatedCallAtCallNo();
		records.callEntry.callEntryRelatedCallsTab.VerifyCFS(Playback.getTestContextAttribute("CFS"));
		records.callEntry.callEntryRelatedCallsTab.VerifyLocation(Playback.getTestContextAttribute("ReportedLocation"));
		records.callEntry.callEntryRelatedCallsTab.ClickAddButton();
		records.callEntry.callEntryRelatedCallsTab.VerifyMainCallAcknowledgeMessage();
		records.switchToCallEntry();
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.ClickClearButton();
		records.callEntry.callEntryRelatedCallsTab.EnterRelatedCallAtInvalidCallNo();
		records.callEntry.callEntryRelatedCallsTab.VerifyNumberExistAcknowledgeMessage();
		records.switchToCallEntry();
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.ClickClearButton();
		records.callEntry.callEntryRelatedCallsTab.EnterAtRelatedCallNo();
		records.callEntry.callEntryRelatedCallsTab.ClickAddButton();
		records.callEntry.callEntryRelatedCallsTab.SaveInternalTab();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.VerifyAtRelatedCallNo(0);
		records.callEntry.callEntryRelatedCallsTab.DeleteAtRelatedCallNo();
		records.switchToCallEntry();
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.SaveInternalTab();
		records.switchToCallEntry();
		records.callEntry.switchToRelatedCallsTab();
		// records.callEntry.CallEntryRelatedCallsTab.VerifyRelatedCallRemovedFromGridRowCount();
		// //failed due to row verification
		records.switchToCallEntry();

	}

	@Test
	public void Police2018recordsModule_160987(ITestContext testContext) {
		testContext.setAttribute("testID", "160987");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterToDateAsCurrentDate();
		records.caseSearch.clickAdvancedTab();
		records.caseSearch.ClickUsedBodyWornCheckBox();
		records.caseSearch.clickSearch();
		records.caseSearch.VerifyAtCaseNo(0);
		records.caseSearch.ClickRowAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyUsedBodyWornCheckboxChecked();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();

	}

	@Test
	public void Police2020recordsModule_240634(ITestContext testContext) {
		testContext.setAttribute("testID", "240634");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.RemoveFromDate();
		records.callSearch.clickSearchButton();
		records.callSearch.VerifyAtLocationByAtCallNo();
		records.callSearch.ClickAtCallNoInGrid();
		records.switchToCallEntry();
		records.callEntry.verifyAtCallNo();
		records.callEntry.switchToMapTab();
		records.callEntry.callEntryMapTab.VerifyLatLongValue();
		records.callEntry.callEntryMapTab.ClickReset();

	}

	@Test
	public void CallentryFunctionalNoteTab_240635(ITestContext testContext) {
		testContext.setAttribute("testID", "240635");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.SwithchtoNotesTab();
		records.callEntry.notesTab.TabOuttDateTime();
		records.callEntry.notesTab.VerifyCurrentDate();
		records.callEntry.notesTab.SelectUnit();
		records.switchToCallEntry();
		records.callEntry.SwithchtoNotesTab();
//records.callEntry.notesTab.EnterAtPF();
		records.callEntry.notesTab.EnterAtNotes();
		records.callEntry.notesTab.ClickAddButton();
		records.callEntry.notesTab.VerifyAtNotesInGrid();
		records.callEntry.notesTab.VerifyAtPFInGrid();
		records.callEntry.notesTab.InternalSave();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.SwithchtoNotesTab();
		records.callEntry.notesTab.ClickAtPFInGrid();
		records.callEntry.notesTab.EnterAtNotes1();
		records.callEntry.notesTab.ClickAddButton();
		records.callEntry.notesTab.VerifyAtNotes1InGrid();
		records.callEntry.notesTab.VerifyAtPFInGrid();
		records.callEntry.notesTab.InternalSave();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();

	}

	@Test
	public void Police2020recordsModule_240636(ITestContext testContext) {
		testContext.setAttribute("testID", "240636");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.AddNewButton();
		records.switchToCallEntry();
		records.callEntry.clickEditTab();
		records.callEntry.swithchtoCallSummaryTab();
		records.callEntry.SwithchtoDispositionTab();
		records.callEntry.clickEditTab();
		records.callEntry.enterAtInitialCFS();
//popup.switchToCodedSearch();
//popup.kPICodedLookup.randomKPIHelpSelect();
//records.switchToCallEntry();
		records.callEntry.enterReceivedSourceAs9();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.EnterAtCADDisposition();
		records.callEntry.CallCompletionLocation();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.switchToAllTabs();
		records.callEntry.SwithchtoNotesTab();
		records.callEntry.notesTab.TabOuttDateTime();
		records.callEntry.notesTab.VerifyCurrentDate();
		records.callEntry.notesTab.SelectUnit();
		records.switchToCallEntry();
		records.callEntry.notesTab.EnterAtPF();
		records.callEntry.notesTab.EnterAtNotes();
		records.callEntry.notesTab.ClickAddButton();
		records.callEntry.notesTab.VerifyAtNotesInGrid();
		records.callEntry.notesTab.VerifyAtPFInGrid();
		records.callEntry.notesTab.InternalSave();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();

	}

	@Test
	public void Police2020recordsModule_240638(ITestContext testContext) {
		testContext.setAttribute("testID", "240638");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UOF Search");
		records.switchToUOFSearch();
		records.uOFSearch.ClickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.VerifyUOFNoFieldInactive();
		records.uOFEntry.EnterAtRelatedCaseNo();
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.EnterAtNameID();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.VerifyCurrentDateAutoPopulates();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.SelectAtTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.SelectEffectiveness();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.VerifyUOFNoFieldInactive();
		records.uOFEntry.ClickAllTabs();
		records.uOFEntry.Close();
	}

	@Test(groups = { "2020DefectCaseSearch2" })
	public void Police2020recordsModule_242538(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "242538");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.arrestTab.VerifyAtCaseNo();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectHow();
		names.arrestEntry.arrestTab.EnterOffenderID();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.VerifyAtCaseNo();
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.saveScreen();
		names.switchToArrestEntry();
		names.arrestEntry.ClickAllTabs();
		names.arrestEntry.SaveNCloseScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.VerfiyAtNameInCopyNameGrid(0);
		records.caseNames.VerifyAtActivityInGrid(0);
		records.caseNames.ClickPopupCopyButton();
		records.caseNames.SelectName();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();
		records.caseNames.VerifyAtActivityInGrid(0);
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
	}

	@Test(groups = { "2020DefectIBRSubmission" })
	public void Police2020recordsModule_243291(ITestContext testContext) {
		testContext.setAttribute("testID", "243291");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
//		loader.navigateToModule("Settings");
//		loader.navigateToScreen("System Parameter");
// 	settings.switchToSystemParamter();
//		settings.sysParameter.setSystemparameter779AsFalse();
//	   settings.switchToSystemParamter();
//		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		// records.fTC.selectWeaponsUsedAsNone();
		records.fTC.SaveScreen();
		records.switchToFTC();
		records.fTC.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.ClickUseBodyWornCameraCheckbox();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.clickNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyActivityAsVictim(0);
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(0);

		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.SelectCFSAsHumanTrafficking();
		records.nameVictim.SelectDomesticViolation();
		records.nameVictim.clickAddButton();
		records.switchToNameVictim();
		records.nameVictim.VerifyRedOffenderIcon(0);
		records.nameVictim.ClickOffenderIcon();

		records.switchToVictimOffender();
		records.victimOffender.SelectOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();

		records.switchToNameVictim();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.Save();
		records.switchToNameVictim();
		records.nameVictim.VerifyGreenOffenderIcon(0);
		records.nameVictim.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNIBRSTabGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();
		records.caseUpdate.closeTheScreen();

		loader.navigateToScreen("IBR Submission");
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSubmissionLink();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.EnterToDate();
		records.iBRSubmissionEntry.clickGenerateFileButton();
		records.iBRSubmissionEntry.VerifyGenerateNIBRSfileAcknowledgeMessage();
		popup.confirm.yes();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.closeScreen();
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSearch();
		records.iBRSubmissionScreenTab.ClickViewTextFileLink();
		records.iBRSubmissionScreenTab.SwitchToViewTextFileScreen();

	}

	@Test(groups = { "2020DefectIBRSubmission" })
	public void Police2020recordsModule_243292(ITestContext testContext) {
		testContext.setAttribute("testID", "243292");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
//		loader.navigateToModule("Settings");
//		loader.navigateToScreen("System Parameter");
//		settings.switchToSystemParamter();
//		settings.sysParameter.setSystemparameter779AsTrue();
//		settings.switchToSystemParamter();
//		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.clickAtDescription();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.SaveScreen();
		records.switchToFTC();
		records.fTC.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.ClickUseBodyWornCameraCheckbox();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.clickNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyActivityAsVictim(1);
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(1);

		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.VerifyRedOffenderIcon(0);
		records.nameVictim.ClickOffenderIcon();

		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectAtRelationship();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();

		records.switchToNameVictim();
		records.nameVictim.SelectAtCircumstances1();
		records.nameVictim.SelectJustifiableHomicide();
		records.nameVictim.Save();
		records.switchToNameVictim();
		records.nameVictim.VerifyGreenOffenderIcon(0);
		records.nameVictim.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNIBRSTabGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();
		records.caseUpdate.closeTheScreen();

		loader.navigateToScreen("IBR Submission");
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSubmissionLink();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.EnterToDate();
		records.iBRSubmissionEntry.clickGenerateFileButton();
		records.iBRSubmissionEntry.VerifyGenerateNIBRSfileAcknowledgeMessage();
		popup.confirm.yes();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.closeScreen();
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSearch();
		records.iBRSubmissionScreenTab.ClickViewTextFileLink();
		records.iBRSubmissionScreenTab.SwitchToViewTextFileScreen();

	}

	@Test(groups = { "2020DefectIBRSubmission" })
	public void Police2020recordsModule_243293(ITestContext testContext) {
		testContext.setAttribute("testID", "243293");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
//		loader.navigateToModule("Settings");
//		loader.navigateToScreen("System Parameter");
//		settings.switchToSystemParamter();
//		settings.sysParameter.setSystemparameter779AsFalse();
//		settings.switchToSystemParamter();
//		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
//		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();

		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.ClickUseBodyWornCameraCheckbox();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.clickNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyActivityAsVictim(0);
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(0);

		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.SelectChargeOffense();
		records.nameVictim.SelectDomesticViolation();
		records.nameVictim.clickAddButton();
		records.switchToNameVictim();
		records.nameVictim.VerifyRedOffenderIcon(0);
		records.nameVictim.ClickOffenderIcon();

		records.switchToVictimOffender();
		records.victimOffender.SelectOffender();
		records.victimOffender.SelectAtRelationship();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();

		records.switchToNameVictim();
		records.nameVictim.SelectCircumstances1AsArgument();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.Save();
		records.switchToNameVictim();
		records.nameVictim.VerifyGreenOffenderIcon(0);
		records.nameVictim.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNIBRSTabGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();
		records.caseUpdate.closeTheScreen();

		loader.navigateToScreen("IBR Submission");
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSubmissionLink();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.EnterToDate();
		records.iBRSubmissionEntry.clickGenerateFileButton();
		records.iBRSubmissionEntry.VerifyGenerateNIBRSfileAcknowledgeMessage();
		popup.confirm.yes();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.closeScreen();
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSearch();
		records.iBRSubmissionScreenTab.ClickViewTextFileLink();
		records.iBRSubmissionScreenTab.SwitchToViewTextFileScreen();

	}

	@Test(groups = { "2020DefecCaseSearch" })
	public void Police2020recordsModule_245189(ITestContext testContext) {
		testContext.setAttribute("testID", "245189");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.arrestTab.VerifyAtCaseNo();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectHow();
		names.arrestEntry.arrestTab.EnterOffenderID();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.VerifyAtCaseNo();
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.saveScreen();
		names.switchToArrestEntry();
		names.arrestEntry.ClickAllTabs();
		names.arrestEntry.saveScreen();
		names.switchToArrestEntry();
		names.arrestEntry.closeTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.ClickPopupAtCaseNoInGrid();
		records.aCD.ClickPopupCopyButton();

		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.selectWeaponsUsedAsNone();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolation();
		records.aCD.Save();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickPopupCopyButton();
		records.caseNames.ClickAtNameInGrid();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.SelectCFS();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.switchToVictimOffender();
		records.victimOffender.SelectOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.Save();
		records.switchToNameVictim();
		records.nameVictim.Close();
		records.switchToCaseNames();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.VerifyNIBRSTabGreenColor();
		records.reportManager.switchToUpdateStatusTab();
		Playback.pageLoadThreadWait();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		Playback.controlReadyThreadWait();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		Playback.pageLoadThreadWait();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		Playback.controlReadyThreadWait();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.Close();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNIBRSTabGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
	}

	@Test(groups = { "2020DefectIBRSubmission" })
	public void Police2020recordsModule_245190(ITestContext testContext) {
		testContext.setAttribute("testID", "245190");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
//	//	settings.switchToSystemParamter();
//	//	settings.sysParameter.setSystemparameter779AsFalse();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
//		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();

		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectWeaponsUsedAsNone();
		records.fTC.SaveScreen();
		records.switchToFTC();
		records.fTC.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.ClickUseBodyWornCameraCheckbox();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.clickNamesTab();
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.SelectCFS();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectAtRelationship();
		records.victimOffender.clickAddButton();
		records.victimOffender.selectAtOffender1();
		records.victimOffender.SelectAtRelationship();
		records.victimOffender.clickAddButton();
		records.victimOffender.SelectAtOffender2();
		records.victimOffender.SelectAtRelationship1();
		records.victimOffender.clickAddButton();
		records.victimOffender.SelectAtOffender3();
		records.victimOffender.SelectAtRelationship1();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.Save();
		records.switchToNameVictim();
		records.nameVictim.Close();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNIBRSTabGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();

		loader.navigateToScreen("IBR Submission");
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSubmissionLink();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.EnterToDate();
		records.iBRSubmissionEntry.clickGenerateFileButton();
		records.iBRSubmissionEntry.VerifyGenerateNIBRSfileAcknowledgeMessage();
		popup.confirm.yes();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.closeScreen();
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSearch();
		records.iBRSubmissionScreenTab.ClickViewTextFileLink();
		records.iBRSubmissionScreenTab.SwitchToViewTextFileScreen();

	}

	@Test(groups = { "recordsDefect2020" })
	public void VerifyCopyAllChargesNIBRSpulateCharges_243228(ITestContext testContext) {

		// 1ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "243228");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.VerifyAtCaseNo();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.selectHow();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectAtStatus();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.chargeTab.enterAtCharge1();
		names.arrestEntry.chargeTab.selectAtStatus();
		names.arrestEntry.chargeTab.EnterCountAs2();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.chargeTab.EnterAtCharge2();
		names.arrestEntry.chargeTab.selectAtStatus();
		names.arrestEntry.chargeTab.EnterCountAs3();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.switchToArrestEntry();
		names.arrestEntry.SaveNCloseScreen();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.SelectallChrageCheckPopup();
		records.aCD.ClickPopupCopyButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.saveNClose();
		records.switchToFTC();

	}

	@Test(groups = { "recordsDefect2020" })
	public void VerifyNIBRSDisplayInPropertyEntry_243227(ITestContext testContext) {
		// ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "243227");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.EnterAtCFS();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtPropertyLoss();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.ClickMethodOfEntryForcedRadioButton();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.EnterAtCFS1();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.SelectAtNIBRS1();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtPropertyLoss();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectAtActivity1();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.VerifyVictimOffenderIcon(1);
		records.caseNames.ClickVictimOffenderIcon(1);
		records.switchToNameVictim();
		records.nameVictim.SelectAtVictimType();
		records.nameVictim.SelectAtCFSDescription();
		records.nameVictim.clickAddButton();
		records.nameVictim.VerifyDomesticViolationAcknowledgeMessage();
		records.switchToNameVictim();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectAtRelationship();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();
		records.caseNames.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();

		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.SelectAtNIBRS();
		property.propertyEntry.propertyEntryMainTab.enterAtValue();

		property.propertyEntry.propertyEntryMainTab.enterAtOwnerName();
		property.switchToPropertyEntry();

		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.tabOutQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.selectAtDisposition();
		property.propertyEntry.recoveredTab.ClickOwnerCheckbox();

		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.propertyEntry.ClickSubmitButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.VerifyAtType(0);

	}

	@Test(groups = { "recordsDefect2020" })
	public void VerifySupervisorShouldViewAllReportStatus_242534(ITestContext testContext) {

		testContext.setAttribute("testID", "242534");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		// home.myHome.myReportsTab.SelectMyItemsCheckbox();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();

	}

	@Test(groups = { "recordsDefect2020" })
	public void VerifyPropertyentryAllowingChangeAddress_242675(ITestContext testContext) {

		testContext.setAttribute("testID", "242675");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.ClickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterAtValue();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.tabOutQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.SelectNameByAtInPossName();
		property.switchToPropertyEntry();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.selectAtDisposition();
		property.propertyEntry.recoveredTab.SelectInitialStorageLocation();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.VerifyAtAddressCheckboxUncheck();
		property.propertyEntry.recoveredTab.ClickAddressChechBoxandAccept();
		geo.switchToGeoOnFly();
		geo.fastGeo.EnterAtPremise();
		geo.fastGeo.enterAtZipCode();
		geo.fastGeo.clickSaveAndUseAddress();
		geo.fastGeo.VerifyAddressConfirmMessage();
		property.switchToPropertyEntry();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.verifyAddressIbubblePresent();
		property.propertyEntry.recoveredTab.VerifyAtAddress();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();

	}

	@Test(groups = { "recordsDefect2020" })
	public void VerifyKeypunchOfficerSupervisorSubmitReport_242530(ITestContext testContext) {
		testContext.setAttribute("testID", "242530");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.EnterFromAndEndAtCaseNo();
		records.reportSearch.clickSearch();
		records.reportSearch.SelectReportByAtType();
		records.reportSearch.VerifyKeypunchConfirmMessage();
		records.switchToReportStatus();
		records.reportStatus.VerifyReportStatusAsKeypunch();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyLabelStatusOfSupplementalReportAsOnHold();
		records.reportStatus.close();
		records.switchToReportSearch();
		records.reportSearch.SelectReportByAtType();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfSupplementalReportAsOnHold();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.EnterAtSupervisor();
		records.switchToReportManager();
		records.reportManager.save();
	}

//pending
	@Test(groups = { "recordsDefect2020" })
	public void VerifyPrimeOfficerChangeInUnit_240626(ITestContext testContext) {

		testContext.setAttribute("testID", "240626");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.switchToUnitsTab();
		records.callEntry.callEntryUnitsTab.ClickAtOfficer2InGrid();
		records.switchToCaseUnits();
		records.caseUnits.EnterAtOfficer1();
		records.caseUnits.ChangeOfficer2();
		records.caseUnits.SaveCloseScreen();

	}

	@Test(groups = { "recordsDefect2020" })
	public void VerifyRepotPDFSendThroughEmail_240627(ITestContext testContext) {
		testContext.setAttribute("testID", "240627");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.VerifySendEmailAvailable();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.ClickSendEmailButton();
		records.sendEmail.enterAtToEmailaddress();
		records.sendEmail.enterAtMassage();
		records.sendEmail.clickOnSendMail();

	}

	@Test(groups = { "recordsDefect2020" })
	public void VerifyReportsPrintingFromCombinedPage_240628(ITestContext testContext) {
		testContext.setAttribute("testID", "240628");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.ClickViewCaseFileButton();
		records.caseUpdate.reportingTab.ClickIncludeCombinedCheckBox();
		records.caseUpdate.reportingTab.ClickSelectAllCheckBox();
		records.caseUpdate.reportingTab.ClickShowPDFButton();
		records.switchToReportStatus();
		records.switchToCaseUpdate();

	}

	@Test(groups = { "recordsDefect2020" })
	public void VerifyReportsPrintingFromReportIcon_240633(ITestContext testContext) {

		testContext.setAttribute("testID", "240633");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.VerifyIncidentReportStatusAsOnHold();
		records.caseUpdate.reportingTab.VerifyPropertyStatusAsLocked();
		records.switchToCaseUpdate();
		records.caseUpdate.SaveNClose();
		records.switchToCaseSearch();
		records.caseSearch.clickSearch();
		records.caseSearch.ClickApprovedReportStatusIconInGrid();
		records.switchToReportStatus();
		records.switchToCaseSearch();
	}

	@Test(groups = { "2020DefectCaseSearch2" }) // Raja Sadaraj
	public void Police2020recordsModule_248331(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "248331");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter779AsFalse();
//		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
//		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.EnterAtCFS();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectAtLocationType();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.SaveScreen();
		records.switchToFTC();
		records.fTC.CloseScreen();
		records.switchToACD();
		records.aCD.EnterAtCFS1();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectAtNIBRS1();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.SelectAtLocationType1();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.SelectWeaponsUsedAsPersonalWeapon();
		records.fTC.SelectDegree();
		records.fTC.SaveScreen();
		records.switchToFTC();
		records.fTC.CloseScreen();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(1);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.SelectAtCFSDescription();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtCFSDescription1();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.ClickOffenderIconUsingCharge();
		records.switchToVictimOffender();
		records.victimOffender.ClickOffenderUnknownCheckBox();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.ClickOffenderIconUsingCharge1();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.selectRelationshipAsVictimWasFriend();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		// records.nameVictim.SelectCircumstances1AsOtherNegligentWeaponHandling();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();
		records.caseNames.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectNIBRS();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterValue();
		property.propertyEntry.propertyEntryMainTab.EnterAtLastName();
		property.propertyEntry.propertyEntryMainTab.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		String PropertNo = property.propertyEntry.readPropertyNo();
		property.propertyEntry.ClickSubmitButton();
		property.propertyEntry.VerifyConfirmSubmitMessage();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.VerifyAtReason(0);
		property.propertyEditEntry.VerifyPropertyNo(PropertNo, 0);
		property.propertyEntry.closeTheScreen();
		records.switchToReportStatus();
	}

	@Test(groups = { "2020DefectCaseSearch2" }) // Raja Sadaraj
	public void Police2020recordsModule_248768(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "248768");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter779AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
//		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectAtLocationType();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.SelectWeaponsUsedAsPersonalWeapon();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.enterAtCharge1();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectAtNIBRS1();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.SelectAtLocationType1();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.SelectWeaponsUsedAsPersonalWeapon();
		records.fTC.SelectDegree();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.VerifyVictimOffenderIcon(1);
		records.caseNames.ClickVictimOffenderIcon(1);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.SelectAtCFSDescription();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtCFSDescription1();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.ClickOffenderIconUsingCharge();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.selectRelationshipAsVictimWasFriend();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.ClickOffenderIconUsingCharge1();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.selectRelationshipAsVictimWasFriend();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectCircumstances1AsOtherNegligentWeaponHandling();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();
		records.caseNames.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		Playback.controlReadyThreadWait();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		Playback.pageLoadThreadWait();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		Playback.controlReadyThreadWait();
		records.reportManager.Saveandclose();
		records.switchToCaseUpdate();
		records.caseUpdate.VeriffDoNotPurgeEnabled();
		records.caseUpdate.ClickDoNotPurge();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyDoNotPurgeChecked();
	}

	@Test(groups = { "2020DefectCallSearch" }) // Raja Sadaraj
	public void Police2020recordsModule_248770(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "248770");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.enterAtVehicleNumber();
		records.callEntry.vehicleTab.enterAtState();
		vehicle.vehicleBoatSearchHelpWindow.selectVehicle();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.selectAtActivity();
		records.callEntry.vehicleTab.clickAddButton();
		records.callEntry.vehicleTab.InternalSave();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.VerifyAtActivityInGrid();
		records.callEntry.vehicleTab.ClickAtActivityInGrid();
		records.callEntry.vehicleTab.ClickNameInfoIcon();
		names.switchToNameEntry();
		names.nameEntry.switchToActivityTab();
		names.nameEntry.activityTab.VerifyAtActivityType();
		names.nameEntry.activityTab.verifyAtOfficer();

	}

	@Test(groups = { "2020DefectUOF" }) // Raja Sadaraj
	public void Police2020recordsModule_248773(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "248773");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UOF Search");
		records.switchToUOFSearch();
		records.uOFSearch.ClickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.EnterAtRelatedCaseNo();
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.EnterAtNameID();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.EnterTotalNoOfOfficersUsedForce();
		records.uOFEntry.incidentSubjectInformationTab.EnterTotalNoOfOfficersUsedForceFromYourAgency();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.EnterForceSeqNo();
		records.uOFEntry.typeOfForceTab.SelectListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.SelectEffectiveness();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.clickPrint();
		home.switchToSelectReport();
		home.selectReport.ClickUseOfForcePDFReport();
		home.switchToPnxCustomReportPDFScreen();
		home.pnxCustomReportPDFScreen.CloseScreen();
		home.switchToSelectReport();

	}

	@Test(priority = 1, groups = { "2020DefectReportSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_249389(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "249389");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
//	//	settings.switchToSystemParamter();
//	//	settings.sysParameter.setSystemparameter779AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
//		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.SelectCrimeAgainstAsSociety();
		records.fTC.selectAtPropertyLoss();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.Save();
		records.switchToACD();
		records.aCD.Close();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();

	}

	@Test(priority = 2, groups = { "2020DefectReportSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_249390(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "249390");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.VerifyAtCaseNo();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.enterAtOfficer1();
		names.arrestEntry.arrestTab.EnterOffenderID();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.VerifyAtCaseNo();
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.TabTheCount();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.SaveNCloseScreen();
		names.switchToArrestEntry();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		// records.caseNames.ClickPopupCopyButton();
		// records.caseNames.SelectName();
		// records.caseNames.SelectActivityAsArrested();
		// records.caseNames.clickAddButton();
		records.caseNames.VerifyAtActivityInGrid(0);
		records.caseNames.EnterAtNameID1();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.SaveNClose();
		records.switchToReportStatus();

	}

	@Test(priority = 3, groups = { "2020DefectReportSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_249391(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "249391");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();

		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectAtNIBRS1();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.SelectAtDrugType();
		property.propertyEntry.propertyEntryMainTab.SelectAtMeasurement();
		property.propertyEntry.propertyEntryMainTab.EnterAtDrugQuantity();
		property.propertyEntry.propertyEntryMainTab.clickOwnerUnknownCheckbox();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.TabOutDrugQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.SelectAtStatus();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.closeTheScreen();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectAtNIBRS1();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.SelectDrugTypeAsHeroin();
		property.propertyEntry.propertyEntryMainTab.SelectAtMeasurement1();
		property.propertyEntry.propertyEntryMainTab.EnterAtDrugQuantity1();
		property.propertyEntry.propertyEntryMainTab.clickOwnerUnknownCheckbox();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.TabOutDrugQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.SelectAtStatus();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.closeTheScreen();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectAtNIBRS1();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.SelectAtDrugType2();
		property.propertyEntry.propertyEntryMainTab.clickOwnerUnknownCheckbox();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.TabOutDrugQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.SelectAtStatus();
		property.propertyEntry.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.switchToReportStatus();
		records.reportStatus.VerifyNIBRSCheckButtonGreen();
		records.reportStatus.ClickNibrsCheckButton();
		records.switchToNIBRSCheckError();
		records.nIBRSCheck.VerifyNIBRSErrorCheckCompletedLabel();
		records.nIBRSCheck.closeScreen();
		records.switchToReportStatus();

	}

	@Test(priority = 4, groups = { "2020DefectReportSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_249392(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "249392");

		String batchNo = null;
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter2017AsCurrentMonthYear();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.Saveandclose();
		records.switchToCaseUpdate();
		records.caseUpdate.SaveNClose();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToScreen("IBR Submission");
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSubmissionLink();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.EnterToDateAsCurrentDate();
		records.iBRSubmissionEntry.clickGenerateFileButton();
		records.iBRSubmissionEntry.VerifySaveConfirmMessage();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.VerifyConfirmGenerateNIBRSSubmissionFile();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.GetBatchNo(batchNo);
		records.iBRSubmissionEntry.Close();
		records.switchToIBRSubmission();
		records.iBRSearch.ClickSearchbutton();
		records.iBRSearch.verifyToDateAsCurrentDateInGrid(0);
		records.iBRSearch.verifyMonthInGrid(0);
		records.iBRSearch.ClickbatchNoinGrid(Playback.getTestContextAttribute("batchNo"));
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.clickViewTextFileButton();
		records.switchToViewTextFileEntry();
		records.viewTextFileEntry.VerifyAtCaseNo();
		records.viewTextFileEntry.VerifyVictimRowText();
		records.viewTextFileEntry.VerifyOffenderRowText();
		records.viewTextFileEntry.closeScreen();
		records.switchToIBRSubmissionEntry();

	}

	@Test(priority = 13, groups = { "2020DefectCaseSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_250114(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "250114");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
//		settings.switchToSystemParamter();
//		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
//		settings.switchToSystemParamter();
//		settings.sysParameter.setSystemparameter779AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter2033AsTrue();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.closeCallActivitiesPopupIfExist();
		names.arrestEntry.VerifyPopupAtCharge(0);
		names.arrestEntry.ClickPopupGridCheckboxUsingAtCharge();
		names.arrestEntry.ClickPopupCopyButton();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.VerifyAtOfficer1();
		names.arrestEntry.arrestTab.SelectAtArmed();
		names.arrestEntry.arrestTab.EnterOffenderID();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.ClickAtChargeInGrid();
		names.arrestEntry.chargeTab.EnterCountAs1();
		names.arrestEntry.chargeTab.SelectAtNIBRS();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.switchToArrestEntry();
		names.arrestEntry.Save();
		names.switchToArrestEntry();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.VerifyChargeNIBRSCheckboxCheckedInGrid(0);
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge1();
		names.arrestEntry.chargeTab.EnterCountAs2();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.switchToArrestEntry();
		names.arrestEntry.Save();
		names.switchToArrestEntry();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.VerifyChargeNIBRSCheckboxCheckedInGrid(1);
		names.arrestEntry.chargeTab.VerifyChargeNIBRSCheckboxUnCheckedInGrid(0);
		names.arrestEntry.Save();
		names.switchToArrestEntry();
		names.arrestEntry.chargeTab.deleteAtChargeRowInGrid();
		names.arrestEntry.chargeTab.VerifyDeleteConfirmMessage();
		names.switchToArrestEntry();
		names.arrestEntry.SaveNCloseScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
	}

	@Test(priority = 14, groups = { "2020DefectCaseSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_250115(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "250115");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.VerifyAtActivityInGrid(0);
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(1);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.SelectAtCharge();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.SelectOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.VerifyNIBRSTabGreenColor();
		records.reportManager.switchToUpdateStatusTab();
		Playback.pageLoadThreadWait();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		Playback.controlReadyThreadWait();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		Playback.pageLoadThreadWait();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		Playback.controlReadyThreadWait();
		records.reportManager.save();
		records.switchToReportManager();

	}

	@Test(priority = 15, groups = { "2020DefectCaseSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_250116(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "250116");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter779AsFalse();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter2033AsFalse();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.SaveScreen();
		records.switchToFTC();
		records.fTC.CloseScreen();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.Save();
		records.switchToACD();
		records.aCD.Close();
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.closeCallActivitiesPopupIfExist();
		names.arrestEntry.VerifyPopupAtCharge(0);
		names.arrestEntry.ClickPopupGridCheckboxUsingAtCharge();
		names.arrestEntry.ClickPopupCopyButton();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.VerifyAtOfficer1();
		names.arrestEntry.arrestTab.SelectAtArmed();
		names.arrestEntry.arrestTab.EnterOffenderID();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.ClickAtChargeInGrid();
		names.arrestEntry.chargeTab.EnterCountAs1();
		names.arrestEntry.chargeTab.SelectAtNIBRS();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.Save();
		names.switchToArrestEntry();
		names.arrestEntry.closeTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter2033AsTrue();
		settings.switchToSystemParamter();
	}

	@Test(priority = 16, groups = { "2020DefectCaseSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_250117(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "250117");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.VerifyAtActivityInGrid(0);
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(1);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.SelectAtCharge();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.SelectOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.VerifyNIBRSTabGreenColor();
		records.reportManager.switchToUpdateStatusTab();
		Playback.pageLoadThreadWait();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		Playback.controlReadyThreadWait();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		Playback.pageLoadThreadWait();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		Playback.controlReadyThreadWait();
		records.reportManager.save();
		records.switchToReportManager();

	}

	@Test(groups = { "2020DefectUOF" }) // Stalin
	public void Verify_Use_of_Force_and_Arrest_should_not_allow_to_add_H_Name_from_Incident_Report(
			ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "248843");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		// settings.switchToSystemParamter();
//		settings.sysParameter.setSystemparameter779AsTrue();
		settings.switchToSystemParamter();
		System.out.println("before switch");
		objectIdentification.windowHandle.switchToMainWindow();
		System.out.println("After switch");
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.SaveScreen();
		records.switchToFTC();
		records.fTC.CloseScreen();
		records.switchToACD();
		records.aCD.EnterOccuredToDateAsCurrentDate();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.Save();
		records.switchToACD();
		records.aCD.Close();
		records.switchToReportStatus();
		records.reportStatus.ClickUseOfForceButton();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.ClickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.EnterAtHNameID();
		records.uOFEntry.VerifyInvalidNameAcknowledgemessage();
		records.switchToUOFEntry();
		records.uOFEntry.Close();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.CloseScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.EnterAtHNameID();
		names.arrestEntry.VerifyInvalidNameAcknowledgemessage();

	}

	@Test(groups = { "2020DefectCaseUpdateTabs" }) // Stalin
	public void VerifyHNameaddedfromIncidentReportshoulddisplayedinCaseUpdatescreen_Namestab_249128(
			ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "249128");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter838AsTrue();
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter779AsFalse();
		// objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.EnterAtCFS();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.EnterOccuredToDateAsCurrentDate();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickPopupCancelButton();
		records.caseNames.EnterAtHNameID();
		records.caseNames.SelectActivityAsPoliceOfficer();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.EnterAtHNameID1();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.EnterAtHNameID2();
		records.caseNames.SelectActivityAsSuspect();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.EnterAtHNameID();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.EnterAtHNameID();
		records.caseNames.SelectActivityAsMissingPerson();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.clickNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyAtHNamesInGrid(0);
		records.caseUpdate.caseUpdateNamesTab.VerifyAtHNamesInGrid(1);
		records.caseUpdate.caseUpdateNamesTab.VerifyAtHNamesInGrid(2);
		records.caseUpdate.caseUpdateNamesTab.VerifyAtHNamesInGrid(3);
		records.caseUpdate.caseUpdateNamesTab.VerifyAtHNamesInGrid(4);

	}

	@Test(groups = { "2020DefectReportEntry" }) // Raja Sadaraj
	public void Police2020recordsModule_251240(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251240");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter734AsTrue();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.VerifyOnlyPrimeOfficerWriteInitialAcknowledgeMessage();
		records.switchToReportManager();
		records.reportManager.tabDateAndTime();
		records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickAtActivityInGrid();
		records.caseNames.ClickNameInfoButton();

		names.switchToNameEntry();
		names.nameEntry.switchToActivityTab();
		names.nameEntry.activityTab.verifyAtOfficer();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter734AsFalse();
		settings.switchToSystemParamter();

	}

	@Test(groups = { "2020DefectCallSearch" }) // Raja Sadaraj
	public void Police2020recordsModule_251298(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251298");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		Playback.controlReadyThreadWait();
		records.callSearch.ClickDateResetButton();
		Playback.waitForControlReady();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectAtActivity();
		records.callEntry.callEntryNamesTab.VerifyAtActivity();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectAtActivity();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.VerifyAtActivityInGrid(0);
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.clickNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyAtActivityInGrid(0);
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.VerifyPopupAtActivityInGrid(0);
		records.caseNames.ClickPopupCopyButton();
		records.caseNames.VerifyAtActivityInGrid(0);
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();

	}

	@Test(groups = { "2020DefectRecordRequest" }) // Raja Sadaraj
	public void Police2020recordsModule_251382(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251382");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.ClickPursuitButton();
		records.switchToPursuitCaseEntry();
		records.pursuitCaseEntry.EnterAtOfficer();
		records.pursuitCaseEntry.TabSupervisor();
		records.pursuitCaseEntry.ClickTrafficViolationCheckbox();
		records.pursuitCaseEntry.EnterNoPeopleArrested();
		records.pursuitCaseEntry.clickChargelookupicon();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.randomKPIHelpSelect();
		records.switchToPursuitCaseEntry();
		records.pursuitCaseEntry.ClickAddButton();
		records.pursuitCaseEntry.EnterAtCharge();
		records.pursuitCaseEntry.ClickAddButton();
		records.pursuitCaseEntry.EnterAtCharge1();
		records.pursuitCaseEntry.ClickAddButton();
		records.pursuitCaseEntry.EnterAtCharge2();
		records.pursuitCaseEntry.ClickAddButton();
		records.pursuitCaseEntry.EnterAtCharge3();
		records.pursuitCaseEntry.ClickAddButton();
		records.pursuitCaseEntry.EnterAtCharge4();
		records.pursuitCaseEntry.ClickAddButton();
		records.pursuitCaseEntry.EnterAtCharge5();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.randomKPIHelpSelect();
		records.switchToPursuitCaseEntry();
		records.pursuitCaseEntry.ClickAddButton();
		records.pursuitCaseEntry.SaveScreen();
		records.switchToPursuitCaseEntry();
		records.pursuitCaseEntry.ClickPrintIcon();
		home.switchToSelectReport();
		home.selectReport.ClickPursuitIncidentReport();

	}

	@Test(groups = { "2020DefectReportSearch" }) // Raja Sadaraj
	public void Police2020recordsModule_251300(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251300");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.EnterFromAndEndAtCaseNo();
		records.reportSearch.selectAtStatus();
		records.reportSearch.clickSearch();
		records.reportSearch.VerifyAtCaseNoInGrid(0);
		records.reportSearch.SelectReportByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.ClickSignReportCheckBox();
		settings.switchToPhoenixAuthenticatorWindow();
		settings.phoenixAuthenticatorWindow.enterAtPassword();
		settings.phoenixAuthenticatorWindow.clickAcceptButton();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.VerifyPFSignImageDisplayed();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsSubmittedInMenuBar();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsApprovedInMenuBar();

	}

	@Test(groups = { "2020DefectUCR" }) // Raja Sadaraj
	public void Police2020recordsModule_251474(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251474");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

//		loader.navigateToModule("Settings");
//		loader.navigateToScreen("System Parameter");
//		settings.switchToSystemParamter();
//		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
//	//	 settings.switchToSystemParamter();
//	//	 settings.sysParameter.setSystemparameter779AsFalse();
//		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.VerifyAtCFS();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsProperty();
		records.fTC.SelectPropertyLossAsStolen();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.selectWeaponsUsedAsNone();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUCRTab();
		records.caseUpdate.uCRTab.EnterAtUCRCode();
		records.caseUpdate.saveScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToScreen("UCR");
		records.switchToUCR();
		records.uCR.enterSubmissionPeriodAsCurrentDate();
		records.uCR.EnterSubmissionPeriodToAsCurrentDate();
		records.uCR.ClickReturnAOffenseReportCheckbox();
		records.uCR.ClickGenerateReportButton();
		// records.uCR.Verify14DoYouWantToPrintTheReportAckMsg();
		home.switchToPnxCustomReportPDFScreen();
		home.pnxCustomReportPDFScreen.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUCRTab();
		records.caseUpdate.uCRTab.SelectUCRDisposition();
		records.caseUpdate.uCRTab.TabOutClearanceDate();
		records.caseUpdate.saveScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToScreen("UCR");
		records.switchToUCR();
		records.uCR.enterSubmissionPeriodAsCurrentDate();
		records.uCR.EnterSubmissionPeriodToAsCurrentDate();
		// records.uCR.ClickReturnAOffenseReportCheckbox();
		records.uCR.ClickGenerateReportButton();
//records.uCR.Verify14DoYouWantToPrintTheReportAckMsg();
		home.switchToPnxCustomReportPDFScreen();

	}

	@Test(groups = { "2020DefectOtherModules" }) // Raja Sadaraj
	public void Police2020recordsModule_251757(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251757");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreenByScreenID("1276 - Jobs");
		settings.switchToJobs();
		settings.jobsScreen.clickAddNew();
		settings.switchToJobEntry();
		settings.jobEntry.enterAtJobName();
		settings.jobEntry.selectAtJobType();
		settings.jobEntry.enterAtReportID();
		settings.jobEntry.selectAtFormName();
		settings.jobEntry.clickScheduleTab();
		settings.jobEntry.tabStartDate();
		settings.jobEntry.enterAtEndDate();
		settings.jobEntry.clickDailyRadiobutton();
		settings.jobEntry.enterEveryDaysAs1();
		settings.jobEntry.saveScreen();
		settings.switchToJobEntry();
		settings.jobEntry.clickRunJobButton();
		settings.jobEntry.saveScreen();
		settings.switchToJobEntry();
		settings.jobEntry.close();

	}

	@Test(groups = { "2020DefectOtherModules" }) // Raja Sadaraj
	public void Police2020recordsModule_251758(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251758");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter84AsHotSheet();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter85AsDailyBriefing();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Home");
		loader.navigateToScreenByScreenID("1383 - Activity Search");
		activity.switchToActivitySearch();
		activity.activitySearch.clickAddNewButton();
		activity.SwitchToActivityEntry();
		activity.activityEntry.selectAtCategoryGroup();
		activity.activityEntry.selectAtCategory();
		activity.activityEntry.selectAtActivityType();
		activity.activityEntry.SelectActivityStatusAsCompletedActivity();
		activity.activityEntry.TabOutActivityFromDateAndTime();
		activity.activityEntry.TabOutActivityToDateAndTime();
		activity.activityEntry.SelectAtUnit();
		activity.activityEntry.SelectAtFleet();
		activity.activityEntry.enterAtLocation();
		activity.activityEntry.enterAtSubject();
		activity.activityEntry.NavigateToPFTab();
		activity.activityEntry.activityEntryPFTab.enterAtPFNo();
		activity.activityEntry.activityEntryPFTab.SelectAtPFActivity();
		activity.activityEntry.activityEntryPFTab.SelectAtStatus();
		activity.activityEntry.activityEntryPFTab.EnterAtStartDateTime();
		activity.activityEntry.activityEntryPFTab.EnterAtEndDateTime();
		activity.activityEntry.activityEntryPFTab.clickAddButton();
		activity.activityEntry.activityEntryPFTab.EnterAtPFCode1();
		activity.activityEntry.activityEntryPFTab.EnterAtStartDateTime();
		activity.activityEntry.activityEntryPFTab.EnterAtEndDateTime();
		activity.activityEntry.activityEntryPFTab.clickAddButton();
		activity.activityEntry.Save();
		activity.SwitchToActivityEntry();
	}

	@Test(groups = { "2020DefectOtherModules" }) // Raja Sadaraj
	public void Police2020recordsModule_251751(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251751");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Settings");
		loader.navigateToScreenByScreenID("1276 - Jobs");
		settings.switchToJobs();
		settings.jobsScreen.enterAtJobName();
		settings.jobsScreen.clickSearch();
		settings.jobsScreen.clickAtJobNameInGrid();
		settings.switchToJobEntry();
		settings.jobEntry.verifyAtJobName();
		settings.jobEntry.clickScheduleTab();
		settings.jobEntry.verifyAtEndDate();
		settings.jobEntry.clickReCalculateCheckbox();
		settings.jobEntry.clickParameterTab();
		settings.jobEntry.parameterJobScreenTab.enterAtParameterName();
		settings.jobEntry.parameterJobScreenTab.enterAtParameterValue();
		settings.jobEntry.parameterJobScreenTab.clickAdd();
		settings.jobEntry.parameterJobScreenTab.verifyAtParameterNameInGrid(0);
		settings.jobEntry.parameterJobScreenTab.enterAtParameterName1();
		settings.jobEntry.parameterJobScreenTab.enterAtParameterValue1();
		settings.jobEntry.parameterJobScreenTab.clickAdd();
		settings.jobEntry.parameterJobScreenTab.verifyAtParameterName1InGrid(1);
		settings.jobEntry.parameterJobScreenTab.enterAtParameterName2();
		settings.jobEntry.parameterJobScreenTab.enterAtParameterValue2();
		settings.jobEntry.parameterJobScreenTab.clickAdd();
		settings.jobEntry.parameterJobScreenTab.verifyAtParameterName2InGrid(2);
		settings.jobEntry.parameterJobScreenTab.enterAtParameterName3();
		settings.jobEntry.parameterJobScreenTab.enterAtParameterValue2();
		settings.jobEntry.parameterJobScreenTab.clickAdd();
		settings.jobEntry.parameterJobScreenTab.verifyAtParameterName3InGrid(3);
		settings.jobEntry.parameterJobScreenTab.enterAtParameterName4();
		settings.jobEntry.parameterJobScreenTab.enterAtParameterValue2();
		settings.jobEntry.parameterJobScreenTab.clickAdd();
		settings.jobEntry.parameterJobScreenTab.verifyAtParameterName4InGrid(4);
		settings.jobEntry.parameterJobScreenTab.enterAtParameterName5();
		settings.jobEntry.parameterJobScreenTab.enterAtParameterValue2();
		settings.jobEntry.parameterJobScreenTab.clickAdd();
		settings.jobEntry.parameterJobScreenTab.verifyAtParameterName5InGrid(5);
		settings.jobEntry.parameterJobScreenTab.enterAtParameterName6();
		settings.jobEntry.parameterJobScreenTab.enterAtParameterValue6();
		settings.jobEntry.parameterJobScreenTab.clickAdd();
		settings.jobEntry.parameterJobScreenTab.verifyAtParameterName6InGrid(6);
		settings.jobEntry.parameterJobScreenTab.enterAtParameterName7();
		settings.jobEntry.parameterJobScreenTab.enterAtParameterValue2();
		settings.jobEntry.parameterJobScreenTab.clickAdd();
		settings.jobEntry.parameterJobScreenTab.verifyAtParameterName7InGrid(7);
		settings.jobEntry.clickNotificationTab();
		settings.jobEntry.notificationJobScreenTab.enterAtNotifyEmail();
		settings.jobEntry.notificationJobScreenTab.clickAdd();
		settings.jobEntry.notificationJobScreenTab.enterAtServerFolder();
		settings.jobEntry.notificationJobScreenTab.clickAdd();
		settings.jobEntry.saveScreen();
		settings.switchToJobEntry();
		settings.jobEntry.clickRunJobButton();
		settings.jobEntry.saveScreen();
		settings.switchToJobEntry();
		settings.jobEntry.close();

	}

	@Test(groups = { "2020DefectReportEntry" }) // Raja Sadaraj
	public void Police2020recordsModule_251759(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251759");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
//		settings.switchToSystemParamter();
//		settings.sysParameter.setSystemparameter779AsTrue();
//		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();

		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.SelectCriminalActivityAsOtherGang();
		records.fTC.selectWeaponsUsedAsUnknown();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.enterAtCharge1();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectAtNIBRS1();
		records.fTC.selectCrimeAgainstAsProperty();
		records.fTC.SelectPropertyLossAsStolen();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.ClickMethodOfEntryForcedRadioButton();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.EnterAtCharge2();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.clickAtDescription();
		records.switchToACD();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectAtNIBRS2();
		records.fTC.selectCrimeAgainstAsProperty();
		records.fTC.SelectPropertyLossAsStolen();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.Save();
		records.switchToACD();
		records.aCD.Close();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.EnterAtLastName();
		records.caseNames.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCaseNames();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.ClickOffenderIconUsingCharge1();
		records.switchToVictimOffender();
		records.victimOffender.ClickOffenderUnknownCheckBox();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectAtChargeOffense1();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.ClickOffenderIconUsingCFSDescription2();
		records.switchToVictimOffender();
		records.victimOffender.ClickOffenderUnknownCheckBox();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectAtChargeOffense2();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.ClickOffenderIconUsingCharge();
		records.switchToVictimOffender();
		records.victimOffender.ClickOffenderUnknownCheckBox();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectCircumstances1AsArgument();
		records.nameVictim.Save();
		records.switchToNameVictim();
		records.nameVictim.Close();
		records.switchToCaseNames();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectAtChargeOrOffense();
		property.propertyEntry.propertyEntryMainTab.selectReasonAsStolen();
		property.propertyEntry.propertyEntryMainTab.SelectPropertyAsBicycles();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.EnterValueAs100();
		property.propertyEntry.propertyEntryMainTab.EnterAtLastName();
		property.propertyEntry.propertyEntryMainTab.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.ClickSubmitButton();
		property.propertyEntry.VerifyConfirmSubmitMessage();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.VerifyAtReason(0);
		property.propertyEntry.closeTheScreen();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.VerifyNIBRSTabGreenColor();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.save();
		records.switchToReportManager();

	}

	@Test(groups = { "2020DefectUOF" }) // Raja Sadaraj
	public void Police2020recordsModule_251760(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251760");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();

		records.caseUpdate.clickReportingTab();

		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();

		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsProperty();
		records.fTC.SelectPropertyLossAsStolen();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.ClickMethodOfEntryForcedRadioButton();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.Save();
		records.switchToACD();
		records.aCD.Close();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickUseOfForceButton();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.ClickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.VerifyRelatedCaseAtCaseNo();
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.EnterAtNameID();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.SelectListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.EnterNotes();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.ClickOfficerInformationTab();
		records.uOFEntry.officerInformationTab.SelectOfficerFullTimeEmployee();
		records.uOFEntry.officerInformationTab.SelectWasOfficerOnDuty();
		records.uOFEntry.officerInformationTab.SelectWasOfficerInjured();
		records.uOFEntry.officerInformationTab.SelectListOfficersInjuries();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.clickPrint();
		home.switchToSelectReport();
		home.selectReport.ClickUseOfForcePDFReport();
		home.switchToPnxCustomReportPDFScreen();
		home.pnxCustomReportPDFScreen.CloseScreen();
		home.switchToSelectReport();
		home.selectReport.CloseTheScreen();
		records.switchToUOFEntry();
		records.uOFEntry.Close();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.CloseScreen();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUseOfForceTab();
		records.caseUpdate.caseUpdateUseOfForceTab.clickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.VerifyRelatedCaseAtCaseNo();
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.EnterAtNameID();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.EnterTotalNoOfOfficersUsedForce();
		records.uOFEntry.incidentSubjectInformationTab.EnterTotalNoOfOfficersUsedForceFromYourAgency();
		records.uOFEntry.incidentSubjectInformationTab.SelectListTheSubjectActionsAsOthers();
		records.uOFEntry.incidentSubjectInformationTab.EnterSubjectActionsText();
		records.uOFEntry.incidentSubjectInformationTab.SelectWasSubjectArmedWithWeaponAsYes();
		records.uOFEntry.incidentSubjectInformationTab.SelectWeapons();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.SelectListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.SelectEffectiveness();
		records.uOFEntry.typeOfForceTab.EnterNotes();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.ClickOfficerInformationTab();
		records.uOFEntry.officerInformationTab.SelectOfficerFullTimeEmployee();
		records.uOFEntry.officerInformationTab.SelectWasOfficerOnDuty();
		records.uOFEntry.officerInformationTab.SelectWasOfficerInjured();
		records.uOFEntry.officerInformationTab.SelectListOfficersInjuries();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.clickPrint();
		home.switchToSelectReport();
		home.selectReport.ClickUseOfForcePDFReport();
		home.switchToPnxCustomReportPDFScreen();
		home.pnxCustomReportPDFScreen.CloseScreen();
		home.switchToSelectReport();
		home.selectReport.CloseTheScreen();
		records.switchToUOFEntry();
		records.uOFEntry.Close();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToScreen("UOF Search");
		records.switchToUOFSearch();
		records.uOFSearch.ClickAddNew();

		records.switchToUOFEntry();
		records.uOFEntry.EnterAtRelatedCaseNo();
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.EnterAtNameID1();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.selectLocationType();
		records.uOFEntry.incidentSubjectInformationTab.selectReasonInitialContact();
		records.uOFEntry.incidentSubjectInformationTab.EnterTotalNoOfOfficersUsedForce();
		records.uOFEntry.incidentSubjectInformationTab.EnterTotalNoOfOfficersUsedForceFromYourAgency();
		records.uOFEntry.incidentSubjectInformationTab.SelectListTheSubjectActionsAsOthers();
		records.uOFEntry.incidentSubjectInformationTab.EnterSubjectActionsText();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.SelectListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.SelectEffectiveness();
		records.uOFEntry.typeOfForceTab.EnterNotes();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.ClickOfficerInformationTab();
		records.uOFEntry.officerInformationTab.SelectOfficerFullTimeEmployee();
		records.uOFEntry.officerInformationTab.SelectWasOfficerOnDuty();
		records.uOFEntry.officerInformationTab.SelectWasOfficerInjured();
		records.uOFEntry.officerInformationTab.SelectListOfficersInjuries();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.clickPrint();
		home.switchToSelectReport();
		home.selectReport.ClickUseOfForcePDFReport();
		home.switchToPnxCustomReportPDFScreen();
		home.pnxCustomReportPDFScreen.CloseScreen();
		home.switchToSelectReport();
		home.selectReport.CloseTheScreen();
		records.switchToUOFEntry();

	}

	@Test(groups = { "2020DefectReportEntry" }) // Raja Sadaraj
	public void Police2020recordsModule_251750(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251750");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();

		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();

		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.SelectCriminalActivityAsNone();
		records.fTC.selectWeaponsUsedAsUnknown();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.enterAtCharge1();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectAtNIBRS1();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.SelectDegree();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.SelectCriminalActivityAsNone();
		records.fTC.selectWeaponsUsedAsUnknown();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.Save();
		records.switchToACD();
		records.aCD.Close();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(1);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.SelectAtChargeOffense1();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.ClickOffenderIconUsingCharge();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.selectRelationshipAsVictimWasFriend();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.ClickOffenderIconUsingCharge1();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.selectRelationshipAsVictimWasFriend();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectCircumstances1AsArgument();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectNIBRS();
		property.propertyEntry.propertyEntryMainTab.selectReasonAsStolen();
		property.propertyEntry.propertyEntryMainTab.SelectPropertyAsBicycles();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterAtValue();
		property.propertyEntry.propertyEntryMainTab.EnterAtLastName();
		property.propertyEntry.propertyEntryMainTab.EnterAtFirstName();
		// names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveNClose();
		;
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.VerifyAtReason(0);
		property.propertyEntry.closeTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		// names.switchToArrestSearchHelpWindow();
		// names.arrestSearchHelpWindow.ClickAddNew();
		names.switchToArrestEntry();
		names.arrestEntry.ClickPopupGridCheckboxUsingAtCharge();
		names.arrestEntry.ClickPopupGridCheckboxUsingAtCharge1();
		names.arrestEntry.ClickPopupCopyButton();
		names.arrestEntry.EnterAtNameID1();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.EnterOffenderID();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.ClickAtChargeInGrid();
		names.arrestEntry.chargeTab.TabTheCount();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.chargeTab.ClickAtCharge1InGrid();
		names.arrestEntry.chargeTab.SelectAtNIBRS();
		names.arrestEntry.chargeTab.TabTheCount();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.SaveNCloseScreen();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsApprovedInMenuBar();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsMoreInfoNeeded();
		records.reportManager.updateStatusTab.SelectRejectionCode();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsMoreInfoNeededInMenuBar();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsReject();
		records.reportManager.updateStatusTab.SelectRejectionCode();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsRejectedInMenuBar();

	}

	@Test(groups = { "2020DefectCaseSearch2" }) // Raja Sadaraj
	public void Police2020recordsModule_251756(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251756");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();

		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();

		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.SelectCriminalActivityAsNone();
		records.fTC.selectWeaponsUsedAsUnknown();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.enterAtCharge1();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectAtNIBRS1();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.SelectDegree();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.SelectCriminalActivityAsNone();
		records.fTC.selectWeaponsUsedAsUnknown();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(1);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.SelectAtChargeOffense1();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.ClickOffenderIconUsingCharge();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.selectRelationshipAsVictimWasFriend();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.clickRefresh();
		records.nameVictim.ClickOffenderIconUsingCharge1();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.selectRelationshipAsVictimWasFriend();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectCircumstances1AsArgument();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectNIBRS();
		property.propertyEntry.propertyEntryMainTab.selectReasonAsStolen();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterValue();
		property.propertyEntry.propertyEntryMainTab.EnterAtLastName();
		property.propertyEntry.propertyEntryMainTab.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.closeTheScreen();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.VerifyAtReason(0);
		property.propertyEntry.closeTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsApprovedInMenuBar();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsMoreInfoNeeded();
		records.reportManager.updateStatusTab.SelectRejectionCode();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsMoreInfoNeededInMenuBar();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsReject();
		records.reportManager.updateStatusTab.SelectRejectionCode();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsRejectedInMenuBar();
		records.reportManager.Close();
		records.switchToCaseUpdate();
	}

	@Test(priority = 12, groups = { "2020DefectReportSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_252298(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "252298");

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.SelectCrimeAgainstAsSociety();
		records.fTC.selectAtPropertyLoss();
		records.fTC.SelectSuspectedDrugType();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.SelectCriminalActivityAsUsingConsuming();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.Save();
		records.switchToACD();
		records.aCD.Close();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsSubmittedInMenuBar();

	}

	@Test(priority = 13, groups = { "2020DefectReportSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_252299(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "252299");

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsSubmitted();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNo();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerfiyStatusAsApproved();
		records.reportManager.Close();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsApproved();

	}

	@Test(priority = 14, groups = { "2020DefectReportSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_252300(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "252300");

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.ClickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectAtNIBRS();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.EnterDecriptionAs1000KGDrugs();
		// property.propertyEntry.propertyEntryMainTab.enterValue();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.tabOutQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.SelectAtStatus();
		property.propertyEntry.recoveredTab.enterAtInitialStorageLocation();
		property.switchToPropertyEntry();
		property.propertyEntry.recoveredTab.EnterRemarks();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.clickReportDetailsButton();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.Close();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickALCIcon();
		home.switchToALCScreen();
		home.aLCScreen.ClickPFTab();
		home.aLCScreen.aLCPFTab.SelectAtAction();
		home.aLCScreen.aLCPFTab.EnterAtPFCode();
		home.aLCScreen.aLCPFTab.ClickAddButton();
		home.aLCScreen.SaveScreen();
		home.switchToALCScreen();
		home.aLCScreen.VerifySuccessfulStatusMessage();
		home.aLCScreen.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.VerifyPropertyStatusAsLocked();

	}

	@Test(groups = { "2020DefectReportsVerify" }) // Raja Sadaraj
	public void Police2020recordsModule_252758(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "252758");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter736AsDIVSEC();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter745AsFalse();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.logout();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.SelectAtStatus();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsTranscriber();
		home.myHome.myReportsTab.selectAtStatus1();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.ClickRefreshButton();
		home.myHome.myReportsTab.verifyGridRowAtStatus1();
		home.myHome.myReportsTab.selectStatusAsDefault();
		home.myHome.myReportsTab.ClickShowMyItemsOnly();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyAtOfficerInColumnValues();

	}

	@Test(groups = { "2020DefectRecordRequest" }) // Raja Sadaraj
	public void Police2020recordsModule_252309(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "252309");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Accounting");
		loader.navigateToScreen("Invoice Type");
		accounting.SwitchToInvoiceTypeScreen();
		accounting.invoiceType.selectRowByAtInvoiceTypeInOpenRecordsRequest();
		accounting.SwitchToInvoiceTypeEntry();
		accounting.invoiceTypeEntry.ClickAddNewItemCodeButton();
		accounting.SwitchToItemCodeEntry();
		accounting.itemCodeEntry.EnterAtItemCode();
		accounting.itemCodeEntry.EnterAtDescription();
		accounting.itemCodeEntry.enterConditionsNotes();
		accounting.itemCodeEntry.EnterAtAmount();
		accounting.itemCodeEntry.clickPrintCheckbox();
		accounting.itemCodeEntry.SaveNClose();
		accounting.SwitchToInvoiceTypeEntry();
		accounting.invoiceTypeEntry.Save();
		accounting.SwitchToInvoiceTypeEntry();
		accounting.invoiceTypeEntry.VerifyAtItemCodeInGrid();
		accounting.invoiceTypeEntry.VerifyAtDescriptionInGrid();
		accounting.invoiceTypeEntry.Save();
		accounting.SwitchToInvoiceTypeEntry();
		accounting.invoiceTypeEntry.close();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("records Request Search");

		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickAddNewButton();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.tabOutReceivedDate();
		records.openRecordsRequestEntry.selectAtRequestType();
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.tabOutFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.Save();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.SwitchToFeesTab();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.selectAtItemCodeUsingDescription();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.ClickAddButton();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.Save();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.SwitchToFeesTab();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.verifyAtItemCodeInGrid();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.verifyInvoiceNoGenerated();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.VerifyAtTotalInvoiceAmount();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.Save();
		records.switchToOpenRecordsRequestEntry();

	}

	@Test(groups = { "2020DefectCaseSearch2" }) // Raja Sadaraj
	public void Police2020recordsModule_252301(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "252301");

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.EnterAtLastName();
		records.caseNames.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCaseNames();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickDomesticViolenceIcon(0);
		records.switchToDVEntry();
		records.dVEntry.ClickAlcoholInvolvedCheckBox();
		records.dVEntry.SelectAtOffenderName();
		records.dVEntry.EnterRemarks();
		records.dVEntry.ClickGunCheckBox();
		records.dVEntry.SaveAndClose();
		records.switchToCaseNames();
		records.caseNames.ClickAtNameInGrid();
		records.caseNames.ClickNameInfoButton();
		names.switchToNameEntry();
		names.nameEntry.switchToActivityTab();
		names.nameEntry.activityTab.SelectAtActivity();
		names.nameEntry.activityTab.verifyAtOfficerInGrid();

	}

	@Test(groups = { "2020DefectOtherModules" }) // Vijay
	public void verifySupplementalReport_251238(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251238");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("Disposition");
		settings.switchToDisposition();
		settings.disposition.clickAddNew();
		settings.switchToSharedCodes();
		settings.sharedCodes.enterAtDisposition();
		settings.sharedCodes.enterAtDescription();
		settings.sharedCodes.selectAtType();
		settings.sharedCodes.selectAtReportCode();
		settings.sharedCodes.saveScreen();

	}

	@Test(groups = { "2020DefectCaseUpdateTabs" }) // Vijay
	public void chargeCFSShouldNotDuplicate_251302(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "251302");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.enterReportDescription();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.EnterAtCFS();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.SelectCriminalActivityAsOtherGang();
		records.fTC.selectWeaponsUsedAsNone();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.EnterAtCFS();
		records.aCD.clickAddButton();
		records.aCD.verifyDuplicateDataFoundAcknowledge();
		records.switchToACD();
	}

	@Test(priority = 1, groups = { "2020DefectUOFSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_252898(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "252898");

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter759AsTrue();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		// records.reportManager.EnterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.ClickUseOfForceButton();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.ClickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.VerifyRelatedCaseAtCaseNo();
		records.uOFEntry.EnterAtLastName();
		records.uOFEntry.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToUOFEntry();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.SelectListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.SelectEffectiveness();
		records.uOFEntry.typeOfForceTab.EnterNotes();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.SaveAndClose();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.VerifyAtCaseNo();
		records.uOFSearchHelpWindow.CloseScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsSubmittedInMenuBar();

	}

	@Test(priority = 2, groups = { "2020DefectUOFSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_252899(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "252899");

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.ClickUseOfForceButton();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.VerifyAtCaseNo();
		records.uOFSearchHelpWindow.ClickAtSubjectNameInGrid();
		records.switchToUOFEntry();
		records.uOFEntry.VerifyRelatedCaseAtCaseNo();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.SelectListKnownMentalPhysicalConditionsAsYes();
		records.uOFEntry.ClickReset();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.Close();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.VerifyAtCaseNo();
		records.uOFSearchHelpWindow.CloseScreen();
		records.switchToReportStatus();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter759AsFalse();
		settings.switchToSystemParamter();

	}

	@Test(groups = { "2020DefectOtherModules" }) // Automated by Stalin
	public void VerifytheEthnicitydropdown(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251735");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Profile Search");
		records.switchToProfileSearch();
		records.profileSearch.ClickAddNew();
		records.switchToVehicleProfileEntry();
		records.vehicleProfile.EnterAtCallNo();
		records.vehicleProfile.TabDateTime();
		records.vehicleProfile.EnterAtPlateNo();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.saveScreen();
		vehicle.vehicleBoatEntry.closeScreen();
		records.switchToVehicleProfileEntry();
		records.vehicleProfile.verifyEthicityofDriverIsEnabled();
		records.vehicleProfile.selectEthicityOfDriver();
		records.vehicleProfile.Save();
		records.vehicleProfile.Close();
		records.switchToProfileSearch();
		records.profileSearch.ClickBack();
		records.profileSearch.selectEthicityOfDriver();
		records.profileSearch.ClickSearch();
		records.profileSearch.VerifyAtCallNo(0);

	}

	@Test(groups = { "2020DefectRecordRequest" }) // Automated by Stalin
	public void VerifythatassignedPF_251736(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251736");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickAddNewButton();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.tabOutReceivedDate();
		records.openRecordsRequestEntry.enterAtAssignedTo();
		records.openRecordsRequestEntry.enterAtCallNo();
		records.openRecordsRequestEntry.verifyAtCaseNo();
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.tabOutFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.Save();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.Close();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = { "2020DefectCaseFolder" }) // Automated by Stalin
	public void VerifyReviewcolumnisautoselect_252303(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "252303");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter912AsYes();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter909AsAdministration();
		settings.switchToSystemParamter();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		String CaseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.clickCaseManagementIcon();
		cm.switchToCaseFolder();
		cm.caseFolder.clickAssignmentTab();
		cm.caseFolder.caseFolderAssignmentTab.tabOutSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.clickSupervisorSearchButton();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.verifyPFInCodedSearch(0);
		popup.kPICodedLookup.kPIHelpSelect("AUTO");
		cm.switchToCaseFolder();
		cm.caseFolder.caseFolderAssignmentTab.tabOutPrimeInvestigator();
		cm.caseFolder.caseFolderAssignmentTab.clickPrimeInvestigatorSearchButton();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.verifyPFInCodedSearch(0);
		popup.kPICodedLookup.kPIHelpSelect("AUTO");
		cm.switchToCaseFolder();
		cm.caseFolder.caseFolderAssignmentTab.tabOutDateAssignedTime();
		cm.caseFolder.caseFolderAssignmentTab.tabOutNextReviewDate();
		cm.caseFolder.caseFolderAssignmentTab.tabOutNextReportDate();
		cm.caseFolder.saveNclose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		// records.caseUpdate.reportingTab.clickAddReportButton();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.close();
		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterCaseNoByActiveData(CaseNo);
		records.caseSearch.clickSearch();
		records.caseSearch.clickReportIconInGrid(0);
		records.switchToReportStatus();
		records.reportStatus.verifyReviewedCheckBoxIsSelected();

	}

	@Test(groups = { "2020DefectReportEntry" }) // Automated by Stalin
	public void Verifyattachmentisabledelete_252312(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "252312");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.clickPrint();
		home.switchToSelectReport();
		// home.selectReport.ClickCaseNamesInGrid();

	}

	@Test(groups = { "2020DefectRecordRequest" }) // Automated by Stalin
	public void VerifyRequesttabisenbledincase(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "252891");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickAddNewButton();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.tabOutReceivedDate();
		records.openRecordsRequestEntry.verifyStatusOpenRadioButtonIsSelected();
		records.openRecordsRequestEntry.selectAtRequestType();
		records.openRecordsRequestEntry.enterAtCallNo();
		records.openRecordsRequestEntry.verifyAtCaseNo();
		records.openRecordsRequestEntry.enterAtAssignedTo();
		records.openRecordsRequestEntry.clickAssignedToLookUpButton();
		popup.kPICodedLookup.kPIHelpSelect("AUTO");
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtFirstName();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.Save();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.Close();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyAtCaseStatus();
		records.caseUpdate.verifyRequestTabBlueColor();
		records.caseUpdate.switchToCaseUpdateRequestTab();
		records.caseUpdate.caseUpdateRequestTab.verifyAtRequestedByInGrid(0);
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.switchToRequestTab();
		records.callEntry.callEntryRequestTab.verifyAtRequestedByInGrid(0);

	}

	@Test(groups = { "2020DefectRecordRequest" }) // Automated by Stalin
	public void VerifythattheopenRecordsRequest(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "252892");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.verifyCallNoIsDisplayed();
		records.openRecordsRequest.verifyAssignedToIsDisplayed();
		records.openRecordsRequest.verifyClosedDateIsDisplayed();
		records.openRecordsRequest.enterAtCallNo();
		records.openRecordsRequest.enterAtAssignedTo();
		records.openRecordsRequest.clickAssignedToLookUPIcon();
		popup.kPICodedLookup.kPIHelpSelect("P001");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickSearchButton();
		records.openRecordsRequest.verifyAtCallNoInRecordsRequestTable();
		records.openRecordsRequest.verifyAtAssignedToInRecordsRequestTable();
		records.openRecordsRequest.clickBackButton();
		records.openRecordsRequest.clearCallNo();
		records.openRecordsRequest.clearCaseNo();
		records.openRecordsRequest.clearAssignedTo();
		records.openRecordsRequest.enterAtClosedDate();
		records.openRecordsRequest.clickSearchButton();
		records.openRecordsRequest.verifyAtCallNoInRecordsRequestTable();

	}

	@Test(groups = { "2020DefectCallEntry" }) // Automated By Stalin
	public void VerifyabletoCreatecall_252894(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "252894");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.CallCompletionLocation();
		records.callEntry.VerifyAtCallcompletionLocation();
		records.callEntry.SelectCADDispositionAsI();
		records.switchToCallEntry();
		records.callEntry.enterAtPrimeUnit();
		records.callEntry.save();
		records.switchToCallEntry();
	}

	@Test(priority = 5, groups = { "2020DefectCaseSearchSequential" }) // Automated by Stalin
	public void Verifydonotdistirbutecheckbox_252895(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "252895");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter828AsDONOTDISTRIBUTE();
		settings.switchToSystemParamter();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
//		records.caseUpdate.clickCaseDataTab();
//		records.caseUpdate.caseUpdateCaseDataTab.clickChargeLookUpIcon();
//		popup.switchToCodedSearch();
//		popup.kPICodedLookup.enterAtCharge();
//		popup.kPICodedLookup.clickSearchIcon();
//		popup.kPICodedLookup.clickAtChargeInGrid();
//		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectSuspectOfUsingAsNotApplicable();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.caseUpdate.SaveNClose();
		records.switchToCaseSearch();
		records.caseSearch.ClickReset();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyDoNotDistributeReportsChecked();
		records.caseUpdate.VerifyDNDStatusBar();

	}

	@Test(priority = 6, groups = { "2020DefectCaseSearchSequential" }) // Automated by Stalin
	public void VerifythatReportisallowingtoshow_253045(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253045");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter828AsDONOTDISTRIBUTE();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter829AsYes();
		settings.switchToSystemParamter();
		loader.logout();
		// settings.sysParameter.setSystemparameter779AsTrue();
		// settings.switchToSystemParamter();
//		objectIdentification.windowHandle.switchToMainWindow();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyDNDReportsCheckboxIsDisabled();
		records.caseUpdate.VerifyDNDStatusBar();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.SelectCrimeAgainstAsSociety();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.SaveScreen();
		records.switchToFTC();
		records.fTC.CloseScreen();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.Save();
		records.switchToACD();
		records.aCD.Close();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsSubmittedInMenuBar();
		loader.logout();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter829AsNill();
		settings.switchToSystemParamter();
	}

	@Test(priority = 7, groups = { "2020DefectCaseSearchSequential" }) // Automated by Stalin
	public void VerifythatReportisallowingtoshow_253046(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253046");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter829AsNill();
		settings.switchToSystemParamter();
		loader.logout();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.Close();
		records.switchToReportStatus();
		// records.reportStatus.verifyDNDStatusBar();
		records.reportStatus.verifyReportStatusAsApproved();

	}

	@Test(priority = 1, groups = { "2020DefectCaseSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_253128(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253128");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		// records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.close();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Property");
		loader.navigateToScreen("Property Edit/Entry");
		property.switchToPropertyEditEntry();
		property.propertyEditEntry.enterAtCaseNumberAndTab();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.EnterValueAs12345607();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.tabOutQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.selectDispositionAsSentToPropertyRoom();
		property.propertyEntry.recoveredTab.EnterRemarks();
		property.propertyEntry.recoveredTab.enterAtInitialStorageLocation();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.clickReportDetailsButton();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsApprovedInMenuBar();
		records.reportManager.verifySavebuttonsDisabled();

	}

	@Test(priority = 2, groups = { "2020DefectCaseSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_253129(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253129");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.ClickDomesticViolanceIconUsingVictim();
		records.switchToDVEntry();
		records.dVEntry.SelectAtOffenderName();
		records.dVEntry.verifyAtAgeRange();
		records.dVEntry.ClickAlcoholInvolvedCheckBox();
		records.dVEntry.ClickGunCheckBox();
		records.dVEntry.EnterRemarks();
		records.dVEntry.SaveAndClose();
		records.switchToCaseUpdate();
		records.caseUpdate.SaveNClose();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();

	}

	@Test(priority = 3, groups = { "2020DefectCaseSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_253132(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253132");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter762AsTrue();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.ClickViewCaseFileButton();
		records.caseUpdate.reportingTab.verifyPopupIncidentReportsOnHoldViewed();
		records.caseUpdate.reportingTab.verifyPopupPropertyReportLockedViewed();
		records.caseUpdate.reportingTab.ClickSelectAllCheckBox();
		records.caseUpdate.reportingTab.ClickIncludeCombinedCheckBox();
		records.caseUpdate.reportingTab.ClickShowPDFButton();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.ClickViewCaseFileButton();
		records.caseUpdate.reportingTab.verifyPopupIncidentReportsOnHoldViewed();
		records.caseUpdate.reportingTab.verifyPopupPropertyReportLockedViewed();
		records.caseUpdate.reportingTab.ClickSelectAllCheckBox();
		records.caseUpdate.reportingTab.ClickShowPDFButton();
		records.switchToReportStatus();
		// records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
	}

	@Test(priority = 4, groups = { "2020DefectCaseSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_253133(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253133");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter762AsFalse();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.ClickViewCaseFileButton();
		// records.caseUpdate.reportingTab.verifyPopupIncidentReportsOnHoldViewed();
		records.caseUpdate.reportingTab.verifyPopupPropertyReportviewed();
		records.caseUpdate.reportingTab.ClickSelectAllCheckBox();
		records.caseUpdate.reportingTab.ClickIncludeCombinedCheckBox();
		records.caseUpdate.reportingTab.ClickShowPDFButton();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.ClickViewCaseFileButton();
		records.caseUpdate.reportingTab.verifyPopupPropertyReportviewed();
		records.caseUpdate.reportingTab.ClickSelectAllCheckBox();
		records.caseUpdate.reportingTab.ClickShowPDFButton();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter762AsTrue();
		settings.switchToSystemParamter();
	}

	@Test(priority = 1, groups = { "2020DefectUCR" }) // Raja Sadaraj
	public void Police2020recordsModule_253688(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253688");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsNIBRS();
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter779AsFalse();
		// objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.VerifyTypeAsIncidentReportDisabled();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.EnterAtCFS();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.selectSuspectOfUsingAsNotApplicable();
		records.fTC.SelectCriminalActivityAsNone();
		records.fTC.selectWeaponsUsedAsUnknown();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.EnterAtCFS1();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectAtNIBRS1();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.selectSuspectOfUsingAsNotApplicable();
		records.fTC.SelectCriminalActivityAsNone();
		records.fTC.selectWeaponsUsedAsUnknown();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.Save();
		records.switchToACD();
		records.aCD.Close();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.switchToReportStatus();
		records.reportStatus.ClickNibrsCheckButton();
		records.switchToNIBRSCheckError();
		records.nIBRSCheck.verifyAtDescriptionUsingCFS();
		// records.nIBRSCheck.verifyAtDescription2(1);
		records.nIBRSCheck.verifyAtDescriptionUsingCFS1();
		// records.nIBRSCheck.verifyAtDescription2(3);
		records.nIBRSCheck.closeScreen();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.SelectCFSAsSimpleAssault();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.switchToVictimOffender();
		records.victimOffender.ClickOffenderUnknownCheckBox();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.SelectCFSAsAggravatedAssault();
		records.nameVictim.clickAddButton();
		// records.nameVictim.clickOffenderIconUsingCFSCode();
		//
		// records.nameVictim.clickOffenderIconUsingCFSCode1();
		records.switchToVictimOffender();
		records.victimOffender.ClickOffenderUnknownCheckBox();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectCircumstances1AsArgument();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickNibrsCheckButton();
		records.switchToNIBRSCheckError();
		records.nIBRSCheck.verifyAtDescription1(0);
		records.nIBRSCheck.closeScreen();

		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		settings.switchToSystemParamter();
	}

	@Test(groups = { "2020DefectCallSearch" }) // Vijay
	public void verifyAbleToAddNamesWithActivityPoliceOfficerFromCallEntryScreen_253121(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "253121");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectAtActivity();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectAtActivity();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtNameID1();
		records.callEntry.callEntryNamesTab.selectAtActivity();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
	}

	@Test(priority = 3, groups = { "2020DefectIBRSubmissionSequential" }) // Vijay
	public void verifyAbleToCalculateVictimAgeBasedOnOccurredDate_253125(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "253125");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		// settings.switchToSystemParamter();
//		settings.sysParameter.setSystemparameter779AsFalse();
		// objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Name Entry");
		names.switchToNameEntry();
		names.nameEntry.EnterAtLastName();
		names.nameEntry.EnterAtFirstName();
		names.nameEntry.EnterAtAddress();
		names.nameEntry.switchToMainTab();
		names.nameEntry.nameEntryMainTab.enterBirthDateAsCurrentDate();
		names.nameEntry.nameEntryMainTab.verifyConfirmJuvenileNameWarningMessageInChrome();
		names.nameEntry.nameEntryMainTab.SelectAtSex();
		names.nameEntry.nameEntryMainTab.SelectRace();
		names.nameEntry.nameEntryMainTab.SelectEthnic();
		names.nameEntry.nameEntryMainTab.SelectResident();
		names.switchToNameEntry();
		names.nameEntry.SaveWithConfirmMessage();
		names.switchToNameEntry();
		String nameID = names.nameEntry.getNameID();
		names.nameEntry.SaveNCloseScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtCriminalActivity();
		records.fTC.selectSuspectOfUsingAsNotApplicable();
		records.fTC.selectWeaponsUsedAsNone();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterNameID(nameID);
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterNameID(nameID);
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickNamesTab();
		records.caseUpdate.caseUpdateNamesTab.verifyAtNameWithAtActivity();
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.selectRelationshipAsVictimWasFriend();
		records.victimOffender.clickAddButton();
		records.victimOffender.selectAtOffender1();
		records.victimOffender.selectRelationshipAsVictimWasFriend();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.selectAtInjuryLevel();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickNamesTab();
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(1);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.selectRelationshipAsVictimWasFriend();
		records.victimOffender.clickAddButton();
		records.victimOffender.selectAtOffender1();
		records.victimOffender.selectRelationshipAsVictimWasFriend();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.selectAtInjuryLevel();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.verifyNIBRSCheckTabAppearsGreenColor();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter2017AtFromDate();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("IBR Submission");
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSubmissionLink();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.enterAtToDate();
		records.iBRSubmissionEntry.clickGenerateFileButton();
		popup.confirm.yes();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.VerifyConfirmGenerateNIBRSSubmissionFile();
		records.iBRSubmissionEntry.verifyFileCreationStatusMessage();
		String batchNo = records.iBRSubmissionEntry.getBatchNo();
		records.iBRSubmissionEntry.closeScreen();
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSearch();
		records.iBRSubmissionScreenTab.clickBatchNoInGrid(batchNo);
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.clickViewTextFileButton();
	}

	@Test(priority = 2, groups = { "2020DefectUCR" }) // Vijay
	public void verifyAbleToUpdateBookingDateTime24HoursLaterThanArrestDateTime_253126(ITestContext testcontext) {
		testcontext.setAttribute("testID", "253126");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCR();
		// settings.switchToSystemParamter();
//		settings.sysParameter.setSystemparameter779AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter816AsTrue();
//		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Entry");
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.enterAtCaseNo();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.tabOutOfficer1();
		names.arrestEntry.arrestTab.SelectAtArmed();
		names.arrestEntry.arrestTab.enterBookingDate24HoursGreaterThanArrestDate();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.tabTheCaseNoEntries();
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.switchToArrestEntry();
		names.arrestEntry.SaveNCloseScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCR();
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter779AsFalse();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter816AsFalse();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Entry");
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.enterAtCaseNo();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.tabOutOfficer1();
		names.arrestEntry.arrestTab.SelectAtArmed();
		names.arrestEntry.arrestTab.enterBookingDate24HoursGreaterThanArrestDate();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.tabTheCaseNoEntries();
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.switchToArrestEntry();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		settings.switchToSystemParamter();
	}

	@Test(groups = { "2020DefcetUCR" }) // Vijay // Refer 253126
	public void verifyAbleToUpdateBookingDateTime24HoursLaterThanArrestDateTimeUsingSysParameter2001AsUCR_NIBRS_253126(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "254110");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter779AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter816AsTrue();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Entry");
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.enterAtCaseNo();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.tabOutOfficer1();
		names.arrestEntry.arrestTab.SelectAtArmed();
		names.arrestEntry.arrestTab.enterBookingDate24HoursGreaterThanArrestDate();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.tabTheCaseNoEntries();
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.SelectNIBRS();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.switchToArrestEntry();
		names.arrestEntry.SaveNCloseScreen();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter779AsFalse();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter816AsFalse();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Entry");
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.enterAtCaseNo();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.tabOutOfficer1();
		names.arrestEntry.arrestTab.SelectAtArmed();
		names.arrestEntry.arrestTab.enterBookingDate24HoursGreaterThanArrestDate();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.tabTheCaseNoEntries();
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.switchToArrestEntry();

	}

	@Test(priority = 8, groups = { "2020DefectReportSearchSequential" }) // Vijay
	public void verifyPaperClipFromCaseSearchScreenIsAbleToShowRestrictedOfficerReportOfficer1_254131(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "254131");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
	}

	@Test(priority = 9, groups = { "2020DefectReportSearchSequential" }) // Vijay
	public void verifyPaperClipFromCaseSearchScreenIsAbleToShowRestrictedOfficerReportOfficer2_254132(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "254132");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.caseUpdate.reportingTab.verifyAccessDeniedPopup();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		records.switchToCaseSearch();
		records.caseSearch.clickSearch();
		records.caseSearch.verifyReportStatusIconInGrid();
		records.caseSearch.clickApprovedReportStatusIconInGrid();
		records.switchToReportStatus();

	}

	@Test(groups = { "2020DefectReportEntry" }) // Automated by Stalin
	public void VerifyDVStateFormshouldOpenwithout_253111(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253111");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter734AsTrue();
		settings.switchToSystemParamter();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		popup.acknowledge.ok();
		records.switchToReportManager();
		records.reportManager.tabDateAndTime();
		records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickDomesticViolenceIcon(1);
		records.switchToDVEntry();
		records.dVEntry.SelectViolationofDomesticViolationYes();
		records.dVEntry.VerifyOffenseInformationfieldsDisabled();
		records.dVEntry.SelectViolationofDomesticViolationNo();
		records.dVEntry.SelectAtOffenderName();
		records.dVEntry.SaveScreen();
		records.dVEntry.CloseScreen();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.clickNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyAtName1InGrid(0);
		records.caseUpdate.caseUpdateNamesTab.VerifyAtName2InGrid(1);
		records.caseUpdate.caseUpdateNamesTab.VerifyAtName1InGrid(2);
		records.caseUpdate.caseUpdateNamesTab.VerifyAtName2InGrid(3);
		records.caseUpdate.caseUpdateNamesTab.ClickDomesticViolanceIconUsingVictim();
		records.switchToDVEntry();
		records.dVEntry.VerifyAtVictimLastName();
		records.dVEntry.verifyAtVictimFirstName();
		records.dVEntry.CloseScreen();
		records.switchToCaseUpdate();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter734AsFalse();
		settings.switchToSystemParamter();
	}

	@Test(priority = 3, groups = { "2020DefectUOFSequential" }) // Automated by Stalin
	public void VerifyUOFReportallowtoeditinRejected_253112(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253112");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.ClickUseOfForceButton();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.ClickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.EnterAtNameID();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.enterAtCharge();
		records.uOFEntry.incidentSubjectInformationTab.selectLocationType();
		records.uOFEntry.incidentSubjectInformationTab.selectReasonInitialContact();
		records.uOFEntry.incidentSubjectInformationTab.selectPatrolArea();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.SelectListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.EnterNotes();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.Save();
		records.uOFEntry.Close();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.CloseScreen();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.SelectCrimeAgainstAsSociety();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.SaveScreen();
		records.switchToFTC();
		records.fTC.CloseScreen();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.Save();
		records.switchToACD();
		records.aCD.Close();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.EnterAtSupervisor();
		records.reportManager.save();
		records.switchToReportManager();

	}

	@Test(priority = 4, groups = { "2020DefectUOFSequential" }) // Automated by Stalin
	public void UOFReportallowtoeditinReject_253113(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253113");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsReject();
		records.reportManager.updateStatusTab.SelectRejectionCode();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.Close();
		records.switchToReportStatus();
		records.reportStatus.ClickUseOfForceButton();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.clickAtOfficerInGrid();
		records.switchToUOFEntry();
		records.uOFEntry.verifySubjectNameIsEnabled();
		records.uOFEntry.Close();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.CloseScreen();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsMoreInfoNeeded();
		records.reportManager.updateStatusTab.SelectRejectionCode();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsMoreInfoNeededInMenuBar();
		records.reportManager.Close();
		records.switchToReportStatus();
		records.reportStatus.ClickUseOfForceButton();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.clickAtOfficerInGrid();
		records.switchToUOFEntry();
		records.uOFEntry.verifySubjectNameIsEnabled();

	}

	@Test(groups = { "2020DefectCallSearch" }) // Automated by Stalin
	public void Verifyabletoaddnameswithactivityvictim_253122(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253122");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtJNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtNameID1();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.EnterAtJNameID1();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
	}

	@Test(priority = 1, groups = { "2020DefectIBRSubmissionSequential" }) // Automated by Stalin
	public void Verifyabletocalculatethevictimagebased_253123(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253123");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter779AsFalse();
		settings.switchToSystemParamter();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Name Entry");
		names.switchToNameEntry();
		names.nameEntry.EnterAtLastName();
		names.nameEntry.EnterAtFirstName();
		names.nameEntry.EnterAtAddress();
		names.nameEntry.switchToMainTab();
		names.nameEntry.nameEntryMainTab.EnterAtBirthDate();
		names.nameEntry.nameEntryMainTab.verifyConfirmJuvenileNameWarningMessageInChrome();
		names.switchToNameEntry();
		names.nameEntry.nameEntryMainTab.SelectSex();
		names.nameEntry.nameEntryMainTab.SelectRace();
		names.nameEntry.nameEntryMainTab.SelectEthnic();
		names.nameEntry.nameEntryMainTab.SelectMaritalStatusAsMarried();
		names.nameEntry.nameEntryMainTab.SelectResident();
		names.nameEntry.SaveWithConfirmMessage();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.SaveScreen();
		records.switchToFTC();
		records.fTC.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		// records.callEntry.callEntryNamesTab.VerifyAtLastNameFirstNameInGrid(0);
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.SelectCFSAsSimpleAssault();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.selectRelationshipAsVictimWasFriend();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.VerifyNIBRSTabGreenColor();
		records.caseUpdate.SaveNClose();
		// IBR screeen is not supporting as per Testcase

		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("IBR Submission");
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSubmissionLink();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.EnterToDateAsCurrentDate();
		records.iBRSubmissionEntry.clickGenerateFileButton();
		records.iBRSubmissionEntry.VerifySaveConfirmMessage();
		records.switchToIBRSubmissionEntry();

	}

	@Test(priority = 2, groups = { "2020DefectIBRSubmissionSequential" }) // Automated by Stalin
	public void Verifyabletocalculateageoccuredbetween_253124(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253124");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter779AsFalse();
		settings.switchToSystemParamter();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Name Entry");
		names.switchToNameEntry();
		names.nameEntry.EnterAtLastName();
		names.nameEntry.EnterAtFirstName();
		names.nameEntry.EnterAtAddress();
		names.nameEntry.switchToMainTab();
		names.nameEntry.nameEntryMainTab.EnterAtBirthDate();
		names.nameEntry.nameEntryMainTab.verifyConfirmJuvenileNameWarningMessageInChrome();
		names.switchToNameEntry();
		names.nameEntry.nameEntryMainTab.SelectSex();
		names.nameEntry.nameEntryMainTab.SelectAtRace();
		names.nameEntry.nameEntryMainTab.SelectAtEthnic();
		names.nameEntry.nameEntryMainTab.SelectMaritalStatusAsMarried();
		names.nameEntry.nameEntryMainTab.SelectResident();
		names.nameEntry.SaveWithConfirmMessage();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.SaveScreen();
		records.switchToFTC();
		records.fTC.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		// records.callEntry.callEntryNamesTab.VerifyAtLastNameFirstNameInGrid(0);
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.selectRelationshipAsVictimWasFriend();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.VerifyNIBRSTabGreenColor();
		records.caseUpdate.SaveNClose();
		// IBR screeen is not supporting as per Testcase
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter2017AtFromDate();
		settings.sysParameter.saveScreen();
		loader.navigateToModule("Records");
		loader.navigateToScreen("IBR Submission");
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSubmissionLink();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.enterAtToDate();
		records.iBRSubmissionEntry.clickGenerateFileButton();
		records.iBRSubmissionEntry.VerifySaveConfirmMessage();
		records.switchToIBRSubmissionEntry();

	}

	@Test(priority = 5, groups = { "2020DefectCallEntrySequential" }) // Automated by Stalin
	public void VerifyReportstatusscreenopenwithout_253687(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253687");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		String readCaseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.SelectAtType1();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.ClickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterAtQuantity();
		property.propertyEntry.propertyEntryMainTab.enterAtValue();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.tabOutQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.selectAtDisposition();
		property.propertyEntry.recoveredTab.enterAtInitialStorageLocation();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.clickReportDetailsButton();
		records.switchToReportManager();
		records.reportManager.Close();
		property.switchToPropertyEntry();
		property.propertyEntry.closeTheScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterCaseNoByActiveData(readCaseNo);
		records.switchToCaseSearch();
		records.caseSearch.clickSearch();
		records.caseSearch.clickReportIconInGrid(0);
		records.switchToReportStatus();
		records.reportStatus.verifyReviewedCheckBoxIsEnabled();

	}

	@Test // Automated by Stalin
	public void VerifydeletedpropertyshownReportentry(ITestContext testContext) {

		testContext.setAttribute("testID", "253693");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.Close();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsApproved();
		records.reportStatus.close();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.VerifyAtPropertyNoInGrid(1);
		records.caseUpdate.caseUpdatePropertyTab.SelectPropertyRowInGrid(1);
		property.switchToPropertyIndex();
		property.propertyIndex.ClickDelete();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectAtStatus();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsMoreInfoNeeded();
		records.reportManager.updateStatusTab.selectRejectionCodeAsSpellingErrors();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsMoreInfoNeededInMenuBar();
		records.reportManager.Close();
		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.attachPropertyPopup.verifyRowviewedRedColor();

	}

	@Test(groups = { "2020DefectCaseSearch" }) // Automated by Stalin
	public void VerifyabletosavetheNameVictimscreen_253781(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253781");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.VerifyNameInfoIcon();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.VerifyNameInfoIcon();
		records.caseNames.SelectAtActivity1();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(1);
		records.switchToNameVictim();
		records.nameVictim.SelectAtVictimType();
		records.nameVictim.SelectAtCFS();
		records.nameVictim.clickAddButton();
		records.nameVictim.VerifyDomesticViolationAcknowledgeMessage();
		records.switchToNameVictim();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectAtRelationship();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();
		records.caseNames.Save();
		records.switchToCaseNames();
	}

	@Test(groups = { "2020DefectCaseSearch" }) // Automated by Stalin
	public void Verifyabletorestrictthechargeduplication_253782(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253782");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.enterAtDescription();
		popup.kPICodedLookup.clickSearchIcon();
		popup.kPICodedLookup.clickAtChargeInGrid();
		records.switchToACD();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.enterAtCharge1();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.enterAtDescription1();
		popup.kPICodedLookup.clickSearchIcon();
		popup.kPICodedLookup.clickAtCharge1InGrid();
		records.switchToACD();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectAtActivity1();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.SelectAtVictimType();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectAtRelationship();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();
		records.caseNames.Save();
		records.switchToCaseNames();

	}

	@Test(groups = { "2020DefectUOF" }) // Automated by Stalin
	public void VerifyInjuryDetailsshouldprinting(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253783");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUseOfForceTab();
		records.caseUpdate.caseUpdateUseOfForceTab.clickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.EnterAtSubjectLastName();
		records.uOFEntry.EnterAtSubjectFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.SelectName();
		records.switchToUOFEntry();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.selectLocationType();
		records.uOFEntry.incidentSubjectInformationTab.selectReasonInitialContact();
		records.uOFEntry.incidentSubjectInformationTab.selectPatrolArea();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.selectAtListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.selectAtEffectiveness();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.Save();
		records.uOFEntry.verifyAttachmentsTabIsDisplayed();
		records.uOFEntry.verifyDispositionTabIsDisplayed();
		records.uOFEntry.verifyInjuryReportTabIsDisplayed();
		records.uOFEntry.verifyApprovalTabIsDisplayed();
		records.uOFEntry.ClickInjuryReportTab();
		records.uOFEntry.injuryReportTab.clickSubjectRadioButton();
		records.uOFEntry.injuryReportTab.clickFrontUpperLeftChestPart();
		records.uOFEntry.injuryReportTab.clickRearRightShoulder();
		records.uOFEntry.injuryReportTab.clickSave();
		records.switchToUOFEntry();
		records.uOFEntry.VerifySuccessfulBottomMessage();
		records.uOFEntry.ClickInjuryReportTab();
		records.uOFEntry.injuryReportTab.clickOfficerRadioButton();
		records.uOFEntry.injuryReportTab.clickFrontUpperLeftChestPart();
		records.uOFEntry.injuryReportTab.clickRearRightShoulder();
		records.uOFEntry.injuryReportTab.clickSave();
		records.switchToUOFEntry();
		records.uOFEntry.Save();
		records.uOFEntry.clickPrintIcon();
		home.switchToSelectReport();
		home.selectReport.clickUOFDetailsInGrid();
		records.switchToUOFDetail();
		records.uOFDetail.Close();
		home.switchToSelectReport();
		home.selectReport.CloseTheScreen();
		records.switchToUOFEntry();
		records.uOFEntry.Close();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		records.switchToCaseSearch();
		records.caseSearch.ClickReset();
		records.caseSearch.selectAtJuris();
		records.caseSearch.EnterAtCaseNo1();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUseOfForceTab();
		records.caseUpdate.caseUpdateUseOfForceTab.clickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.EnterAtSubjectLastName();
		records.uOFEntry.EnterAtSubjectFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectAtJuris();
		names.nameSearchHelpWindow.SelectName();
		records.switchToUOFEntry();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.selectLocationType();
		records.uOFEntry.incidentSubjectInformationTab.selectReasonInitialContact();
		records.uOFEntry.incidentSubjectInformationTab.selectPatrolArea();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.selectAtListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.selectAtEffectiveness();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.Save();
		records.uOFEntry.verifyAttachmentsTabIsDisplayed();
		records.uOFEntry.verifyDispositionTabIsDisplayed();
		records.uOFEntry.verifyInjuryReportTabIsDisplayed();
		records.uOFEntry.verifyApprovalTabIsDisplayed();
		records.uOFEntry.ClickInjuryReportTab();
		records.uOFEntry.injuryReportTab.clickSubjectRadioButton();
		records.uOFEntry.injuryReportTab.clickFrontUpperLeftChestPart();
		records.uOFEntry.injuryReportTab.clickRearRightShoulder();
		records.uOFEntry.injuryReportTab.clickSave();
		records.switchToUOFEntry();
		records.uOFEntry.VerifySuccessfulBottomMessage();
		records.uOFEntry.ClickInjuryReportTab();
		records.uOFEntry.injuryReportTab.clickOfficerRadioButton();
		records.uOFEntry.injuryReportTab.clickFrontUpperLeftChestPart();
		records.uOFEntry.injuryReportTab.clickRearRightShoulder();
		records.uOFEntry.injuryReportTab.clickSave();
		records.switchToUOFEntry();
		records.uOFEntry.Save();
		records.uOFEntry.clickPrintIcon();
		home.switchToSelectReport();
		home.selectReport.clickUOFDetailsInGrid();
		records.switchToUOFDetail();
		records.uOFDetail.Close();
		home.switchToSelectReport();
		home.selectReport.CloseTheScreen();
		records.switchToUOFEntry();
		records.uOFEntry.Close();
		records.switchToCaseUpdate();

	}

	@Test(groups = { "2020DefectCallEntry" }) // Automated by Stalin
	public void Verifytheprosecutorreviewactivityname(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "254129");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		String readCaseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.closeTheScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Entry");
		names.switchToArrestEntry();
		names.arrestEntry.EnterAtLastName();
		names.arrestEntry.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.SelectName();
		names.switchToArrestEntry();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.enterCaseNoByActiveData(readCaseNo);
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.tabTheCaseNoEntries();
		names.arrestEntry.chargeTab.verifyCaseNoByActiveData(readCaseNo);
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectAtStatus();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.chargeTab.verifyActiveCaseNoInGrid(readCaseNo, 0);
		names.arrestEntry.SaveNCloseScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterCaseNoByActiveData(readCaseNo);
		records.switchToCaseUpdate();
		records.caseUpdate.clickNamesTab();
		records.caseUpdate.caseUpdateNamesTab.selectAtActivityInGrid();
		names.switchToArrestEntry();

	}

	@Test(groups = { "2020DefectCaseSearch2" }) // Automated by Stalin
	public void NIBRSErrormessagedisplayedforArrest_254133(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "254133");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtPropertyLoss();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.ClickMethodOfEntryForcedRadioButton();
		records.fTC.SelectHateIndicator();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.SelectAtDomesticViolence();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectAtActivity();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtNameID1();
		records.callEntry.callEntryNamesTab.selectAtActivity1();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.SelectAtVictimType();
		records.nameVictim.selectAtCFSDescription1();
		records.nameVictim.clickAddButton();
		records.nameVictim.VerifyDomesticViolationAcknowledgeMessage();
		records.switchToNameVictim();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectAtRelationship();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyAtNameInGrid(0);
		records.caseUpdate.caseUpdateNamesTab.VerifyAtName1InGrid(1);
		records.switchToCaseUpdate();
		records.caseUpdate.SaveNClose();

		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Entry");
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.enterAtCaseNo();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.tabOutOfficer1();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.tabTheCaseNoEntries();
		names.arrestEntry.chargeTab.enterAtCharge();
		// popup.switchToCodedSearch();
		// popup.kPICodedLookup.randomKPIHelpSelect();
		// names.switchToArrestEntry();
		// names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.TabTheCount();
		names.arrestEntry.chargeTab.selectAtStatus();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.SaveNCloseScreen();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.caseSearch.reloadCaseSearch();
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.verifyAtDescriptionInGrid();

	}

	@Test(groups = { "2020DefectIncidentReports" }) // Mithun //Changed By Vijay
	public void records_251116(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251116");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter736AsDivSec();
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter779AsFalse();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter785AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter835AsTrue();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectCrimeAgainstAsProperty();
		records.fTC.SelectPropertyLossAsStolen();
		records.fTC.SelectLocationType();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.SelectCriminalActivityAsNone();
		records.fTC.selectWeaponsUsedAsNone();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.ClickUnknownCheckbox();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(1);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.selectCFSByIndex();
		records.nameVictim.clickAddButton();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectInjuryLevel();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.enterAtCaseNumberAndTab();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDecriptionAs10Shirts();
		property.propertyEntry.propertyEntryMainTab.EnterValueAs100();
		property.propertyEntry.propertyEntryMainTab.EnterAtLastName();
		property.propertyEntry.propertyEntryMainTab.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.SelectAtDivision();
		records.reportManager.updateStatusTab.SelectAtSection();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifiyStatusAsSubmitted();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.Saveandclose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsApproved();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Settings");
		loader.navigateToModule("Names");
		loader.navigateToScreen("Expungement");
		names.switchToExpungement();
		names.expungement.EnterAtNameID();
		names.expungement.SelectTypeAsExpungement();
		names.expungement.EnterReason();
		names.expungement.deleteAtActivityRow();// Changed
		names.expungement.VerifyDeleteNameConfirmWindowMessage();
		settings.switchToPhoenixAuthenticatorWindow();
		settings.phoenixAuthenticatorWindow.enterAtPassword();
		settings.phoenixAuthenticatorWindow.clickAcceptButton();
		names.expungement.VerifyExpungeCompletedAcknowledgeMessage();
		names.BackToExpungement();
		names.expungement.EnterReason();
		names.expungement.deleteAtActivityRow1();
		names.expungement.VerifyDeleteNameConfirmWindowMessage();
		settings.switchToPhoenixAuthenticatorWindow();
		settings.phoenixAuthenticatorWindow.enterAtPassword();
		settings.phoenixAuthenticatorWindow.clickAcceptButton();
		names.expungement.VerifyExpungeCompletedAcknowledgeMessage();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsMoreInfoNeeded();
		records.reportManager.updateStatusTab.SelectRejectionCode();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsMoreInfoNeeded();

	}

	@Test(groups = { "2020DefectIncidentReports" }) // Mithun //Changed By Vijay
	public void records_251117(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251117");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter736AsDivSec();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter785AsTrue();
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter779AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter835AsTrue();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.VerifyOnlyPrimeOfficerWriteInitialAcknowledgeMessage();// Changed
		records.switchToReportManager();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.SelectCriminalActivityAsOtherGang();
		records.fTC.SelectWeaponsUsedAsPersonalWeapon();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.ClickUnknownCheckbox();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.ClickPopupAtChargeInGrid();
		names.arrestEntry.ClickPopupCopyButton();
		names.switchToArrestEntry();
		names.arrestEntry.EnterAtLastName();
		names.arrestEntry.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		names.switchToArrestEntry();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.VerifyAtCaseNo();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.EnterOffenderID();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectStatusAsArrestedJuvenile();
		names.arrestEntry.chargeTab.selectAtAgencyAction();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.SaveNCloseScreen();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.EnterAtLastName1();
		records.caseNames.EnterAtFirstName1();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastName1AndFirstName1();
		records.switchToCaseNames();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectCircumstances1AsOtherNegligentWeaponHandling();
		records.nameVictim.saveNClose();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.SelectAtDivision();
		records.reportManager.updateStatusTab.SelectAtSection();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifiyStatusAsSubmitted();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.Saveandclose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyReportStatusAsApproved();

	}

	@Test(groups = { "2020DefectIncidentReports" })
	public void records_251118(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251118");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();

		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.nameSearchHelpWindow.SelectAtNameRow();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();

		records.caseUpdate.reportingTab.clickAddReportButton();

		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.close();

		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.SelectAsStatementReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();
		records.reportManager.save();
		records.reportManager.verifyNoAcknowledgePopup();
		records.switchToReportManager();
		records.reportManager.SelectAtStatementName();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.Close();
		records.switchToReportStatus();
		records.reportStatus.close();

	}

	@Test(priority = 12, groups = { "2020DefectCaseSearchSequential" })
	// Automated by Mithun
	public void PoliceDefect2020_251305(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251305");

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter785AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter835AsTrue();
		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.ClickShowMyItemsOnly();
		home.myHome.myReportsTab.SelectStatusAsSubmitted();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsApproved();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.VerifyReportedPFSearchButtonDisabled();

	}

	@Test(priority = 11, groups = { "2020DefectCaseSearchSequential" })
//Automated by Mithun
	public void PoliceDefect2020_251304(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251304");

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter736AsDivSec();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();

		records.caseUpdate.clickReportingTab();

		records.caseUpdate.reportingTab.clickAddReportButton();

		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();

		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.switchToACD();
		records.aCD.clickAddButton();

		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		// records.fTC.selectPropertyLossAsStolen();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.SelectCrimeAgainstAsSociety();
		records.fTC.saveNClose();
		records.switchToACD();

		records.aCD.TaboutOccuredAT();

		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifiyStatusAsSubmitted();
		records.reportManager.Close();
		records.switchToReportStatus();

	}

	@Test(groups = { "2021DefectTestCases2" })
	// Mithun//Changed By Vijay
	public void records_251469(ITestContext testContext) {
		testContext.setAttribute("testID", "251469");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCR();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.arrestTab.VerifyAtCaseNo();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.EnterOffenderID();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.switchToArrestEntry();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.VerifyAtCaseNo();
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.randomKPIHelpSelect();
		names.switchToArrestEntry();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.TabTheCount();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.switchToArrestEntry();
		names.arrestEntry.SaveNCloseScreen();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.ClickPopupGridCheckboxUsingAtCharge();
		records.aCD.ClickPopupCopyButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.selectSuspectOfUsingAsNotApplicable();
		records.fTC.SelectCriminalActivityAsOtherGang();
		records.fTC.SelectWeaponsUsedAsPersonalWeapon();
		records.fTC.SelectBiasMotivation();
		records.fTC.ClickSaveNClose();
		records.switchToACD();
		records.aCD.ClickUnknownCheckbox();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		settings.switchToSystemParamter();
	}

	@Test(groups = { "2020DefectCallEntry" }) // mithun
	public void PoliceDefect2020_251239(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251239");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter734AsFalse();
		loader.navigateToScreen("Juris");
		settings.switchToJurisEntry();
		settings.juris.selectAtJuris();
		settings.juris.saveNcloseButton();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.SelectAtJuris();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.tabTheCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
	}

	@Test

//Automated by Mithun
	public void PoliceDefect2020_251754(ITestContext testContext) {

		testContext.setAttribute("testID", "251754");

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter794AsTrue();
		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();

		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();

		records.caseUpdate.clickReportingTab();

		records.caseUpdate.reportingTab.clickAddReportButton();

		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();

		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.switchToACD();
		records.aCD.clickAddButton();

		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectPropertyLossAsStolen();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.SelectCrimeAgainstAsSociety();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.ClickUnknownCheckbox();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.SelectAtDivision();
		records.reportManager.updateStatusTab.SelectAtSection();
		records.reportManager.updateStatusTab.SelectAtSquad();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifiyStatusAsSubmitted();

		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsApproved();
		records.reportStatus.ClickCaseInfoIcon();

		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNotForPublicUnChecked();
		records.caseUpdate.closeTheScreen();

		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();

		records.caseSearch.selectDomesticViolenceAsYes();
		records.caseSearch.clickSearch();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNotForPublicUnChecked();
		records.caseUpdate.closeTheScreen();
	}

	@Test // Automated by Mithun
	public void PoliceDefect2020_251753(ITestContext testContext) {

		testContext.setAttribute("testID", "251753");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter794AsFalse();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();

		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();

		records.caseUpdate.clickReportingTab();

		records.caseUpdate.reportingTab.clickAddReportButton();

		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();

		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.switchToACD();
		records.aCD.clickAddButton();

		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectPropertyLossAsStolen();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.SelectCrimeAgainstAsSociety();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsYes();
		records.aCD.SaveNClose();

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifiyStatusAsSubmitted();

		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsApproved();
		records.reportStatus.ClickCaseInfoIcon();

		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNotForPublicUnChecked();
		records.caseUpdate.closeTheScreen();

		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();

		records.caseSearch.selectDomesticViolenceAsYes();
		records.caseSearch.clickSearch();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNotForPublicUnChecked();

	}

	@Test // July Sprint 1 Automated By Mahesha
	public void PoliceDefect2020_248797(ITestContext testContext) {
		testContext.setAttribute("testID", "248797");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.ClickAtProprtyNoInGrid();
		property.switchToPropertyIndex();
		property.propertyIndex.ClickOnRecoveredTab();
		property.propertyIndex.recoveredTab.verifyInitialStrorageLocation();
		property.propertyIndex.closeTheScreen();

		loader.navigateToModule("Property");
		loader.navigateToScreen("Property Update");
		property.switchToPropertyUpdate();
		property.propertyUpdate.clickMoreFiltersButton();
		property.propertyUpdate.enterAtPropertyNo();
		property.propertyUpdate.clickSearchButton();
		property.propertyUpdate.clickUpdateCheckboxByCaseNo();
		property.propertyUpdate.clickUpdateButton();

		property.propertyUpdate.propertyUpdatePopup.tabTheDateAndTime();
		property.propertyUpdate.propertyUpdatePopup.selectActionAsSTLSentToLab();
		property.propertyUpdate.propertyUpdatePopup.EnterAtReceivedBy();
		property.propertyUpdate.propertyUpdatePopup.ClickUpdateButton();

		property.switchToPropertyUpdate();
		property.propertyUpdate.verifyAtStatusUsingPropertyNo();

		property.propertyUpdate.ClickAtPropertyNoInGrid();
		property.switchToPropertyIndex();
		property.propertyIndex.ClickOnRecoveredTab();
		property.propertyIndex.recoveredTab.verifyCurrentStorageLocationEmpty();
		property.propertyIndex.ClickPropertyBblIcon();

		property.switchToPropertyEntry();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.verifyInitialStrorageLocation();
	}

	@Test(groups = { "2020DefectCaseSearch2" }) // July Sprint 1 Automated By Mahesha
	public void PoliceDefect2020_248831(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "248831");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.SelectDegree();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();
		records.reportManager.VerifyPFNotRelatedToConfirmPopupMessage();
		records.reportManager.Saveandclose();

		records.switchToReportStatus();
		records.reportStatus.close();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.caseUpdate.reportingTab.verifyAccessDeniedPopup();
		records.switchToCaseUpdate();
	}

	@Test(priority = 5, groups = { "2020DefectReportSearchSequential" }) // July Sprint 1Automated By Mahesha
	public void PoliceDefect2020NIBRSCheck_249393(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "249393");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();

		records.caseUpdate.clickReportingTab();

		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();
		records.reportManager.EnterReportDescriptionAsReportType();
		records.reportManager.Saveandclose();

		records.switchToReportStatus();

		records.reportStatus.clickCaseDataButton();

		records.switchToACD();
		records.aCD.EnterAtCFS();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.clickAtDescription();
		records.switchToACD();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.saveNClose();
		records.switchToACD();

		records.aCD.TaboutOccuredAT();

		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();

	}

	@Test(priority = 6, groups = { "2020DefectReportSearchSequential" }) // July Sprint 1 Automated By Mahesha
	public void PoliceDefect2020NIBRSCheck_249394(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "249394");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();

		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.EnterAtNameID1();
		records.caseNames.ClickNameInfoButton();
		names.switchToNameEntry();
		names.nameEntry.switchToMainTab();
		names.nameEntry.nameEntryMainTab.SelectAtSex();
		names.nameEntry.nameEntryMainTab.SelectAtRace();
		names.nameEntry.nameEntryMainTab.SelectAtEthnic();
		names.nameEntry.nameEntryMainTab.SelectAtResident();
		names.nameEntry.SaveNCloseScreen();
		records.switchToCaseNames();
		records.caseNames.SelectAtActivity1();
		records.caseNames.clickAddButton();
		records.caseNames.Save();

		records.switchToCaseNames();

		records.caseNames.VerifyVictimOffenderIcon(1);
		records.caseNames.clickOnVitimIcon(1);
		records.switchToNameVictim();
		records.nameVictim.SelectAtVictimType();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.clickAddButton();
		records.nameVictim.VerifyDomesticViolationAcknowledgeMessage();
		records.switchToNameVictim();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.ClickOffenderIcon();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectAtRelationship();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();

		records.switchToCaseNames();
		records.caseNames.enterAtNameID2();
		records.caseNames.ClickNameInfoButton();
		names.switchToNameEntry();
		names.nameEntry.switchToMainTab();
		names.nameEntry.nameEntryMainTab.ClearSex();
		names.nameEntry.nameEntryMainTab.ClearRace();
		names.nameEntry.nameEntryMainTab.ClearEthinic();
		names.nameEntry.nameEntryMainTab.clearResident();
		names.nameEntry.SaveNCloseScreen();
		records.switchToCaseNames();
		records.caseNames.SelectAtActivity2();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.VerifyVictimOffenderIcon(1);
		records.caseNames.clickOnVitimIcon(1);
		records.switchToNameVictim();
		records.nameVictim.SelectAtVictimType();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.clickAddButton();
		records.nameVictim.VerifyDomesticViolationAcknowledgeMessage();
		records.switchToNameVictim();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.switchToVictimOffender();
		records.nameVictim.ClickOffenderIcon();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectAtRelationship();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();

	}

	@Test(groups = { "2020DefectCaseUpdateTabs" }) // Aug Sprint 3 Automated By Mahesha
	public void PoliceDefect2020_251236(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251236");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();

		records.caseUpdate.clickReportingTab();

		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();

		records.reportManager.VerifyPFNotRelatedToConfirmPopupMessage();
		records.reportManager.Saveandclose();

		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfSupplementalReportAsOnHold();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.EnterAtCFS();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtPropertyLoss();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.selectPoliceForceUsed();
		records.switchToACD();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.verifyGamblingAndSafeEnterNotEnabled();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.EnterReportDescriptionAsReportType();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectAtAction();
		records.reportManager.updateStatusTab.EnterAtSupervisor();
		records.reportManager.Saveandclose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyAtReportStatus();

	}

	@Test(groups = { "2020DefectCaseSearch2" }) // Aug Sprint 3 Automated By Mahesha
	public void PoliceDefect2020DVReport_251309(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251309");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();

		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.VerifyPFNotRelatedToConfirmPopupMessage();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickCaseDataButton();

		records.switchToACD();
		records.aCD.EnterAtCFS();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.saveNClose();
		records.switchToACD();

		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();

		records.aCD.SelectDomesticViolanceAsYes();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.EnterAtLastName();
		records.caseNames.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCaseNames();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.Save();

		records.switchToCaseNames();
		records.caseNames.EnterAtLastName1();
		records.caseNames.EnterAtFirstName1();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.SelectName();
		records.switchToCaseNames();
		records.caseNames.SelectAtActivity1();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.VerifyDomesticViolenceIcon(0);

	}

	@Test(groups = { "2020DefectCaseSearch2" }) // Aug Sprint 3Automated By Mahesha
	public void PoliceDefect2020DVReport_251311(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251311");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
	}

	/**
	 * @param testContext
	 */
	@Test(groups = { "2020DefectCaseSearch2" }) // Aug Sprint 3 Automated By Mahesha
	public void PoliceDefect2020_251312(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251312");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.ClickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterAtValue();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		String ReportDateTime = property.propertyEntry.recoveredTab.readPropertyGeneratedDateAndTime();
		property.propertyEntry.recoveredTab.tabOutQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.selectAtDisposition();
		property.propertyEntry.recoveredTab.enterAtInitialStorageLocation();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		String PropertyNo = property.propertyEntry.readPropertyNo();
		property.propertyEntry.ClickSubmitButton();
		property.propertyEntry.VerifyConfirmSubmitMessage();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.verifyAtPropertyNo(PropertyNo, 0);
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.VerifyTypeAsPropertyReportInGrid();
		records.caseUpdate.reportingTab.verifyPropertyReportStatusAsLocked(0);
		records.caseUpdate.reportingTab.verifyPropertyReportGenetatedTime(ReportDateTime, 0);
	}

	@Test(priority = 1, groups = { "2020DefectCaseSearch" }) // Aug Sprint 3 Automated By Mahesha
	public void PoliceDefect2020_251466(ITestContext testContext) throws IOException {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251466");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		// loader.navigateToModule("Settings");
		// loader.navigateToScreen("System Parameter");
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter779AsTrue();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();
		records.reportManager.VerifyPFNotRelatedToConfirmPopupMessage();
		records.reportManager.Saveandclose();

		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();

		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.EnterAtCFS();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtPropertyLoss();
		// records.fTC.selectAtWeaponsForceUsed();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.selectallChrageCheckPopup();
		names.arrestEntry.ClickPopupCopyButton();
		names.arrestEntry.switchToArrestTab();
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.enterAtOfficer1();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.ClickAtChargeInGrid();
		names.arrestEntry.chargeTab.EnterCountAs1();
		names.arrestEntry.chargeTab.selectAtStatus();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.switchToArrestEntry();
		names.arrestEntry.SaveNCloseScreen();
		records.switchToReportStatus();

	}

	@Test(priority = 2, groups = { "2020DefectCaseSearch" }) // Aug Sprint 3 Automated By Mahesha
	public void PoliceDefect2020_251467(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251467");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.SaveNClose();

		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectAtNIBRS1();
		// property.propertyEntry.propertyEntryMainTab.selectAtReason();
		// property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.SelectAtDrugType();
		property.propertyEntry.propertyEntryMainTab.SelectAtMeasurement();
		property.propertyEntry.propertyEntryMainTab.EnterAtDrugQuantity();
		property.propertyEntry.propertyEntryMainTab.clickOwnerUnknownCheckbox();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.TabOutDrugQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.SelectAtStatus();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.closeTheScreen();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectAtNIBRS1();
		// property.propertyEntry.propertyEntryMainTab.selectAtReason();
		// property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.SelectDrugTypeAsHeroin();
		property.propertyEntry.propertyEntryMainTab.SelectAtMeasurement1();
		property.propertyEntry.propertyEntryMainTab.EnterAtDrugQuantity1();
		property.propertyEntry.propertyEntryMainTab.clickOwnerUnknownCheckbox();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.TabOutDrugQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.SelectAtStatus();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.closeTheScreen();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectAtNIBRS1();
		// property.propertyEntry.propertyEntryMainTab.selectAtReason();
		// property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.SelectAtDrugType2();
		property.propertyEntry.propertyEntryMainTab.clickOwnerUnknownCheckbox();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.TabOutDrugQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.SelectAtStatus();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.closeTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();

	}

	@Test(priority = 3, groups = { "2020DefectCaseSearch" }) // Aug Sprint 3 Automated By Mahesha
	public void PoliceDefect2020_251468(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251468");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.VerifyNIBRSCheckButtonGreen();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.Saveandclose();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter2017AsCurrentMonthYear();

		loader.navigateToModule("Records");
		loader.navigateToScreen("IBR Submission");
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSubmissionLink();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.tabAtToDate();
		records.iBRSubmissionEntry.clickGenerateFileButton();
		records.iBRSubmissionEntry.VerifySaveConfirmMessage();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.VerifyConfirmGenerateNIBRSSubmissionFile();
		String BatchNo = records.iBRSubmissionEntry.getBatchNo();
		records.iBRSubmissionEntry.verifyFileCreationStatusMessage();
		records.iBRSubmissionEntry.Close();

		loader.navigateToScreen("IBR Submission");
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSearch();
		records.iBRSubmissionScreenTab.ClickBatchNoInGrid(BatchNo);
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.clickViewTextFileButton();
		records.switchToViewTextFileEntry();
		records.iBRSubmissionEntry.verifyMsgInsideTextFile();

	}

	@Test(groups = { "2020DefectReportsVerify" }) // Raja Sadaraj
	public void Police2020recordsModule_254610(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "254610");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter272AsFalse();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.logout();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseSearch.VerifyAt13AccessRestrictedByOfficerAckMsg();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.EnterFromAndEndAtCaseNo();
		records.reportSearch.SelectReportTypeAsIncidentReport();
		records.reportSearch.clickSearch();
		records.reportSearch.SelectApprovedReport();
		records.reportSearch.VerifyAt13AccessRestrictedByOfficerAckMsg();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Property");
		loader.navigateToScreen("Property Search");
		property.switchToPropertySearch();
		property.propertySearch.EnterFromCaseDetails();
		property.propertySearch.EnterToCaseDetails();
		property.propertySearch.clickSearch();
		property.switchToPropertySearch();
		property.propertySearch.ClickAtCaseNoInGrid();
		property.propertySearch.Verify39AccessdeniedScreenIDAckMsg();

	}

	@Test(priority = 15, groups = { "2020DefectReportSearchSequential" }) // Raja Sadaraj
	public void Police2020recordsModule_255989(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "255989");

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter272AsTrue();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.logout();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtCaseNo();
		records.caseSearch.VerifyNoRecordAcknowledgeMessage();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.EnterFromAndEndAtCaseNo();
		records.reportSearch.SelectReportTypeAsIncidentReport();
		records.reportSearch.clickSearch();
		records.reportSearch.VerifyNoRecordAcknowledgeMessage();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Property");
		loader.navigateToScreen("Property Search");
		property.switchToPropertySearch();
		property.propertySearch.EnterFromCaseDetails();
		property.propertySearch.EnterToCaseDetails();
		property.propertySearch.clickSearch();
		property.propertySearch.VerifyNoRecordAcknowledgeMessage();
		loader.logout();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter272AsFalse();
		settings.switchToSystemParamter();
	}

	@Test(groups = { "2020DefectCallEntry" }) // Raga Ranjani

	public void Police2020DefectrecordsModule_253695(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253695");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.verifyAddressBubbleIconDisplayed();
		records.walkInEntry.clickReset();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation1();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.verify6071ConfirmMessage();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();

	}

	@Test(groups = { "2020DefectCallEntry" }) // Raga Ranjani

	public void Police2020DefectrecordsModule_253780(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253780");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.EnterAtLastName();
		records.caseNames.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCaseNames();
		records.caseNames.selectActivityAsOffender();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickAtNameInGrid();
		records.caseNames.ClickNameInfoButton();
		names.switchToNameEntry();
		names.nameEntry.SelectPhoneTypeAsHome();
		names.nameEntry.SaveNCloseScreen();
		records.switchToCaseNames();
		records.caseNames.verifyUpdateButtonDisplayed();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();

	}

	@Test(groups = { "2020DefectCaseUpdateTabs" })
	public void PoliceSprintRecord_254485(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "254485");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.clickAdvancedTab();
		records.caseSearch.ClickHoldForPublicCheckBox();
		records.caseSearch.clickSearch();
		records.caseSearch.SelectRowInGrid(1);
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.caseUpdate.VerifyNotForPublicChecked();
		records.switchToCaseUpdate();
	}

	@Test(groups = { "2020DefectReportSearch" })
	public void PoliceSprintRecord_254484(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "254484");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter794AsTrue();

		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.caseSearch.ClickCaseNoInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolation();
		records.aCD.SaveNClose();
		records.switchToReportStatus();

		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.ClickSaveWithConfirm();
		records.switchToReportManager();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.ClickSaveWithConfirm();

		records.switchToReportManager();
		records.reportManager.clickCaseInfoIcon();

		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNotForPublicChecked();
		objectIdentification.windowHandle.switchToMainWindow();
		records.switchToCaseSearch();
		records.caseSearch.SelectDomesticViolenceAsNo();
		records.caseSearch.clickSearch();
		records.caseSearch.ClickRowAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNotForPublicNotChecked();

	}

	@Test(groups = { "2020DefectReportSearch" }) // Vijay
	public void VerifyTheOfficerNameIsShowLastNameFirstNameFormat_254493(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "254493");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		String caseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectAtType();
		records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickSearch();
		records.reportSearch.mouseHoverCaseNumberAndVerify(caseNo);
		records.reportSearch.mouseHoverAtOfficerAndVerify();

	}

	@Test(groups = { "2020DefectCallEntry" }) // Vijay
	public void verifyCallSummaryTabIsNotChangeToBlueColorWhenCreateACallFromWalkInEntryscreen_254611(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "254611");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.verifyCallEntrySummaryTabColourAsBlack();
		records.callEntry.swithchtoCallSummaryTab();
		records.callEntry.callSummaryTab.selectFirstAvailableTemplate();
		records.callEntry.callSummaryTab.clickLoadButton();
		records.callEntry.callSummaryTab.saveCallsummaryTab();
		;
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.verifyCallEntrySummaryTabColourAsBlue();
	}

	@Test(groups = { "2020DefectReportEntry" }) // Vijay
	public void verifyOptionalReportEntryDataCollectionBasedOnParameter_254786(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "254786");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter832AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter833AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter834AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter835AsTrue();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectAtType();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfSupplementalReportAsOnHold();
		List<String> allText = records.reportStatus.getHeaderButtonsWhichAreAvailable();
		records.reportStatus.close();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter832AsFalse();
		objectIdentification.windowHandle.switchToMainWindow();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter833AsFalse();
		objectIdentification.windowHandle.switchToMainWindow();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter834AsFalse();
		objectIdentification.windowHandle.switchToMainWindow();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter835AsFalse();
		objectIdentification.windowHandle.switchToMainWindow();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		List<String> limitedText = records.reportStatus.getHeaderButtonsWhichAreAvailable();
		records.reportStatus.verifyDifferenceInHeaderButtons(allText, limitedText);

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter832AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter833AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter834AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter835AsTrue();
		settings.switchToSystemParamter();
	}

	@Test(groups = { "2020DefectCallSearch" }) // Vijay
	public void verifyThatCallEntryReportDueAndCADDispositionFieldsAllowingToEditWhenRole2443Enabled_255131(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "255131");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.clickEditTab();
		records.callEntry.callEntryEditTab.verifyCADDispositionIsEnabled();
		records.callEntry.callEntryEditTab.enterAtCADDisposition();
		records.callEntry.callEntryEditTab.verifyReportDueIsEnabled();
		records.callEntry.callEntryEditTab.selectAtReportDue();
		records.callEntry.callEntryEditTab.verifyAllOtherTabsAreINReadOnlyMode();
	}

	@Test(groups = { "2020DefectRecordRequest" }) // Vijay
	public void verifyViewDiscoveryRequestShouldWorkingForAllStatusrecords_255337(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "255337");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");

		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCallEntry();
		records.callEntry.clickGenerateCheckbox();
		records.callEntry.save();
		records.switchToCallEntry();

		String caseNo = records.callEntry.readCaseNo();
		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToScreen("records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickAddNewButton();// 1
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.tabOutReceivedDate();
		records.openRecordsRequestEntry.selectAtRequestType();
		records.openRecordsRequestEntry.enterRelatedCaseNo(caseNo);
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.saveNCloseScreen();
		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToScreen("records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickAddNewButton();// 2
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.tabOutReceivedDate();
		records.openRecordsRequestEntry.selectAtRequestType();
		records.openRecordsRequestEntry.enterRelatedCaseNo(caseNo);
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.saveNCloseScreen();
		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToScreen("records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickAddNewButton();// 3
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.tabOutReceivedDate();
		records.openRecordsRequestEntry.selectAtRequestType();
		records.openRecordsRequestEntry.enterRelatedCaseNo(caseNo);
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.saveNCloseScreen();
		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToScreen("records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickAddNewButton();// 4
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.tabOutReceivedDate();
		records.openRecordsRequestEntry.selectAtRequestType();
		records.openRecordsRequestEntry.enterRelatedCaseNo(caseNo);
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.saveNCloseScreen();
		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToScreen("records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickAddNewButton();// 5
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.tabOutReceivedDate();
		records.openRecordsRequestEntry.selectAtRequestType();
		records.openRecordsRequestEntry.enterRelatedCaseNo(caseNo);
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.saveNCloseScreen();
		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo(caseNo);
		records.caseSearch.clickSearch();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToCaseUpdateRequestTab();
		records.caseUpdate.caseUpdateRequestTab.verifyAtRequestedByInGrid(0);
		records.caseUpdate.caseUpdateRequestTab.verifyAtRequestedByInGrid(1);
		records.caseUpdate.caseUpdateRequestTab.verifyAtRequestedByInGrid(2);
		records.caseUpdate.caseUpdateRequestTab.verifyAtRequestedByInGrid(3);
		records.caseUpdate.caseUpdateRequestTab.verifyAtRequestedByInGrid(4);

	}

	@Test(groups = { "2020DefectCaseUpdateTabs" }) // Vijay
	public void verifyNarrativeShouldShouldNotDisappear_255525(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "255525");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter812As1();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickNarrativeButton();
		home.switchToReportStatusTextMgmtScreen();
		home.textMgmt.SelectAtTemplate();
		home.textMgmt.ClickLoadButton();
		home.textMgmt.waitForMinAndclickRefreshButton();
		home.textMgmt.switchToTextTempletForm();
		home.textMgmt.verifyTextAvailableInsideForm();

	}

//Request screen Not able to Verify
	@Test(groups = { "2020DefectCallSearch" }) // Stalin
	public void RequestTabIsHidden_254780(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "254780");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.verifyFromAndToDateRangeAs15();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtFromDate();
		records.caseSearch.enterAtToDate();
		records.caseSearch.clickSearch();
		records.caseSearch.selectRowByAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyRequestTabIsNotDisplayed();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.verifyRequestTabIsNotDisplayed();

	}

	@Test(groups = { "2020DefectCallEntry" }) // Automated by Stalin
	public void Showthevalidationmessage_254783(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "254783");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.switchToCaseUpdate();
		records.caseUpdate.clickSave();
		records.caseUpdate.verify1051UpdateDataExistsCaseDataTabAckMsg();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.SelectAtDomesticViolence();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();

	}

	@Test // Stalin
	public void UsedbodyWornCameracheckbox_254787(ITestContext testContext) {
		testContext.setAttribute("testID", "254787");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparamete723AsYes();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparamete721AsYes();
		settings.switchToSystemParamter();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.selectAtType();
		records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.verifyUsedBodyWornCameraCheckboxIsEnabled();
		records.aCD.clickUsedBodyWornCameraCheckbox();
		records.aCD.verifyGamblingInvolvedDropdownIsEnabled();
		records.aCD.verifySafeEnteredDropdownIsEnabled();
		records.aCD.selectAtGamblingInvolved();
		records.aCD.selectAtSafeEntered();
		records.aCD.TaboutOccuredAT();
		records.aCD.selectAtPoliceForceUsed();
		records.aCD.selectAtDomesticViolance();
		records.aCD.Save();
		records.switchToACD();
	}

	@Test(groups = { "2020DefectCallEntry" }) // Automated by Stalin
	public void InCarVideoAvailablecheckbox_254788(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "254788");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.verifyInCarVideoAvailableCheckboxIsEnabled();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.clickInCarVideoAvailableCheckbox();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.SelectAtDomesticViolence();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.verifyInCarVideoAvailableCheckboxIsSelected();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();

	}

	@Test // Automated by Stalin
	public void verifywatermarkisabletoapply(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "255128");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter813AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter814AsDisseminateReport();
		settings.switchToSystemParamter();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.enterAtFromCaseNo();
		records.reportSearch.clickSearch();
		records.reportSearch.selectAtStatusInGrid();
		records.switchToReportStatus();
		records.reportStatus.clickDistributeReport();
		records.reportStatus.distributeReport.enterAtReleasedTo();
		records.reportStatus.distributeReport.selectAtSelectWatermark();
		records.reportStatus.distributeReport.enterAtComments();
		records.reportStatus.distributeReport.clickPrintButton();
		records.switchToReportStatus();
		records.reportStatus.close();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter813AsFalse();
		settings.switchToSystemParamter();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToActivityLogTab();
		records.caseUpdate.activityLogTab.VerifyAtCode();
		records.caseUpdate.activityLogTab.VerifyAtHeading();

	}

	@Test(groups = { "2020DefectCallEntry" }) // Automated by Stalin
	public void VerifyViewcasefileisallowing_255342(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "255342");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.selectAtType();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.selectAtPoliceForceUsed();
		records.aCD.selectAtDomesticViolance();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.Saveandclose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.SelectAtType1();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.Saveandclose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.SelectAtType1();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.Saveandclose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType2();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.SelectAtStatementName();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.Close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.enterSortOrderInReportsGridAs2(0);
		records.caseUpdate.reportingTab.enterSortOrderInReportsGridAs3(1);
		records.caseUpdate.reportingTab.enterSortOrderInReportsGridAs1(2);
		records.caseUpdate.reportingTab.enterSortOrderInReportsGridAs0(3);
		records.caseUpdate.reportingTab.SaveInternalTab();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.ClickViewCaseFileButton();
		// It is not listing out in sorting order

	}

	@Test(groups = { "2020DefectUOF" }) // Automated by Stalin
	public void Alertmessagedisplay(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "255343");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Personnel");
		loader.navigateToScreen("Personnel Search");
		personnel.switchToPersonnelSearch();
		personnel.personnelSearch.enterAtPF();
		personnel.personnelSearch.clickSearchButton();
		personnel.personnelSearch.selectRowAtPFCode();
		personnel.switchToPersonnelEntry();
		personnel.personnelEntry.switchToPreferenceTab();
		personnel.personnelEntry.personnelEntryPreferencesTab.selectConfirmationMessageInScreenAsTrue();
		personnel.personnelEntry.saveNClose();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectAtActivity();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtNameID1();
		records.callEntry.callEntryNamesTab.selectAtActivity1();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.ClickDomesticViolanceIconUsingVictim();
		records.switchToDVEntry();
		records.dVEntry.SelectAtOffenderName();
		records.dVEntry.SaveAndClose();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUseOfForceTab();
		records.caseUpdate.caseUpdateUseOfForceTab.clickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.enterAtSubjectsNameID();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.selectPatrolArea();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.selectAtListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.SaveAndClose();
		records.switchToCaseUpdate();

	}

	@Test(groups = { "2020DefectReportEntry" }) // Automated by Stalin
	public void Notificationissent_255523(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "255523");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.enterAtFromCaseNo();
		records.reportSearch.clickSearch();
		records.reportSearch.selectAtStatusInGrid();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsSubmitted();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsApproved();

	}

	@Test(groups = { "2020DefectReportEntry" }) // Automated by Stalin
	public void ToAddNarrativeContent_255524(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "255524");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter736AsDIVSEC();
		settings.switchToSystemParamter();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.SelectAtStatementName();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfStatementReportAsOnHold();
		records.reportStatus.clickNarrativeButton();
		records.switchToReportStatusNarrative();
		records.reportStatusNarrative.enterAtTextField();
		records.reportStatusNarrative.clickOfficialAccesOnly();
		settings.switchToPhoenixAuthenticatorWindow();
		settings.phoenixAuthenticatorWindow.enterAtPassword();
		settings.phoenixAuthenticatorWindow.clickAcceptButton();
		records.switchToReportStatus();

	}

	@Test // Automated by Stalin
	public void Loadsmapsonsearchscreens_255722(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "255722");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter512AsESRI();
		settings.switchToSystemParamter();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.selectAtJuris();
		records.caseSearch.clickSearch();
		records.caseSearch.clickSelectedCheckBoxInMenuBar();
		records.caseSearch.clickRowAtLocation();
		records.caseSearch.ClickShowMapButton();
		home.switchToGlobalMapScreen();
		home.globalMapScreen.verifyAtAddressInSideBar();
		home.globalMapScreen.Close();
		records.switchToCaseSearch();
		records.caseSearch.clickBackButton();
		records.caseSearch.selectAtJuris1();
		records.caseSearch.clickSearch();
		records.caseSearch.clickSelectedCheckBoxInMenuBar();
		records.caseSearch.clickRowAtLocation();
		records.caseSearch.ClickShowMapButton();
		home.switchToGlobalMapScreen();
		home.globalMapScreen.verifyAtAddressInSideBar();
		home.globalMapScreen.Close();
		records.switchToCaseSearch();
		records.caseSearch.clickBackButton();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter512AsGoogleMap();
		settings.switchToSystemParamter();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.selectAtJuris();
		records.caseSearch.clickSearch();
		records.caseSearch.clickSelectedCheckBoxInMenuBar();
		records.caseSearch.clickRowAtLocation();
		records.caseSearch.ClickShowMapButton();
		home.switchToGlobalMapScreen();
		home.globalMapScreen.verifyAtAddressInSideBar();
		home.globalMapScreen.Close();
		records.switchToCaseSearch();
		records.caseSearch.clickBackButton();
		records.caseSearch.selectAtJuris1();
		records.caseSearch.clickSearch();
		records.caseSearch.clickSelectedCheckBoxInMenuBar();
		records.caseSearch.clickRowAtLocation();
		records.caseSearch.ClickShowMapButton();
		home.switchToGlobalMapScreen();
		home.globalMapScreen.verifyAtAddressInSideBar();
		home.globalMapScreen.Close();
		records.switchToCaseSearch();
		records.caseSearch.clickBackButton();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamterII();
		settings.sysParameter.setSystemparameter512AsHEREMap();
		settings.switchToSystemParamterII();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.selectAtJuris();
		records.caseSearch.clickSearch();
		records.caseSearch.clickSelectedCheckBoxInMenuBar();
		records.caseSearch.clickRowAtLocation();
		records.caseSearch.ClickShowMapButton();
		home.switchToGlobalMapScreen();
		home.globalMapScreen.verifyAtAddressInSideBar();
		home.globalMapScreen.Close();
		records.switchToCaseSearch();
		records.caseSearch.clickBackButton();
		records.caseSearch.selectAtJuris1();
		records.caseSearch.clickSearch();
		records.caseSearch.clickSelectedCheckBoxInMenuBar();
		records.caseSearch.clickRowAtLocation();
		records.caseSearch.ClickShowMapButton();
		home.switchToGlobalMapScreen();
		home.globalMapScreen.verifyAtAddressInSideBar();
		home.globalMapScreen.Close();

	}

	@Test(groups = { "2020DefectUCR" }) // Sprint 6 Mahesha K S
	public void VerifyTheUCRReportsAreAbleToPrintFromUCRscreen_254781(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "254781");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UCR");
		records.switchToUCR();
		records.uCR.ClickAllReportCheckbox();
		records.uCR.ClickReturnAOffenseReportCheckbox();
		records.uCR.ClickAdultArrestReportCheckbox();
		records.uCR.ClickJuviniletArrestReportCheckbox();
		records.uCR.ClickSupplementalToReturnAReportCheckbox();
		records.uCR.ClickPropertyStolenReportCheckbox();
		records.uCR.ClickGenerateReportButton();
		records.uCR.Verify14DoYouWantToPrintTheReportAckMsg();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UCR");
		records.switchToUCR();
		records.uCR.ClickViewLogFileButton();
		records.switchToUCRlogsWindow();

	}

	@Test(priority = 4, groups = { "2020DefectCallEntrySequential" }) // Sprint 6 Automated by Mahesha
	public void VerifyBiasMotivationfieldEnabledOnlyInFTC_254782(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "254782");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContextOtherDB();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter712AsMandatory();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.verifyAtDateAsCurrentDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.verifyAddressBubbleIconDisplayed();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		;
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.verifyBiasMotivationLabelIsMandatory();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter712AsYes();
		records.switchToCaseUpdate();
	}

	@Test(groups = { "2020DefectCallEntry" }) // Oct Sprint 1 Automated by Mahesha K S
	public void VerifyMgmtCFSaddedFromReportShouldShowInReportSearchScreen_255339(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "255339");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter532AsFalse();
		// settings.sysParameter.setSystemparameter779AsTrue();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.verifyAddressBubbleIconDisplayed();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCallEntry();
		records.callEntry.clickGenerateCheckbox();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		String CaseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.EnterAtCFS();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();

		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.enterAtCaseNoAsActiveData(CaseNo);
		records.reportSearch.ClickSearchButton();
		records.reportSearch.VerifyAtOfficer(0);

	}

	@Test(groups = { "2020DefectCallEntry" }) // Oct Sprint 1 Automated by Mahesha K S
	public void VerifyWhetherNarrativeScreenSavedAutomaticOrManuallyBased812_255345(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "255345");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter812As1();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.verifyAddressBubbleIconDisplayed();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickNarrativeButton();
		home.switchToReportStatusTextMgmtScreen();
		home.textMgmt.SelectAtTemplate();
		home.textMgmt.ClickLoadButton();
		home.textMgmt.verifyAutoSavingTextDisplayed();
		home.textMgmt.waitForMinAndclickRefreshButton();
		home.textMgmt.switchToTextTempletForm();
		home.textMgmt.verifyTextAvailableInsideForm();
		home.switchToReportStatusTextMgmtScreen();
		home.textMgmt.SaveAndCloseScreen();
		records.switchToReportStatus();
		records.reportStatus.close();

		// Scenario 2

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter812As0();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.verifyAddressBubbleIconDisplayed();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickNarrativeButton();
		home.switchToReportStatusTextMgmtScreen();
		home.textMgmt.SelectAtTemplate();
		home.textMgmt.ClickLoadButton();
		home.textMgmt.waitForMinAndclickRefreshButton();
		home.textMgmt.switchToTextTempletForm();
		home.textMgmt.verifyNoTextAvailableInsideForm();
		home.switchToReportStatusTextMgmtScreen();
		home.textMgmt.SaveScreen();
		home.switchToReportStatusTextMgmtScreen();

	}

	@Test(groups = { "2020DefectCallEntry" }) // Oct Sprint 1 Automated by Mahesha K S
	public void VerifySameNameCanbeAllowToAddInMultipleReport_255528(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "255528");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.verifyAddressBubbleIconDisplayed();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();

		records.switchToCallEntry();
		records.callEntry.clickGenerateCheckbox();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.SelectName();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		String CaseNo = records.callEntry.readCaseNo();
		records.callEntry.closeScreen();

		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterCaseNoByActiveData(CaseNo);
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();

		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.VerfiyAtNameInCopyNameGrid(1);
		records.caseNames.ClickPopupCopyButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.EnterAtLastName1();
		records.caseNames.EnterAtFirstName1();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.VerifyAtNameID();
		names.nameSearchHelpWindow.SelectName();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.SelectAtType1();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickNameSearchButton();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.VerifyAtNameID();
		names.nameSearchHelpWindow.SelectIncidentNameAtName();
		records.switchToCaseNames();

	}

	@Test(groups = { "2020DefectReportEntry" }) // Oct Sprint 1 Automated by Mahesha K S
	public void VerifyIncidentSupplementalReportNamesTabCanAbleToDisplayCopyNamePopupWindow_255529(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "255529");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.SelectName();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.saveNClose();

		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyAtNameInGrid(1);
		records.caseUpdate.caseUpdateNamesTab.VerifyAtName1InGridByLastNameFirstName(0);
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfSupplementalReportAsOnHold();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.VerfiyAtNameInCopyNameGrid(0);
		records.caseNames.ClickPopupCopyButton();
		records.caseNames.verfiyAtNameInGridByLastNameFirstName(1);
		records.caseNames.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.SelectAtType1();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.verifyCopyNamePopupButtonNotDisplayed();

	}

	@Test(groups = { "2020DefectCaseUpdateTabs" }) // Oct Sprint 1 Automated by Mahesha K S
	public void VerifyBackButtonShouldEnableInPropertySearchScreen_256102(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "256102");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter734AsFalse();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter736AsDIVSEC();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter785AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter835AsTrue();
		loader.logout();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();
		records.reportManager.VerifyPFNotRelatedToConfirmPopupMessage();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.EnterAtCFS();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtPropertyLoss();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();

		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterAtValue();
		property.propertyEntry.propertyEntryMainTab.EnterQuantity();
		property.propertyEntry.propertyEntryMainTab.enterAtOwnerName();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveNClose();

		loader.navigateToModule("Names");
		loader.navigateToScreen("Name Search");
		names.switchToNameSearch();
		names.nameSearch.EnterAtLastName();
		names.nameSearch.EnterAtFirstName();
		names.nameSearch.clickSearchButton();
		names.nameSearch.ClickAtName();
		names.switchToNameEntry();
		names.nameEntry.switchToActivityTab();
		names.nameEntry.activityTab.clickEvidenceButton();

		property.switchToPropertySearchHelpWindow();
		property.propertySearchHelpWindow.clickRefreshButton();
		property.propertySearchHelpWindow.verifyBackButtonEnabled();
		property.propertySearchHelpWindow.clickBackButton();
		property.propertySearchHelpWindow.enterAtNameID();
		property.propertySearchHelpWindow.clickSearchButton();
		property.propertySearchHelpWindow.clickRowByCaseNo();
		property.switchToPropertyEntry();

	}

	@Test(groups = { "2020DefectCaseSeach" }) // Automated By Mahesha
	public void PoliceDefect2020DVReport_251310(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251310");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickDomesticViolenceIcon(0);
		records.switchToDVEntry();
		records.dVEntry.VerifyAtCaseNo();
		records.dVEntry.ClickAlcoholInvolvedCheckBox();
		records.dVEntry.ClickOtherDrugsInvolvedCheckBox();
		records.dVEntry.enterTotalTimeSpentHoursAndMin();
		records.dVEntry.SelectViolationofDomesticViolationNo();
		records.dVEntry.SelectAllVictimInformationFieldsCheckboxs();
		records.dVEntry.SelectAtOffender();
		records.dVEntry.SelectArrestedFor();
		records.dVEntry.SelectOffenseCompliant();
		records.dVEntry.SelectDegreeofInjury();
		records.dVEntry.ClickGunCheckBox();
		records.dVEntry.enterAdultMale();
		records.dVEntry.ClickSave();
		records.dVEntry.ClickPopupYes();
		records.switchToDVEntry();
		records.dVEntry.VerifyAtCaseNo();
		records.dVEntry.verifyAtDegreeOfInjury();

	}

	@Test(priority = 7, groups = { "2020DefectReportSearchSequential" }) // Automated By Mahesha
	public void PoliceDefect2020NIBRSCheck_249395(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "249395");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.verifyColorOfNIBRSCheckButtonAsRed();
		records.reportStatus.ClickNibrsCheckButton();
		records.switchToNIBRSCheckError();
		records.nIBRSCheck.verifyAtChargeOffense(0);

		records.nIBRSCheck.VerifyDescriptionAsSexOfVictim(0);
		records.nIBRSCheck.VerifyDescriptionAsRaceOfVictim(1);
		records.nIBRSCheck.VerifyDescriptionAsResidentOfVictimIsMandatoryFiled(2);

		records.nIBRSCheck.verifyAtChargeOffense1(3);

		records.nIBRSCheck.VerifyDescriptionAsSexOfVictim(3);
		records.nIBRSCheck.VerifyDescriptionAsRaceOfVictim(4);
		records.nIBRSCheck.VerifyDescriptionAsResidentOfVictimIsMandatoryFiled(5);

		records.nIBRSCheck.closeScreen();
		records.switchToReportStatus();

		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickAtActivity1InGrid();

		records.caseNames.ClickNameInfoButton();
		names.switchToNameEntry();
		names.nameEntry.switchToMainTab();
		names.nameEntry.nameEntryMainTab.SelectAtSex();
		names.nameEntry.nameEntryMainTab.SelectAtRace();
		names.nameEntry.nameEntryMainTab.SelectAtEthnic();
		names.nameEntry.nameEntryMainTab.SelectAtResident();
		names.nameEntry.SaveNCloseScreen();

		records.switchToCaseNames();
		records.caseNames.clickAddButton();
		records.caseNames.Save();

		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyColorOfNIBRSCheckButtonAsRed();

		records.switchToCaseNames();
		records.caseNames.clickAtActivity2InGrid();

		records.caseNames.ClickNameInfoButton();
		names.switchToNameEntry();
		names.nameEntry.switchToMainTab();
		names.nameEntry.nameEntryMainTab.SelectAtSex();
		names.nameEntry.nameEntryMainTab.SelectAtRace();
		names.nameEntry.nameEntryMainTab.SelectAtEthnic();
		names.nameEntry.nameEntryMainTab.SelectAtResident();
		names.nameEntry.SaveNCloseScreen();

		records.switchToCaseNames();
		records.caseNames.clickAddButton();
		records.caseNames.Save();

		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyColorOfNIBRSCheckButtonAsGreen();
	}

	@Test(groups = { "recordsDefect2020" })
	public void VerifythePropertyChange_240625(ITestContext testContext) {

		testContext.setAttribute("testID", "240625");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.ClickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterAtPlateNumber();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.saveAndCloseScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.ClickPlateOnlyCheckbox();
		property.propertyEntry.propertyEntryMainTab.enterAtValue();
		property.propertyEntry.propertyEntryMainTab.enterAtOwnerName();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.propertyEntry.propertyEntryMainTab.VerifyPropertyTypeAsVehicle();

	}

	@Test(groups = { "2020DefectReportSearch" }) // Raga Ranjani

	public void Police2020DefectrecordsModule_255340(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "255340");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.EnterFromAndEndAtCaseNo();
		records.reportSearch.selectAtReportType();
		records.reportSearch.selectAtStatus();
		records.reportSearch.clickSearch();
		records.reportSearch.VerifyAtCaseNoInGrid(0);
		records.reportSearch.VerifyStatusAsLockedInGrid(0);
		records.reportSearch.verifyAtTypeInGrid(0);
		records.reportSearch.verifyRowAccountAs1();
		records.reportSearch.clickBackButton();
		records.reportSearch.ClickResetButton();
		records.reportSearch.selectAtReportType();
		records.reportSearch.SelectStatusAsOnHold();
		records.reportSearch.clickSearch();
		records.reportSearch.VerifyGridColumnStatusAsOnHold();
		records.reportSearch.clickBackButton();
		records.reportSearch.selectAtStatus();
		records.reportSearch.clickSearch();
		records.reportSearch.verifyGridColumnStatusAsLocked();

	}

	@Test(groups = { "2020DefectUOF" }) // Nov Sprint 3 Automated by Mahesha K S
	public void VerifyThatIncidentReportAllowingToCreateUOFEntry_248833(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());

		testcontext.setAttribute("testID", "248833");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();
		records.reportManager.VerifyPFNotRelatedToConfirmPopupMessage();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.reportStatus.ClickUseOfForceButton();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.ClickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.EnterAtNameID();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.SelectListKnownMentalPhysicalConditionsAsYes();

		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.selectAtTypesOfForce1UsedByOfficer();
		records.uOFEntry.typeOfForceTab.selectAtEffectiveness();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.Save();

		records.switchToUOFEntry();
		records.uOFEntry.clickPrintIcon();
		home.switchToSelectReport();
		home.selectReport.clickUseOfForceReport();

		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.VerifyPopupAtSubjectName(0);
		records.caseNames.verifyPopupActivity(0);
		records.caseNames.ClickPopupCopyButton();
		records.caseNames.ClickAtNameInGrid();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();

	}

	@Test(groups = { "2020DefectReportsVerify" }) // Oct Sprint 2 Automated by Mahesha K S
	public void VerifyAbleToEmailReportsRromReportScreen_257058(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "257058");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.clickSearchButton();
		records.callSearch.ClickPrintButton();
		home.switchToSelectReport();
		home.selectReport.ClickCADSummaryDateSpecificReport();
		home.switchToPnxCustomReportPDFScreen();
		// report page having issue
		home.pnxCustomReportPDFScreen.enterAtFromDate();
		home.pnxCustomReportPDFScreen.enterToDate();
		home.pnxCustomReportPDFScreen.ClickViewReportButton();
		home.pnxCustomReportPDFScreen.clickEmailReportButton();
		home.pnxCustomReportPDFScreen.enterAtFromEmailID();
		home.pnxCustomReportPDFScreen.enterAtToEmailID();
		home.pnxCustomReportPDFScreen.enterAtSubject();
		home.pnxCustomReportPDFScreen.enterAtEmailMessage();
		home.pnxCustomReportPDFScreen.clickAtSendEmailButton();
		home.pnxCustomReportPDFScreen.verifyAtEmailSentMessageDisplayed();

	}

	@Test(groups = { "2020DefectCaseFolder" }) // Oct Sprint 3 Automated by Mahesha K S
	public void VerifyCaseFolderScreenTabsEnabled_257955(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "257955");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.verifyAtDateAsCurrentDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.verifyAddressBubbleIconDisplayed();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseManagementIcon();
		cm.switchToCaseFolder();
		cm.caseFolder.caseFolderAssignmentTab.selectAtDivision();
		cm.caseFolder.caseFolderAssignmentTab.selectAtSection();
		cm.caseFolder.caseFolderAssignmentTab.enterAtSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.verifyAtSupervisorName();
		cm.caseFolder.caseFolderAssignmentTab.enterAtPrimeInvestigator();
		cm.caseFolder.caseFolderAssignmentTab.verifyAtPrimeInvestigatorName();
		cm.caseFolder.caseFolderAssignmentTab.tabOutDateAssignedTime();
		cm.caseFolder.save();
		cm.switchToCaseFolder();
		cm.caseFolder.verifyAllTabsAreOpeningWithoutIssue();
		cm.caseFolder.clickAllTabs();

	}

	@Test(groups = { "2020DefectCaseFolder" }) // Oct Sprint 3 Automated by Mahesha K S
	public void VerifyCaseStatusShouldReflectInCaseUpdateScreen_257956(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "257956");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter912AsNo();
		loader.logout();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.verifyAtDateAsCurrentDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.verifyAddressBubbleIconDisplayed();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyAtInitialCaseStatus();
		records.caseUpdate.clickCaseManagementIcon();
		cm.switchToCaseFolder();
		cm.caseFolder.caseFolderAssignmentTab.selectAtDivision();
		cm.caseFolder.caseFolderAssignmentTab.selectAtSection();
		cm.caseFolder.caseFolderAssignmentTab.enterAtSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.verifyAtSupervisorName();
		cm.caseFolder.caseFolderAssignmentTab.enterAtPrimeInvestigator();
		cm.caseFolder.caseFolderAssignmentTab.verifyAtPrimeInvestigatorName();
		cm.caseFolder.caseFolderAssignmentTab.tabOutDateAssignedTime();
		cm.caseFolder.save();
		cm.switchToCaseFolder();
		cm.caseFolder.switchToReviewTab();
		cm.caseFolder.reviewTab.clickAddNewReviewButton();
		cm.switchToCaseReview();
		cm.caseReview.selectAtCaseStatus();
		cm.caseReview.tabOutDate();
		cm.caseReview.save();

		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.VerifyAtCaseStatus();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter912AsYes();
		settings.switchToSystemParamter();
	}

	@Test(groups = { "2020DefectUOF" }) // Oct Sprint 3 Automated by Mahesha K S
	public void VerifyNotesShouldAcceptTextSpecialSymbolsAlphaNumericCombinations_257957(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "257957");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.verifyAtDateAsCurrentDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.verifyAddressBubbleIconDisplayed();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUseOfForceTab();
		records.caseUpdate.caseUpdateUseOfForceTab.clickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.VerifyAtOfficerPFNo();
		records.uOFEntry.EnterAtNameID();
		records.uOFEntry.verifyAtName();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.VerifyCurrentDateAutoPopulates();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.selectAtWasSubjectUnderTheInfluence();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.EnterAtForceSeqNo();
		records.uOFEntry.typeOfForceTab.SelectAtTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.selectAtEffectiveness();
		records.uOFEntry.typeOfForceTab.EnterAtNotes();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.typeOfForceTab.VerifyAtTypeOfForce(0);
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.clickAtGridrowByTypeOfForce();
		records.uOFEntry.typeOfForceTab.EnterAtNotes();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.typeOfForceTab.VerifyAtTypeOfForce(0);
		records.uOFEntry.Save();
		records.switchToUOFEntry();

	}

	@Test(groups = { "2020DefectCaseFolder" }) // Automated by Stalin
	public void CMTAbisDuplicating_256809(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "256809");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter912AsYes();
		settings.switchToSystemParamter();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseManagementIcon();
		cm.switchToCaseFolder();
		cm.caseFolder.clickAssignmentTab();
		cm.caseFolder.caseFolderAssignmentTab.verifyAtDivision();
		cm.caseFolder.caseFolderAssignmentTab.verifyAtSection();
		cm.caseFolder.caseFolderAssignmentTab.enterAtSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.enterAtPrimeInvestigator();
		cm.caseFolder.caseFolderAssignmentTab.tabOutDateAssignedTime();
		cm.caseFolder.save();
		cm.switchToCaseFolder();
		cm.caseFolder.close();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		records.switchToCallEntry();
		records.callEntry.closeScreen();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyCMTab();
		home.myHome.myCMTab.clickOpenCaseFolderAccordion();
		home.myHome.myCMTab.verifyAtCaseNoFromOpenCaseFolder();

	}

	@Test(priority = 6, groups = { "2020DefectCallEntrySequential" }) // Automated by Stalin
	public void UserDefinedcodechangedToRedColor_258295(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "258295");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter731AsMandatory();
		settings.switchToSystemParamter();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.verifyIdentityTheftInRedColor();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtPropertyLoss();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.clickSaveInternalTab();
		records.caseUpdate.caseUpdateCaseDataTab.verifyUserDefinedCodeAcwkMsg();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.selectAtIdentityTheft();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter731AsYes();
		settings.switchToSystemParamter();
	}

	@Test(groups = { "2020DefectCallEntry" }) // Automated by Stalin
	public void LoopingRMSPnxlog_258296(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "258296");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectCrimeAgainstAsProperty();
		records.fTC.selectAtPropertyLoss();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.selectAtIdentityTheft();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectAtActivity1();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.SelectAtVictimType();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectAtRelationship();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();
		records.caseNames.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectReasonAsEvidence();
		property.propertyEntry.propertyEntryMainTab.SelectPropertyAsAircraft();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterValue();
		property.switchToPropertyEntry();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.tabOutQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.selectAtDisposition();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.ClickSubmitButton();
		property.propertyEntry.VerifyConfirmSubmitMessage();
		property.switchToPropertyEditEntryPopup();

	}

	@Test(groups = { "2020DefectReportEntry" }) // Automated by Stalin
	public void VehicleshouldnotshowTwice_258297(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "258297");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.ClickVehicleButton();
		records.switchToCaseVehicle();
		records.caseVehicle.EnterAtVehicle();
		records.caseVehicle.selectAtVehicleState();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.clickSelectButton();
		records.switchToCaseVehicle();
		records.caseVehicle.SelectAtActivity();
		records.caseVehicle.ClickAddButton();
		records.caseVehicle.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.enterAtVehicleNumber();
		records.callEntry.vehicleTab.enterAtState();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.clickSelectButton();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.selectAtActivity();
		records.callEntry.vehicleTab.clickAddButton();
		records.callEntry.vehicleTab.InternalSave();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToVehicleTab();
		records.caseUpdate.caseUpdateVehicleTab.VerifyAtActivityinGrid(0);

	}

	@Test(groups = { "2020DefectReportEntry" }) // Vijay
	public void verifyThatTheIncidentReportIsAllowingToSendToApproval_256808(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "256808");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter785AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter835AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter832AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter833AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter834AsTrue();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.logout();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.EnterAtCFS();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectLocationType();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectSuspectOfUsingAsNotApplicable();
		records.fTC.SelectCriminalActivityAsOtherGang();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.selectReasonAsStolen();
		property.propertyEntry.propertyEntryMainTab.selectPropertyAsAutomobiles();
		property.propertyEntry.propertyEntryMainTab.enterDecriptionAs10Shirts();
		property.propertyEntry.propertyEntryMainTab.SelectPlateNumber();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.enterValueAs28500();
		property.propertyEntry.propertyEntryMainTab.enterOwnerName();
		property.switchToPropertyEntry();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.tabOutQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.selectDispositionAsSentToPropertyRoom();
		property.propertyEntry.recoveredTab.SelectContainerAsBottle();
		property.propertyEntry.recoveredTab.SelectPackageAsBottle();
		property.propertyEntry.recoveredTab.enterAtInitialStorageLocation();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveNClose();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.closeTheScreen();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.SelectAtDivision();
		records.reportManager.updateStatusTab.SelectAtSection();
		records.switchToReportManager();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifiyStatusAsSubmitted();
	}

	@Test // Vijay
	public void ValidateLatLongFromOtherScreens_257116(ITestContext testcontext) {
		testcontext.setAttribute("testID", "257116");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.switchToMapTab();
		records.callEntry.callEntryMapTab.VerifyLatLongValue();
		records.callEntry.callEntryMapTab.ClickReset();
		// records.callEntry.callEntryMapTab.dragAndDropPointerInMap();
		records.callEntry.callEntryMapTab.clickUpdateLatLongButton();
		records.callEntry.callEntryMapTab.VerifyYesMasterGeoOverWriteConfirmMessage();
		records.callEntry.callEntryMapTab.verifyYesUpdateLatLongConfirmMessage();
		records.callEntry.switchToMapTab();
		records.callEntry.callEntryMapTab.ClickReset();
		// records.callEntry.callEntryMapTab.dragAndDropPointerInMap();
		records.callEntry.callEntryMapTab.clickUpdateLatLongButton();
		records.callEntry.callEntryMapTab.VerifyNoMasterGeoOverWriteConfirmMessage();
		records.callEntry.callEntryMapTab.verifyYesUpdateLatLongConfirmMessage();
		records.switchToCallEntry();
	}

	@Test // Mithun
	public void VerifyCaseCreatedWithCFSClassToBePurgedBasedOnCodedScreenConfig_248774(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "248774");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.randomKPIHelpSelect();
		records.switchToACD();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.enterAtCharge1();
		records.aCD.clickAddButton();

		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.SelectDegree();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.ClickSaveNClose();

		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolation();
		records.aCD.Save();
		records.switchToACD();
		records.aCD.Close();

		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.SelectAtCharge();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtCharge1();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.ClickOffenderIcon();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.clickOffenderIconInGrid(1);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();

	}

	@Test // Mithun
	public void VerifyCreatingCallCaseActivityPropertyForPrintingTheRecordInTheHotSheet_248796(
			ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "248796");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
//		loader.navigateToModule("Settings");
//		loader.navigateToScreen("System Parameter");
//		settings.switchToSystemParamter();
//		settings.sysParameter.setSystemparameter779AsTrue();
//		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.SelectReceivedSource();
		records.switchToCallEntry();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.EnterAtCADDisposition();
		records.callEntry.CallCompletionLocation();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.VerifyCurrentDate();
		records.reportManager.save();

		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();

		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtPropertyLoss();
		records.fTC.SelectLocationType();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.ClickSaveNClose();

		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolation();
		records.aCD.Save();
		records.aCD.Close();

		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.SelectActivityAsCaller();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectActivityAsSuspect();
		records.caseNames.clickAddButton();
		records.caseNames.enterAtNameID2();
		records.caseNames.SelectActivityAsMissingPerson();
		records.caseNames.clickAddButton();
		records.caseNames.SaveNClose();

		records.switchToReportStatus();
		records.switchToCaseSuspect();
		records.caseSuspect.ClickAddSuspectButton();
		names.switchToSuspectEntry();
		names.suspectEntry.EnterAtLastNameFirstName();
		names.suspectEntry.EnterAge();
		names.suspectEntry.ClickAddIcon();
		names.suspectEntry.EnterComments();
		names.suspectEntry.SaveAndClose();
		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();

		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.enterAtCaseNumberAndTab();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectAtNIBRS();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectPropertyAsAutomobiles();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterAtValue();
		property.propertyEntry.propertyEntryMainTab.EnterAtLastName();
		property.propertyEntry.propertyEntryMainTab.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.propertyEntry.ClickSubmitButton();
		property.propertyEntry.clickReportDetailsButton();
		records.switchToReportManager();
		records.reportManager.VerifiyStatusAsOnHold();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.EnterAtSupervisor();
		records.reportManager.save();
		records.reportManager.VerifiyStatusAsSubmitted();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.save();
		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.myHome.SwitchToMessageTab();
		home.myHome.messageTab.ClickMessageAddNew();
		home.switchToMessageSend();
		home.messageSendScreen.EnterAtPF();
		home.messageSendScreen.ClickAddButton();
		home.messageSendScreen.EnterMessage();
		home.messageSendScreen.ClickSendAsEmailCheckbox();
		home.messageSendScreen.ClickShiftNotes();
		home.messageSendScreen.CloseScreen();
		home.myHome.SwitchToMessageTab();

		home.myHome.messageTab.VerifyAtMessageInFirstMessageGrid();

		home.myHome.SwitchToMessageSearch();
		home.messageSearch.SelectAtJuris();
		home.messageSearch.enterPFInboxCode();
		home.messageSearch.clickAddNewButton();
		home.switchToMessageSend();
		home.messageSendScreen.EnterMessage();
		home.messageSendScreen.ClickShiftNotes();

	}

	@Test(groups = { "2020DefectCaseSearch" }) // Vijay
	public void verifyProdectiveCustodyActivityInNamesTab_251303(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "251303");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.EnterAtLastName();
		records.caseNames.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCaseNames();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.SaveNClose();
		records.switchToReportStatus();
	}

	@Test(groups = { "2020DefectCallSearch" }) // Vijay
	public void verifyReportDueReportsOpenWithoutAnyError_251463(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "251463");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter734AsFalse();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.enterReceivedSourceAs9();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.selectAtCallTaker();
		records.switchToCallEntry();
		records.callEntry.selectAtCallDispatcher();
		records.switchToCallEntry();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.enterCADDispositionAsI();
		records.callEntry.CallCompletionLocation();
		records.callEntry.selectReportDueAsIncidentReport();
		records.callEntry.enterAtPrimeUnit();
		records.callEntry.clickAddReportButton();
		records.callEntry.save();
		records.switchToCallEntry();
		String caseNo = records.callEntry.readCaseNo();
		records.callEntry.closeScreen();
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo(caseNo);
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.Close();
		loader.navigateToScreen("Reports Status");
		records.switchToReportsStatusScreenTab();
		records.reportStatus.selectByActiveCaseNo(caseNo);
		records.switchToReportManager();
		records.reportManager.Close();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.selectByActiveCaseNo(caseNo);
		records.switchToReportManager();
	}

	@Test(groups = { "2020DefectUOF" }) // Vijay
	public void verifyTheTypeOfForceInUOFPDFReport_252296(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "252296");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUseOfForceTab();
		records.caseUpdate.caseUpdateUseOfForceTab.clickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.EnterAtNameID();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.SelectListKnownMentalPhysicalConditionsAsYes();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.SelectAtTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.typeOfForceTab.selectAtTypesOfForce1UsedByOfficer();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.typeOfForceTab.SelectAtTypesOfForce2UsedByOfficer();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.typeOfForceTab.SelectAtTypesOfForce3UsedByOfficer();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.switchToUOFEntry();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.clickPrint();
		home.switchToSelectReport();
		home.selectReport.clickUseOfForceReport();
		home.selectReport.switchToKPITempPDFScreen();
		;
	}

	@Test(priority = 7, groups = { "2020DefectCallEntrySequential" }) // Vijay
	public void verifyThat61RolePFIsAllowToAccessOtherJuris_252307(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "252307");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter731AsYes();
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter779AsFalse();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter746AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter794AsTrue();
		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToModule("Records");

		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.SelectAtJuris();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		String caseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.closeTheScreen();

		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.verifyJurisAsPX();
		records.caseSearch.selectJurisAsBC();
		records.caseSearch.enterCaseNoByActiveData(caseNo);
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.selectAtDescription1();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectCrimeAgainstAsProperty();
		records.fTC.SelectPropertyLossAsStolen();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.SelectDomesticViolenceAsYes();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.SaveNClose();
		records.switchToCaseSearch();
		records.caseSearch.selectAtJuris1();
		records.caseSearch.enterCaseNoByActiveData(caseNo);
		records.caseSearch.VerifyNoRecordAcknowledgeMessage();
		records.switchToCaseSearch();
		// Changed
	}

	@Test(groups = { "2020DefectCallSearch" }) // Vijay
	public void verifyNameFromCallShowingPrimeOfficerInNameActivity_252887(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "252887");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.SelectRowByAtName();
		records.callEntry.callEntryNamesTab.ClickNameInfoIcon();
		names.switchToNameEntry();
		names.nameEntry.switchToActivityTab();
		names.nameEntry.activityTab.VerifyAtActivityNumber();
		names.nameEntry.activityTab.verifyAtOfficer();
	}

	@Test(priority = 5, groups = { "2020DefectUOFSequential" }) // Vijay
	public void verifyUseOfForceReportisPrintingSupervisorNameFromCaseSearch_252889(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "252889");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUseOfForceTab();
		records.caseUpdate.caseUpdateUseOfForceTab.clickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.EnterAtSubjectLastName();
		records.uOFEntry.EnterAtSubjectFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToUOFEntry();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.SelectWasASupervisorPresentAsYes();
		records.uOFEntry.incidentSubjectInformationTab.SelectSupervisorPF();
		records.switchToUOFEntry();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.SelectListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.SelectEffectiveness();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.switchToApprovalTab();
		records.uOFEntry.approvalTab.selectNewActionAsSendForApproval();
		records.uOFEntry.approvalTab.tabDateAndTime();
		records.uOFEntry.approvalTab.saveInApprovalTab();
		records.switchToUOFEntry();
		records.uOFEntry.ClickReset();
		records.uOFEntry.verifyStatusOfReportAsSubmitted();
	}

	@Test(priority = 6, groups = { "2020DefectUOFSequential" }) // Vijay
	public void verifyUseOfForceReportisPrintingSupervisorNameFromCaseSearch_252890(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "252890");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUseOfForceTab();
		records.caseUpdate.caseUpdateUseOfForceTab.selectAtSubjectNameInGrid();
		records.switchToUOFEntry();
		records.uOFEntry.switchToApprovalTab();
		records.uOFEntry.approvalTab.selectNewActionAsApprove();
		records.uOFEntry.approvalTab.tabDateAndTime();
		records.uOFEntry.approvalTab.saveInApprovalTab();
		records.switchToUOFEntry();
		records.uOFEntry.verifyStatusOfReportAsApproved();
		records.uOFEntry.clickPrint();
		home.switchToSelectReport();
		home.selectReport.clickUseOfForceReport();
		home.selectReport.switchToKPITempPDFScreen();
	}

	@Test(groups = { "2020DefectUOF" })
	// Mithun//Changed By Vijay
	public void PoliceDefect2020_251306(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251306");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter782AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter835AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter736AsDivSec();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectCrimeAgainstAsSociety();
		records.fTC.ClickSaveNClose();
		records.switchToACD();
		records.aCD.ClickUnknownCheckbox();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.ClickUseOfForceButton();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.ClickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.VerifyRelatedCaseAtCaseNo();
		records.uOFEntry.VerifyAtOfficerPFNo();
		records.uOFEntry.EnterAtLastName();
		records.uOFEntry.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToUOFEntry();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickSave();
		records.uOFEntry.VerifyRequiredEntriesTypeOfForceAcknowledgemessage();// Changed
		records.switchToUOFEntry();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.selectAtListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.switchToUOFEntry();
		records.uOFEntry.SaveAndClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.SelectAtDivision();
		records.reportManager.updateStatusTab.SelectAtSection();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifiyStatusAsSubmitted();

	}

	@Test(groups = { "2020DefectReportSearch" }) // Vijay
	public void verifyReportsGeneratesCorrectlyBasedOnCombinationFiltrationMadeInReportSearchScreen_254486(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "254486");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");

		records.switchToReportSearch();
		records.reportSearch.selectAtStatus();
		records.reportSearch.selectAtReportType();
		records.reportSearch.clickSearch();
		// String count = records.reportSearch.getRecordCountInGrid();
		records.reportSearch.clickPrintIcon();
		home.switchToSelectReport();
		// home.selectReport.VerifyRecordCount(count);
		home.selectReport.selectApprovedReport();
		home.selectReport.CloseTheScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		home.switchToPnxReportCrystalPDFScreen();
		home.pnxReportCrystalPDFScreen.ClosePnxReportCrystalPDFScreen();
		home.switchToSelectReport();
		home.selectReport.CloseTheScreen();
		records.switchToReportSearch();
		records.reportSearch.clickBackButton();
		records.reportSearch.selectAtStatus1();
		records.reportSearch.selectAtReportType();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.clickSearch();
		// String count2 = records.reportSearch.getGridRowInGrid();
		records.reportSearch.clickPrintIcon();
		home.switchToSelectReport();
		// home.selectReport.VerifyRecordCount(count2);
		home.selectReport.selectApprovedReport();
		/*
		 * home.switchToPnxReportCrystalPDFScreen();
		 * home.pnxReportCrystalPDFScreen.ClosePnxReportCrystalPDFScreen();
		 */
	}

	@Test(groups = { "2020DefectCallEntry" }) // Automated by Stalin
	public void callentryedittaballowingtoedit_258312(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "258312");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.verifyEditTabIsDisplayed();
		records.callEntry.verifyCallSummaryTabIsDisplayed();
		records.callEntry.verifyDispositionTabIsDisplayed();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.reportedDate();
		records.callEntry.reportedTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.enterAtLocation1();
		records.callEntry.verifyLocationInfoIconIsDisplayed();
		records.callEntry.clickCADDispositionSearchButton();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.selectAtDispositionInGrid();
		records.switchToCallEntry();
		records.callEntry.clickEditTab();
		records.callEntry.enterAtPrimeUnit();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		String readCallNo = records.callEntry.readCallNo();
		records.callEntry.closeScreen();
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterCallNoByActiveData(readCallNo);
		records.switchToCallEntry();
		records.callEntry.clickEditTab();
		records.callEntry.clickCallCompletionLocationCheckBox();
		records.callEntry.clearLocation();
		records.callEntry.enterAtLocation1();
		records.callEntry.clickCallCompletionLocationCheckBox();
		records.callEntry.verifyLocationInfoIconIsDisplayed();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();

	}

	@Test(groups = { "2020DefectCallEntry" }) // Automated By Stalin
	public void clickPrinticonundercallentryscreen_260391(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "260391");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		String readCaseNo1 = records.caseUpdate.readCaseNo1();
		records.caseUpdate.closeTheScreen();
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.clickSearchButton();
		records.callSearch.selectRowByActiveCallNo(readCaseNo1);
		records.switchToCallEntry();
		records.callEntry.SwithchtoDispositionTab();
		records.callEntry.callEntryDispositionTab.clickDispositionSearchButton();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.selectAtDispositionInGrid();
		records.switchToCallEntry();
		records.callEntry.SwithchtoDispositionTab();
		records.callEntry.callEntryDispositionTab.clickAddButton();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.ClickPrintButton();
		home.switchToSelectReport();
		home.selectReport.verifyReportNameAsCADActivityDetailReport();
		home.selectReport.CloseTheScreen();
		records.switchToCallEntry();

	}

	@Test(priority = 1, groups = { "2020DefectCallEntrySequential" }) // Vijay
	public void verifyJuvenileStatusDropdownInChargeTabInArrestEntryScreen_259718(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "259718");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsCJRS();
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter779AsTrue();
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter816AsTrue();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.selectSuspectOfUsingAsNotApplicable();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();// Changed
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();// Changed
		records.switchToCaseUpdate();
		String caseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.closeTheScreen();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Search");
		names.switchToArrestSearch();
		names.arrestSearch.clickAddnewButton();
		names.switchToArrestEntry();
		names.arrestEntry.enterAtJNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.enterCaseNoByActiveData(caseNo);
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.VerifyAtOfficer1();
		names.arrestEntry.arrestTab.SelectAtArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.switchToArrestEntry();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.tabTheCaseNoEntries();
		names.arrestEntry.chargeTab.EnterCountAs1();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectAtStatus();
		names.arrestEntry.chargeTab.verifyJuvenileStatusIsEnabled();
		names.arrestEntry.chargeTab.selectAtJuvenileStatus();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.switchToArrestEntry();
		names.arrestEntry.SaveNCloseScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		settings.switchToSystemParamter();
	}

	@Test // Vijay // This Script for PoliceNJAutomation DB
	public void verifyThatTheDomesticViolenceReportIsAbleToPrintFromDVEntryInDVSearchScreen_260159(
			ITestContext testcontext) {
		testcontext.setAttribute("testID", "260159");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();// Changed
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		String reportedDate = records.caseUpdate.readReportedDate();
		String reportedTime = records.caseUpdate.readReportedTime();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.ClickDomesticViolanceIconUsingVictim();
		records.switchToDVEntry();
		records.dVEntry.VerifyAtCaseNo();
		records.dVEntry.verifyReportedDateTimeAutoPopulated(reportedDate, reportedTime);
		records.dVEntry.verifyReportedDateTimeDisabled();
		records.dVEntry.verifyCaseNoDisabled();
		records.dVEntry.EnterTotalTimeSpent();
		records.dVEntry.ClickAlcoholInvolvedCheckBox();
		records.dVEntry.ClickOtherDrugsInvolvedCheckBox();
		records.dVEntry.SelectViolationofDomesticViolationYes();
		records.dVEntry.VerifyVictimInformationfieldsDisabled();
		records.dVEntry.VerifyOffenseInformationfieldsDisabled();// Changed
		records.dVEntry.SelectAtOffenderName();
		records.dVEntry.selectHouseHoldStatusAsPresentHouseholdMember();
		records.dVEntry.SelectArrestedFor();
		records.dVEntry.ClickOffenderCommitSucideCheckbox();
		records.dVEntry.EnterRemarks();
		records.dVEntry.SaveAndClose();// Changed
		loader.navigateToScreen("DV Search");
		records.switchToDVSearch();
		records.dVSearch.EnterAtCaseNo();
		records.dVSearch.ClickReportedDateResetButton();
		records.dVSearch.ClickSearch();
		records.dVSearch.SelectRowByAtCaseNo();
		records.switchToDVEntry();
		records.dVEntry.clickPrintIcon();
		home.switchToSelectReport();
		home.selectReport.clickUCRDomesticViolenceReport();

	}

	@Test // Vijay
	public void verifySerialIsGettingMappedInGridUnderVehicleTabInCallEntryScreen_261415(ITestContext testcontext) {
		testcontext.setAttribute("testID", "261415");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.callSearch.clickSearchButton();
		records.callSearch.SelectRowInGrid(0);
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.ClickVehicleLookupIcon();
		vehicle.switchToVehicleBoatSearchHelpWindow();
		vehicle.vehicleBoatSearchHelpWindow.selectVehicle();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.selectAtActivity();
		records.callEntry.vehicleTab.clickAddButton();
		records.callEntry.vehicleTab.ClickAtActivityInGrid();
		records.callEntry.vehicleTab.clickAddButton();
		records.callEntry.vehicleTab.verifySerialIsNotEmptyInGrid(0);
	}

	@Test
	// Splitted from 251306 //Mithun //Changed by Vijay
	public void PoliceDefect2020_251306_2(ITestContext testContext) {
		testContext.setAttribute("testID", "251306_2");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter782AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter835AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter736AsDivSec();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsApproved();// Uof Reading Signature and officer name is not possible
	}

	@Test
	// Automated by Mithun//Reviewed By Vijay
	public void PoliceDefect2020_251470(ITestContext testContext) {
		testContext.setAttribute("testID", "251470");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter2017AsCurrentMonthYear();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.ClickOffenderIcon();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectCircumstances1AsArgument();
		records.nameVictim.SelectInjuryLevel();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.VerifyNIBRSTabGreenColor();// Changed
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.SelectAtDivision();
		records.reportManager.updateStatusTab.SelectAtSection();
		records.switchToReportManager();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifiyStatusAsSubmitted();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		loader.navigateToScreen("IBR Submission");
		records.switchToIBRSubmission();
		records.iBRSubmissionScreenTab.clickSubmissionLink();
		records.switchToIBRSubmissionEntry();
		records.iBRSubmissionEntry.EnterToDateAsCurrentDate();
		records.iBRSubmissionEntry.clickGenerateFileButton();
		records.iBRSubmissionEntry.VerifySaveConfirmMessage();// Changed
		records.iBRSubmissionEntry.VerifyConfirmGenerateNIBRSSubmissionFile();
		records.iBRSubmissionEntry.verifyFileCreationStatusMessage();

	}

	@Test(groups = { "2020DefectUCR" }) // Vijay // Mithun Testcase//Reviewed By Vijay
	public void verifyReturnAOffenseReportForTheOffenseArsonCountShouldDisplayedInUCRReport_251471(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "251471");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectCrimeAgainstAsProperty();
		records.fTC.selectAtPropertyLoss();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.selectSuspectOfUsingAsNotApplicable();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.caseUpdate.ClickUCRTab();
		records.caseUpdate.uCRTab.EnterAtUCRCode();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		loader.navigateToScreen("UCR");
		records.switchToUCR();
		records.uCR.enterSubmissionPeriodAsCurrentDate();
		records.uCR.EnterSubmissionPeriodToAsCurrentDate();
		records.uCR.ClickReturnAOffenseReportCheckbox();
		records.uCR.ClickAllReportCheckbox();
		records.uCR.ClickGenerateReportButton();// Changed
		records.uCR.Verify14DoYouWantToPrintTheReportAckMsg();
		records.switchToUCRReportPDF();
		Playback.driver.close();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUCRTab();
		records.caseUpdate.uCRTab.EnterAtUCRDisposition();
		records.caseUpdate.uCRTab.TabOutClearanceDate();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		loader.navigateToScreen("UCR");
		records.switchToUCR();
		records.uCR.ClickResetButton();
		records.uCR.enterSubmissionPeriodAsCurrentDate();
		records.uCR.EnterSubmissionPeriodToAsCurrentDate();
		records.uCR.ClickReturnAOffenseReportCheckbox();
		records.uCR.ClickAllReportCheckbox();
		records.uCR.ClickGenerateReportButton();
		records.uCR.Verify14DoYouWantToPrintTheReportAckMsg();
		records.switchToUCRReportPDF();
	}

	@Test
//Mithun
	public void PoliceDefect2020_255132(ITestContext testContext) {

		testContext.setAttribute("testID", "255132");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter203AsSMTPserver();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter204AsBlank();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter205AsBlank();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter806AsEmailId();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter807As1();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter808As1();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter809As1();
		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToModule("Records");
		loader.navigateToScreen("UOF Search");
		records.switchToUOFSearch();
		records.uOFSearch.ClickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.EnterAtRelatedCaseNo();
		records.uOFEntry.EnterAtSubjectLastName();
		records.uOFEntry.EnterAtSubjectFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.SelectName();
		records.switchToUOFEntry();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.VerifyCurrentDateAutoPopulates();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.SelectAtTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.SelectEffectiveness();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.Save();
		records.switchToUOFEntry();

	}

	@Test(groups = { "2020DefectReportSearch" }) // Q4 Sprint 5 Automated by Mahesha
	public void ApprovedReportRedactFunctionality_261104(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "261104");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.SelectReportTypeAsIncidentReport();
		records.reportSearch.SelectStatusAsApproved();
		records.reportSearch.enterAtFromCaseNo();
		records.reportSearch.ClickSearchButton();
		records.reportSearch.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsApproved();
		records.reportStatus.ClickAtRedactButton();
		records.switchToReportStatusForRedact();
		records.reportStatusForRedact.clickFieldsButton();
		records.switchToRecordsExpungement();
		records.redactExpungement.selectAtRedactCheckBoxByField();
		records.redactExpungement.clickSaveAndClose();
		records.switchToReportStatusForRedact();
		records.reportStatusForRedact.clickRefresh();
		records.reportStatusForRedact.clickSaveAndCloseButton();
		records.reportStatusForRedact.enterAtReasonForRedaction();
		records.reportStatusForRedact.clickSaveAndCloseButtonRedactPopup();
		records.reportStatusForRedact.verifyAdditionSuccessfulAck();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToReportSearch();
		records.reportSearch.reloadReportSearchScreen();
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.SelectReportTypeAsIncidentReport();
		records.reportSearch.SelectStatusAsApproved();
		records.reportSearch.enterAtFromCaseNo();
		records.reportSearch.ClickSearchButton();
		records.reportSearch.verifyRedactedColumnEnableInGrid();
		records.reportSearch.clickOnRedactIconInGridByCaseNo();
		records.switchToReportStatusFoViewRedactReports();
		records.reportStatusViewRedactReport.verifyAtReportTypeByIndex(0);
		records.reportStatusViewRedactReport.verifyAtReportTypeByIndex(1);
		records.reportStatusViewRedactReport.veifyAtRedactComments(1);
	}

	@Test(priority = 11, groups = { "2020DefectReportSearchSequential" }) // Q4 Sprint 5 Automated by Mahesha
	public void VerifyAbleToSetALCpermissionRedactReport_260823(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "260823");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.SelectReportTypeAsIncidentReport();
		records.reportSearch.SelectStatusAsApproved();
		records.reportSearch.enterAtFromCaseNo();
		records.reportSearch.ClickSearchButton();
		records.reportSearch.verifyRedactedColumnEnableInGrid();
		records.reportSearch.clickOnRedactIconInGridByCaseNo();
		records.switchToReportStatusFoViewRedactReports();
		records.reportStatusViewRedactReport.verifyAtReportTypeByIndex(0);
		records.reportStatusViewRedactReport.clickAtRedactReportALCIcon();

		home.switchToALCScreen();
		home.aLCScreen.verifyAtSetPermissionForRedact();
		home.aLCScreen.ClickPFTab();
		home.aLCScreen.aLCPFTab.SelectAtAction();
		home.aLCScreen.aLCPFTab.EnterAtPFCode();
		home.aLCScreen.aLCPFTab.ClickAddButton();
		home.aLCScreen.aLCPFTab.VerifyAtActionInGrid(0);
		home.aLCScreen.SaveScreen();
		home.switchToALCScreen();
		home.aLCScreen.ClickPFTab();
		home.aLCScreen.aLCPFTab.selectActionAsDeny();
		home.aLCScreen.aLCPFTab.EnterAtPFCode1();
		home.aLCScreen.aLCPFTab.ClickAddButton();
		home.aLCScreen.SaveScreen();
		home.switchToALCScreen();
		home.aLCScreen.VerifySuccessfulStatusMessage();
		home.aLCScreen.ClickPFTab();
		home.aLCScreen.aLCPFTab.VerifyAtActionInGrid(0);
		home.aLCScreen.aLCPFTab.VerifyAtActionInGrid(1);

		home.aLCScreen.ClickGroupTab();
		home.aLCScreen.aLCGroupTab.SelectAtAction();
		home.aLCScreen.aLCGroupTab.selectAtDivision();
		home.aLCScreen.aLCGroupTab.selectAtSection();
		home.aLCScreen.aLCGroupTab.selectAtSquad();
		home.aLCScreen.aLCGroupTab.selectTitle();
		home.aLCScreen.aLCGroupTab.ClickAdd();
		home.aLCScreen.SaveScreen();
		home.switchToALCScreen();
		home.aLCScreen.VerifySuccessfulStatusMessage();
		home.aLCScreen.ClickGroupTab();
		home.aLCScreen.aLCGroupTab.VerifyAtActionInGrid(0);
		home.aLCScreen.aLCGroupTab.selectActionAsDeny();
		home.aLCScreen.aLCGroupTab.selectDivision();
		home.aLCScreen.aLCGroupTab.SelectSection();
		home.aLCScreen.aLCGroupTab.selectAtSquad();
		home.aLCScreen.aLCGroupTab.selectTitle();
		home.aLCScreen.aLCGroupTab.ClickAdd();
		home.aLCScreen.SaveScreen();
		home.switchToALCScreen();
		home.aLCScreen.VerifySuccessfulStatusMessage();
		home.aLCScreen.ClickGroupTab();
		home.aLCScreen.aLCGroupTab.VerifyAtActionInGrid(0);
		home.aLCScreen.aLCGroupTab.VerifyAtActionInGrid(1);
	}

	@Test(priority = 10, groups = { "2020DefectReportSearchSequential" }) // Q4 Sprint 5 Automated by Mahesha
	public void VerifyAbleToSetALCpermissionOriginalReport_260824(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "260824");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.SelectReportTypeAsIncidentReport();
		records.reportSearch.SelectStatusAsApproved();
		records.reportSearch.enterAtFromCaseNo();
		records.reportSearch.ClickSearchButton();

		records.reportSearch.verifyRedactedColumnEnableInGrid();
		records.reportSearch.clickOnRedactIconInGridByCaseNo();
		records.switchToReportStatusFoViewRedactReports();
		records.reportStatusViewRedactReport.verifyAtReportTypeByIndex(0);
		records.reportStatusViewRedactReport.clickAtOriginalReportALCIcon();

		home.switchToALCScreen();
		home.aLCScreen.verifyAtSetPermissionForIncident();
		home.aLCScreen.ClickPFTab();
		home.aLCScreen.aLCPFTab.SelectAtAction();
		home.aLCScreen.aLCPFTab.EnterAtPFCode();
		home.aLCScreen.aLCPFTab.ClickAddButton();
		home.aLCScreen.aLCPFTab.VerifyAtActionInGrid(0);
		home.aLCScreen.SaveScreen();
		home.switchToALCScreen();
		home.aLCScreen.ClickPFTab();
		home.aLCScreen.aLCPFTab.selectActionAsDeny();
		home.aLCScreen.aLCPFTab.EnterAtPFCode1();
		home.aLCScreen.aLCPFTab.ClickAddButton();
		home.aLCScreen.SaveScreen();
		home.switchToALCScreen();
		home.aLCScreen.VerifySuccessfulStatusMessage();
		home.aLCScreen.ClickPFTab();
		home.aLCScreen.aLCPFTab.VerifyAtActionInGrid(0);
		home.aLCScreen.aLCPFTab.VerifyAtActionInGrid(1);

		home.aLCScreen.ClickGroupTab();
		home.aLCScreen.aLCGroupTab.SelectAtAction();
		home.aLCScreen.aLCGroupTab.selectAtDivision();
		home.aLCScreen.aLCGroupTab.selectAtSection();
		home.aLCScreen.aLCGroupTab.selectAtSquad();
		home.aLCScreen.aLCGroupTab.selectTitle();
		home.aLCScreen.aLCGroupTab.ClickAdd();
		home.aLCScreen.SaveScreen();
		home.switchToALCScreen();
		home.aLCScreen.VerifySuccessfulStatusMessage();
		home.aLCScreen.ClickGroupTab();
		home.aLCScreen.aLCGroupTab.VerifyAtActionInGrid(0);
		home.aLCScreen.aLCGroupTab.selectActionAsDeny();
		home.aLCScreen.aLCGroupTab.selectAtDivision1();
		home.aLCScreen.aLCGroupTab.selectAtSection1();
		home.aLCScreen.aLCGroupTab.selectAtSquad();
		home.aLCScreen.aLCGroupTab.selectTitle();
		home.aLCScreen.aLCGroupTab.ClickAdd();
		home.aLCScreen.SaveScreen();
		home.switchToALCScreen();
		home.aLCScreen.VerifySuccessfulStatusMessage();
		home.aLCScreen.ClickGroupTab();
		home.aLCScreen.aLCGroupTab.VerifyAtActionInGrid(0);
		home.aLCScreen.aLCGroupTab.VerifyAtActionInGrid(1);
	}

	@Test(groups = { "2020DefectReportEntry" }) // Q4 Sprint 5 Automated by Mahesha
	public void VerifyDVEntryOffenderNameFieldropdownListingNamesforSecondDVEntry_261091(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "261091");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectAtType();
		records.reportManager.tabDateAndTime();
		records.reportManager.VerifyPFNotRelatedToConfirmPopupMessage();
		records.switchToReportManager();
		records.reportManager.Saveandclose();

		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.EnterAtLastName();
		records.caseNames.EnterAtFirstName();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCaseNames();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();

		records.switchToCaseNames();
		records.caseNames.EnterAtLastName1();
		records.caseNames.EnterAtFirstName1();
		names.nameSearchHelpWindow.SelectRowAtName1();
		records.switchToCaseNames();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();

		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.Save();

		records.switchToCaseNames();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickDomesticViolenceIcon(1);

		records.switchToDVEntry();
		records.dVEntry.SelectAtOffenderName();
		records.dVEntry.verifyNoOfOffendersAvailableAs2();
		records.dVEntry.SelectArrestedFor();
		records.dVEntry.EnterRemarks();
		records.dVEntry.SaveScreen();
		records.dVEntry.VerifyAdditionSuccessfulMessage();
		records.dVEntry.SaveAndClose();

		records.switchToCaseNames();

		records.caseNames.ClickDomesticViolenceIcon(2);

		records.switchToDVEntry();
		records.dVEntry.SelectAtOffenderName1();
		records.dVEntry.verifyNoOfOffendersAvailableAs2();
		records.dVEntry.SelectArrestedFor();
		records.dVEntry.EnterRemarks();
		records.dVEntry.SaveScreen();
		records.dVEntry.VerifyAdditionSuccessfulMessage();

	}

	@Test(groups = { "2020DefectCallSearch" }) // Q4 Sprint 5 Automated by Mahesha
	public void VerifyJurisAliasAddressLocationFromCallEntryScreenOrCaseUpdateScreen_261096(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "261096");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		records.callEntry.callEntryNamesTab.selectNameFromHelpWindow();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.verifyAtAddress();
		records.callEntry.callEntryNamesTab.verifyAtAddressNotContainsJurisAlias();
		records.callEntry.closeScreen();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter532AsTrue();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.callSearch.reloadCallSearch();
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		records.callEntry.callEntryNamesTab.selectNameFromHelpWindow();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.verifyAtAddressContainsJurisAlias();
		records.callEntry.callEntryNamesTab.selectAtActivity();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();

		records.switchToCaseUpdate();
		records.caseUpdate.clickNamesTab();
		records.caseUpdate.caseUpdateNamesTab.SelectRowByAtName();
		records.caseUpdate.caseUpdateNamesTab.verifyAtAddressContainsJurisAlias();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter532AsFalse();
		settings.switchToSystemParamter();

	}

	@Test(groups = { "2020DefectCallEntry" }) // Q4 Sprint 5 Automated by Mahesha
	public void VerifyCallEntryScreenIsAllowingToEditGridrecordsInUpdateMode_261418(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "261418");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.SelectRowByAtName();
		records.callEntry.callEntryNamesTab.verifyUpdateModeEnabled();
		records.callEntry.callEntryNamesTab.clickInternalSaveButton();
		records.callEntry.callEntryNamesTab.verifyUpdatedDataExistinNameTabAcknowledge();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.verifyUpdatedSuccessfulStatusMessage();
		records.switchToCallEntry();
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.VerifyAtRelatedCallNo(0);
		records.callEntry.callEntryRelatedCallsTab.selectRowByAtRelatedCallNo();
		records.callEntry.callEntryRelatedCallsTab.verifyUpdateModeEnabled();
		records.callEntry.callEntryRelatedCallsTab.clickSaveInternalTab();
		records.callEntry.callEntryRelatedCallsTab.verifyUpdatedDataExistinRelatedCallsTabAcknowledge();
		records.switchToCallEntry();
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.ClickAddButton();
		records.callEntry.callEntryRelatedCallsTab.SaveInternalTab();
		records.switchToCallEntry();
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.verifyUpdatedSuccessfulStatusMessage();

	}

	@Test(groups = { "2020DefectCallEntry" }) // Automated by Stalin
	public void AlarmCallnotshowsinProcessFasleAlarm_260395(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "260395");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCallEntry();
		String readCallNo = records.callEntry.readCallNo();
		records.callEntry.closeScreen();
		loader.navigateToModule("Alarms");
		loader.navigateToScreen("False Alarms");
		alarms.switchToFalseAlarms();
		alarms.falseAlarms.selectRowByAtActiveCallNo(readCallNo);
		alarms.falseAlarms.alarmNotFoundPopupClickYesToCreate();
		alarms.switchToAlarmsEntry();
		alarms.alarmsEntry.EnterAtBusinessOrPersonNameID();
		alarms.alarmsEntry.clickMainTab();
		alarms.alarmsEntry.alarmEntryMainTab.clickSameAsBusinessAccountCheckbox();
		alarms.switchToAlarmsEntry();
		alarms.alarmsEntry.SaveScreen();
		alarms.switchToAlarmsEntry();
		alarms.alarmsEntry.ClickProcessFalseAlarmTab();
		alarms.alarmsEntry.processFalseAlarmTab.verifyCallNoByActiveData(readCallNo);
		alarms.alarmsEntry.processFalseAlarmTab.ClickNonChargeableDonotChargeRadioButton();
		alarms.alarmsEntry.processFalseAlarmTab.ClickProcessButton();
		alarms.switchToAlarmsEntry();
		String readAlarmNo = alarms.alarmsEntry.readAlarmNo();
		alarms.alarmsEntry.CloseScreen();
		alarms.switchToFalseAlarms();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCallEntry();
		records.callEntry.clickMainTab();
		records.callEntry.callEntryMainTab.verifyAlarmNoByActiveData(readAlarmNo);
		records.switchToCallEntry();
		String readCallNo2 = records.callEntry.readCallNo();
		records.callEntry.closeScreen();
		loader.navigateToModule("Alarms");
		loader.navigateToScreen("False Alarms");
		alarms.switchToFalseAlarms();
		alarms.falseAlarms.clickResetButton();
		alarms.falseAlarms.selectRowByAtActiveCallNo(readCallNo2);
		alarms.switchToAlarmsEntry();
		// alarms.alarmsEntry.clickResetButton();
		alarms.alarmsEntry.ClickProcessFalseAlarmTab();
		alarms.alarmsEntry.processFalseAlarmTab.verifyCallNoByActiveData(readCallNo2);
		alarms.switchToAlarmsEntry();
	}

	@Test(groups = { "2020DefectCallEntry" }) // Automated by Stalin
	public void CommonNameReflectinCallEntry_260699(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "260699");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		loader.navigateToModule("Geo");
		loader.navigateToScreen("Common Names");
		geo.switchToCommonNamesScreen();
		geo.commonNames.enterAtAddress(); // updated
		geo.commonNames.ClickAddNew();
		geo.switchToCommonNamesEntry();
		geo.commonNamesEntry.enterAtAddress1();
		geo.commonNamesEntry.EnterAtCommonName();
		geo.commonNamesEntry.EnterAtSortOrder();
		geo.commonNamesEntry.ClickAddButton();
		geo.commonNamesEntry.SaveAndClose();
		geo.switchToCommonNamesScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.verifyAtCommonName();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.verifyAtCommonName();
		records.callEntry.closeScreen();
		geo.switchToCommonNamesScreen();
		geo.commonNames.ClickSearch();
		geo.commonNames.selectRowInGrid(0);
		geo.switchToCommonNamesEntry();
		geo.commonNamesEntry.ClickAtCommonName();
		geo.commonNamesEntry.clearCommonName();
		geo.commonNamesEntry.EnterAtCommonName1();
		geo.commonNamesEntry.ClickAddButton();
		geo.commonNamesEntry.SaveAndClose();
		geo.switchToCommonNamesScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.verifyAtCommonName1();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.verifyAtCommonName1();
		records.callEntry.closeScreen();
		records.switchToCaseUpdate();

	}

	@Test(groups = { "2020DefectCaseUpdateTabs" }) // Automated by Stalin
	public void MappingVictimandOffender_260702(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "260702");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectAtActivity1();
		records.caseNames.clickAddButton();
		records.caseNames.VerifyAtActivityInGrid(0);
		records.caseNames.VerifyAtActivity1InGrid(1);
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.SelectAtVictimType();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.clickAddButton();
		records.nameVictim.VerifyDomesticViolationAcknowledgeMessage();
		records.switchToNameVictim();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.SelectInjuryLevelAsNone();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectAtRelationship();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();

	}

	@Test(groups = { "2020DefectCallEntry" }) // Automated by Stalin
	public void AbletoopentheProcessedcallAlarmEntry_260692(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "260692");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.ClickSystemParameterIcon();
		settings.switchToSystemParamterScreen();
		// settings.sysParameter.selectAtModule();
		settings.sysParameter.setSystemparameter228AsNull();
		settings.switchToSystemParamterScreen();
		settings.sysParameter.setSystemparameter1804AsCurrentDate();
		settings.switchToSystemParamterScreen();
		settings.sysParameter.closeTheScreen();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCallEntry();
		String readCallNo = records.callEntry.readCallNo();
		records.callEntry.closeScreen();
		loader.navigateToModule("Alarms");
		loader.navigateToScreen("False Alarms");
		alarms.switchToFalseAlarms();
		alarms.falseAlarms.ClickSearchButton();
		alarms.falseAlarms.selectRowByAtActiveCallNo(readCallNo);
		alarms.falseAlarms.alarmNotFoundPopupClickYesToCreate();
		alarms.switchToAlarmsEntry();
		alarms.alarmsEntry.ClickProcessFalseAlarmTab();
		alarms.alarmsEntry.processFalseAlarmTab.verifyCallNoByActiveData(readCallNo);
		alarms.alarmsEntry.processFalseAlarmTab.ClickNonChargeableDonotChargeRadioButton();
		alarms.alarmsEntry.processFalseAlarmTab.ClickProcessButton();
		alarms.alarmsEntry.SaveScreen();
		alarms.switchToAlarmsEntry();
		alarms.alarmsEntry.CloseScreen();
		alarms.switchToFalseAlarms();
		alarms.falseAlarms.ClickIncludeProcessedCheckbox();
		alarms.falseAlarms.ClickSearchButton();
		alarms.falseAlarms.verifyCallNoInGridByActiveData(readCallNo);
		alarms.falseAlarms.selectRowByAtActiveCallNo(readCallNo);
		alarms.switchToAlarmsEntry();
		alarms.alarmsEntry.verifyAtAlarmLocation();
	}

	@Test(groups = { "2020DefectReportsVerify" }) // Automated by Stalin
	public void OriginalreportreplacedredactedReport_250111(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "250111");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.ClickAtRedactButton();
		records.switchToReportStatusForRedact();
		records.reportStatusForRedact.clickSaveAndCloseButton();
		records.reportStatusForRedact.enterAtReasonForRedaction();
		records.reportStatusForRedact.clickSaveAndCloseButtonRedactPopup();
		records.reportStatusForRedact.verifyAdditionSuccessfulAcknowledgeMessage();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		records.switchToCaseSearch();
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickSearch();
		records.reportSearch.SelectRowByAtCaseNo();
		records.switchToReportStatusFoViewRedactReports();
		records.reportStatusViewRedactReport.clickAtRedactReport();
		records.switchToReportStatusForRedact();
		records.reportStatusForRedact.close();
		records.switchToReportStatusFoViewRedactReports();
		records.reportStatusViewRedactReport.clickAtOriginalReport();
		records.switchToReportStatusFoViewRedactReports();
		records.reportStatusViewRedactReport.close();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsApproved();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsMoreInfoNeeded();
		records.reportManager.updateStatusTab.selectRejectionCodeAsSpellingErrors();
		records.switchToReportManager();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.Close();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToReportSearch();
		records.reportSearch.clickBackButton();
		records.reportSearch.ClickResetButton();
		records.reportSearch.enterAtFromCaseNo();
		records.reportSearch.clickSearch();
		records.reportSearch.verifyGridColumnValuesAtStatus();
		records.reportSearch.SelectRowByAtCaseNo();
		records.switchToReportStatusFoViewRedactReports();
		records.reportStatusViewRedactReport.clickAtOriginalReport();
		records.switchToReportStatusFoViewRedactReports();
		records.reportStatusViewRedactReport.close();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsMoreInfoNeeded();
		records.switchToReportStatus();

	}

	@Test(groups = { "2020DefectCaseUpdateTabs" }) // Missed Testcase //Automated by Stalin
	public void UpdatedNameshowsinVehicleEntry_254130(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "254130");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.ClickVehicleButton();
		records.switchToCaseVehicle();
		records.caseVehicle.EnterAtVehicle(); // updated
		records.caseVehicle.selectAtVehicleState(); // updated
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.clickSelectButton();
		records.switchToCaseVehicle();
		records.caseVehicle.SelectAtActivity();
		records.caseVehicle.ClickAddButton();
		records.caseVehicle.VerifyAtActivity(0);
		records.caseVehicle.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.ClickVehicleButton();
		records.switchToCaseVehicle();
		records.caseVehicle.ClickAtActivityInGrid();
		records.caseVehicle.enterAtName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCaseVehicle();
		records.caseVehicle.ClickAddButton();
		records.caseVehicle.Save();
		records.caseVehicle.verifyAtNameInGrid(0);
		records.caseVehicle.ClickAtActivityInGrid();
		records.caseVehicle.ClickVehicleSearchMagnifyIcon();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.clickMainTab();
		vehicle.vehicleBoatEntry.vehicleBoatEntryMainTab.verifyAtName();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.closeScreen();
		records.switchToCaseVehicle();
		records.caseVehicle.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.switchToVehicleTab();
		records.caseUpdate.caseUpdateVehicleTab.clickAtActivityInGrid();
		records.caseUpdate.caseUpdateVehicleTab.verifyAtName();
		records.switchToCaseUpdate();

	}

	@Test(groups = { "2020DefectReportEntry" }) // Automated by Stalin 2021 Q1 Sprint1
	public void copychargewindowfortheloggedinuser_261994(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "261994");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.verifyCaseNoAsReadOnlyMode();
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.verifyArrestDateAsCurrentDate();
		names.arrestEntry.arrestTab.selectHowAsOnViewArrest(); // Updated
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.arrestTab.VerifyAtOfficer1();
		names.arrestEntry.arrestTab.selectArmed();
		names.switchToArrestEntry();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.switchToArrestEntry();
		names.arrestEntry.saveScreen();
		names.switchToArrestEntry();
		names.arrestEntry.closeTheScreen();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.ClickPopupGridCheckboxUsingAtCharge();
		records.aCD.ClickPopupCopyButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.clickSave();
		records.aCD.verifyOccuredFromTOorOccuredAtAcknowledgeMessage();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.Save();
		records.switchToACD();

	}

	@Test(priority = 2, groups = { "2020DefectCallEntrySequential" }) // Automated by Stalin 2021 Q1 Sprint1
	public void SupplementalReportShouldnotshowNamecopywindow_261998(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "261998");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsCJRS();
		settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter779AsTrue();
		// settings.switchToSystemParamter();
		// settings.sysParameter.setSystemparameter816AsTrue();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.VerifyAtLastNameFirstNameInGrid(0); // updated
		records.switchToCallEntry();
		records.callEntry.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyAtLastNameAndFirstName(0);
		records.caseUpdate.caseUpdateNamesTab.VerifyActivityAsVictim(1);

		records.switchToCaseUpdate();
		String caseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickPopupCopyButton();
		records.caseNames.verfiyAtNameInGridByLastNameFirstName(0);
		records.caseNames.verfiyAtNameInGridByLastNameFirstName(1);
		records.caseNames.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.VerifyIncidentReportStatusAsOnHold();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.SelectAtType1();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		settings.switchToSystemParamter();

	}

	@Test(priority = 3, groups = { "2020DefectCallEntrySequential" }) // Automated by Stalin
	public void namecopysectionshowinginNamesearchwindow_261999(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "261999");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		settings.switchToSystemParamter();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.VerifyAtLastNameFirstNameInGrid(0); // updated
		records.switchToCallEntry();
		records.callEntry.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyAtLastNameAndFirstName(0);
		records.caseUpdate.caseUpdateNamesTab.VerifyActivityAsVictim(1);
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickPopupCopyButton();
		records.caseNames.verifyAtNameInGrid();
		records.caseNames.Save();
		records.caseNames.verifyAtNameInGrid();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.VerifyIncidentReportStatusAsOnHold();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.SelectAtType1();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickNameSearchButton();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.SelectIncidentNameAtName();
		records.switchToCaseNames();

	}

	@Test // Mithun
	public void VerifyIncidentDetailsAllowingToPrintArrestDetails_257952(ITestContext testContext) {
		testContext.setAttribute("testID", "257952");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter912AsYes();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.verifyDispositionTabEnabled();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.EnterAtCallCompletionLocation();
		records.callEntry.EnterAtCADDisposition();
		records.callEntry.enterAtPrimeUnit();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.clickGenerateCheckbox();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();

		records.switchToCaseUpdate();
		String CaseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.ClickCMIcon();

		cm.switchToCaseFolder();
		cm.caseFolder.clickAssignmentTab();
		cm.caseFolder.caseFolderAssignmentTab.enterAtSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.enterAtPrimeInvestigator();
		cm.caseFolder.caseFolderAssignmentTab.selectAtDivision();
		cm.caseFolder.caseFolderAssignmentTab.tabOutDateAssignedTime();
		cm.switchToCaseFolder();
		cm.caseFolder.save();
		cm.switchToCaseFolder();
		String InvestNo = cm.caseFolder.readInvestNo();

		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyCMTab();
		home.myHome.myCMTab.clickOpenCaseFolderAccordion();
		home.myHome.myCMTab.verifyInvestNo(InvestNo);
		home.myHome.myCMTab.verifyAtCaseNo(CaseNo);
	}

	@Test(groups = { "2020DefectCallSearch" }) // Mithun
	public void DefectTestcase2020_255130(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "255130");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.clickEditTab();
		records.callEntry.callEntryEditTab.verifyLocationIsEnabled();
		records.callEntry.callEntryEditTab.verifyPrimeUnitIsEnabled();
		records.callEntry.callEntryEditTab.verifyCADCFSIsEnabled();
		records.callEntry.callEntryEditTab.verifyCADDispositionIsEnabled();
		records.callEntry.callEntryEditTab.verifyReportDueIsEnabled();
		records.callEntry.callEntryEditTab.verifyOtherFieldsAreInReadOnlyMode();

	}

	@Test(groups = { "2020DefectCallEntry" }) // Automated by Mithun
	public void Defectestcase2020_255118(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "255118");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		String CaseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.verifyIncidentReportStatusAsReportDue();
		records.caseUpdate.reportingTab.VerifyColumnValueAtOfficer();

		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.ClickShowMyItemsOnly();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowAtOfficerByCaseNo(CaseNo);
		home.myHome.myReportsTab.verifyGridRowTypeAsIncidentReportByCaseNo(CaseNo);
		home.myHome.myReportsTab.verifyGridRowStatusAsReportDueByCaseNo(CaseNo);

	}

	@Test(groups = { "2020DefectCallSearch" })
	// Mithun
	public void PoliceDefect2020_254784(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "254784");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.ClickDateResetButton();
		records.callSearch.enterAtFromDate();
		records.callSearch.enterAtToDate();
		records.callSearch.clickSearchButton();
		records.callSearch.verifyShowButtonEnabled();
		records.callSearch.clickSelectedCheckbox();
		records.callSearch.VerifySelectedCountAs0();
		int rowCount = records.callSearch.getRowCount();
		records.callSearch.verifyCallCheckBoxesDisplayed(rowCount);
		records.callSearch.selectAtLocationCheckboxInGrid();
		records.callSearch.selectAtLocation1CheckboxInGrid();
		records.callSearch.selectAtLocation2CheckboxInGrid();
		records.callSearch.VerifySelectedCountAs3();
		records.callSearch.ClickShowMapButton();
		home.switchToGlobalMapScreen();
		home.globalMapScreen.verifyAtAddressInSideBar();
		home.globalMapScreen.verifyAtLocation1InSideBar();
		home.globalMapScreen.verifyAtLocation2InSideBar();

	}

	@Test(groups = { "2020DefectIncidentReports" })
	public void records_250094(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "250094");

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();

		records.caseSearch.enterAtCaseNo();
		records.caseSearch.ClickCaseNoInfoIcon();

		records.switchToCaseUpdate();

		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.SelectCharge();
		records.aCD.VerifyAtDescriptionInGrid(1);
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectPropertyLossAsStolen();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectWeaponsUsedAsNone();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.ClickUnknownCheckbox();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();
		records.caseNames.SaveNClose();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.SelectAtDivision();
		records.reportManager.updateStatusTab.SelectAtSection();
		records.reportManager.updateStatusTab.SelectAtSquad();
		records.reportManager.ClickSave();
		records.reportManager.VerifiyStatusAsSubmitted();

		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.Saveandclose();
		records.reportStatus.verifyReportStatusAsApproved();

	}

	@Test(groups = { "2020DefectReportEntry" })
	public void PoliceSprintRecord_251307(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251307");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter736AsDivSec();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();

		records.caseSearch.enterAtCaseNo();
		records.caseSearch.ClickCaseNoInfoIcon();

		records.switchToCaseUpdate();

		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.SelectCharge();
		records.switchToACD();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectCrimeAgainstAsProperty();
		records.fTC.SelectPropertyLossAsStolen();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectWeaponsUsedAsNone();
		records.fTC.SelectDomesticViolence();
		records.fTC.ClickSaveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.EnterAtLastName();
		records.caseNames.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCaseNames();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtLastName1();
		records.caseNames.EnterAtFirstName1();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastName1AndFirstName1();
		records.switchToCaseNames();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.caseNames.ClickDomesticViolenceIcon(1);
		records.switchToCaseNames();

	}

	@Test(priority = 8, groups = { "2020DefectCaseSearchSequential" })
	public void PoliceSprintRecord_251752(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251752");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter794AsFalse();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.SelectCrimeAgainstAsSociety();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.ClickSaveWithConfirm();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.ClickSaveWithConfirm();
		records.reportManager.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNotForPublicNotChecked();
		records.caseUpdate.closeTheScreen();

		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.SelectDomesticViolenceAsNo();
		records.caseSearch.clickSearch();
		records.caseSearch.ClickRowAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNotForPublicNotChecked();

	}

	@Test(priority = 9, groups = { "2020DefectCaseSearchSequential" })
	public void PoliceSprintRecord_251753(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251753");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter794AsFalse();
//	    
//	    objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.caseSearch.ClickCaseNoInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.SelectCrimeAgainstAsSociety();
		records.fTC.selectAtLocationType();
		// records.fTC.selectWeaponsUsedAsUnknown();
		records.fTC.selectSuspectOfUsingAsNotApplicable();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsYes();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.ClickSaveWithConfirm();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.ClickSaveWithConfirm();
		records.reportManager.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNotForPublicNotChecked();
		records.caseUpdate.closeTheScreen();

		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.SelectDomesticViolenceAsNo();
		records.caseSearch.clickSearch();
		records.caseSearch.ClickRowAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNotForPublicNotChecked();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter794AsTrue();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(priority = 10, groups = { "2020DefectCaseSearchSequential" })
	public void PoliceSprintRecord_251754(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251754");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter794AsTrue();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.caseSearch.ClickCaseNoInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.SelectCrimeAgainstAsSociety();
		records.fTC.selectAtLocationType();
		// records.fTC.selectWeaponsUsedAsUnknown();
		records.fTC.selectSuspectOfUsingAsNotApplicable();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNotForPublicChecked();

		loader.navigateToScreen("Case Search");
		records.caseSearch.reloadCaseSearch();
		records.switchToCaseSearch();
		records.caseSearch.SelectDomesticViolenceAsNo();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseSearch();
		records.caseSearch.clickSearch();
		records.caseSearch.ClickRowAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyNotForPublicNotChecked();
	}

	@Test(groups = { "2020DefectCallEntry" }) // 2021 Q1 Sprint 1 Automated by Mahesha
	public void VerifyApplicationShowingExisitngProeprtyEntriesinGridWhichIsAddedinReport_262004(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "262004");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter833AsTrue();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		String CaseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.verifyPropertyTabEnabled();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyPropertyButtonEnabled();
		records.reportStatus.clickPropertyButton();

		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();

		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();

		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterAtValue();
		property.propertyEntry.propertyEntryMainTab.enterAtOwnerName();
		property.switchToPropertyEntry();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.tabOutQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.selectAtDisposition();
		property.propertyEntry.recoveredTab.verifyInitialStrorageLocationIsMandatory();
		property.propertyEntry.recoveredTab.verifyContainerDropdownIsDisplayed();
		property.propertyEntry.recoveredTab.EnterAtRemark();
		property.propertyEntry.recoveredTab.SelectContainerAsBottle();
		property.propertyEntry.recoveredTab.enterAtInitialStorageLocation();
		property.propertyEntry.recoveredTab.SelectPackageAsBottle();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.verifyContainerPackageIconDisplayed();
		property.propertyEntry.recoveredTab.verifyContainerSeqNoAs1();
		property.propertyEntry.recoveredTab.selectContainerSeqNoAsNew();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.propertyEntry.recoveredTab.verifyContainerSeqNoAs2();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveNClose();

		loader.navigateToModule("Property");
		loader.navigateToScreen("Property Edit/Entry");
		property.switchToPropertyEditEntry();
		property.propertyEditEntry.enterAtCaseNumberAndTab(CaseNo);
		property.propertyEditEntry.verifyPropertyListedInGrid();
	}

	@Test(groups = { "2020DefectReportEntry" }) // 2021 Q1 Sprint 1 Automated by Mahesha
	public void VerifyApplicationShowingReportStatusChangesActionsInHistoryTabForLoggedinUser_262006(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "262006");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter736AsNull();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter785AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter835AsTrue();
		loader.logout();

		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.verifyPropertyButtonEnabled();
		records.reportStatus.clickPropertyButton();

		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();

		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();

		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterAtValue();
		property.propertyEntry.propertyEntryMainTab.enterAtOwnerName();
		property.switchToPropertyEntry();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.tabOutQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.selectAtDisposition();
		property.propertyEntry.recoveredTab.verifyInitialStrorageLocationIsMandatory();
		property.propertyEntry.recoveredTab.verifyContainerDropdownIsDisplayed();
		property.propertyEntry.recoveredTab.EnterAtRemark();
		property.propertyEntry.recoveredTab.SelectContainerAsBottle();
		property.propertyEntry.recoveredTab.enterAtInitialStorageLocation();
		property.propertyEntry.recoveredTab.SelectPackageAsBottle();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.ClickSubmitButton();
		property.propertyEntry.VerifyConfirmSubmitMessage();

		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.VerifyIncidentReportStatusAsOnHold();
		records.caseUpdate.reportingTab.verifyPropertyReportStatusAsLocked(1);

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToHistoryTab();
		records.reportManager.reportManagerHistroyTab.VerifyAtPFInHistoryTabInReportData(0);
		records.reportManager.reportManagerHistroyTab.VerifyAtPFInHistoryTabInReportData(1);
		records.reportManager.reportManagerHistroyTab.VerifyAtPFInHistoryTabInReportData(2);
		records.reportManager.reportManagerHistroyTab.VerifyActionOnTheTableAsSubmitted(0);
		records.reportManager.reportManagerHistroyTab.verifyActionAsPropertyEntered(1);
		records.reportManager.reportManagerHistroyTab.VerifyActionOnTheTableAsOnHold(2);

		loader.logout();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter736AsDIVSEC();
		settings.switchToSystemParamter();
	}

	@Test(groups = { "2020DefectLocalRunScripts" }) // 2021 Q1 Sprint 1 Automated by Mahesha //run in local
	public void VerifyApplicationisAllowingToAddSummaryDetailsForLoggedinUser_262008(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());

		testcontext.setAttribute("testID", "262008");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.ClickSummaryButton();

		home.switchToTextMgmtScreen();
		home.textMgmt.switchToTextTempletForm();
		home.textMgmt.EnterAtText();
		home.textMgmt.EnterAtText();
		home.textMgmt.EnterAtText();
		home.switchToTextMgmtScreen();
		home.textMgmt.SaveAndCloseScreen();

		records.switchToReportStatus();
		records.reportStatus.downloadReport();
		records.reportStatus.saveTheReportToLocation("262008");
		String summary = records.reportStatus.readPDFContent("262008");
		records.reportStatus.verifySummaryInPDFReport(summary);

	}

	@Test(groups = { "2020DefectCaseSearch" }) // 2021 Q1 Sprint 1 Automated by Mahesha //run in local
	public void VerifyApplicationAllowingPDFAttachmentAndAllowToSendViaEmail_262007(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "262007");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.VerifyIncidentReportRowAtOfficer(0);
		loader.logout();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.ClickShowMyItemsOnly();
		home.myHome.myReportsTab.SelectStatusAsReportDue();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsReportDueByCaseNo();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.ClickSendEmailButton();
		records.sendEmail.clickOnCancleMail();
		records.reportStatus.clickSendEmailButton();
		records.sendEmail.enterAtToEmailaddress();
		records.sendEmail.enterAtMassage();
		records.sendEmail.clickOnSendMail();
	}

	// 2021Defecttestcases
	@Test(priority = 1, groups = { "ReportEntrySupervisor" }) // 2021 Q1 Sprint 1 Automated by Mahesha
	public void VerifyThatApplicationisAllowingToInitiateTheReportFromReportDueStatusinMyReportTab_263131(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "263131");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.ClickShowMyItemsOnly();
		home.myHome.myReportsTab.SelectStatusAsReportDue();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsReportDueByCaseNo();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.VerifyCurrentDate();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
	}

	// 2021Defecttestcases
	@Test(priority = 2, groups = { "ReportEntrySupervisor" }) // 2021 Q1 Sprint 1 Automated by Mahesha
	public void VerifythatApplicationisAllowingtoViewallTheReportsInTheirDivisionSectionWhenParameter737SetAsdivsec_263132(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "263132");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter745AsFalse();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter736AsDIVSEC();
		loader.logout();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportManager();
		records.reportManager.Close();
		loader.logout();

		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter745AsTrue();
		loader.logout();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();

	}

	// 2021Defecttestcases
	@Test(priority = 3, groups = { "ReportEntrySupervisor" }) // 2021 Q1 Sprint 1 Automated by Mahesha
	public void VerifyThatApplicationisAllowingToEdittheOtherOfficerOnHoldReportsForTheLoggedInUser_263133(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "263133");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter745AsTrue();
		loader.logout();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.verifySaveSaveAndCloseButtonsEnabled();
		records.caseNames.CloseTheScreen();

		records.switchToReportStatus();
		records.reportStatus.ClickVehicleButton();
		records.switchToCaseVehicle();
		records.caseVehicle.verifySaveSaveAndCloseButtonsEnabled();

		records.switchToReportStatus();
		records.reportStatus.ClickSuspectButton();
		records.switchToCaseSuspect();
		records.caseSuspect.ClickAddSuspectButton();
		names.switchToSuspectEntry();
		names.suspectEntry.verifySaveSaveAndCloseButtonsEnabled();

	}

	// 2021Defecttestcases
	@Test(priority = 4, groups = { "ReportEntrySupervisor" }) // 2021 Q1 Sprint 1 Automated by Mahesha
	public void VerifyThatApplicationisAllowingToEdittheOtherOfficerSubmittedReportsForTheLoggedInUser_263134(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "263134");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter759AsTrue();
		loader.logout();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsSubmitted();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsSubmitted();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsSubmitted();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.verifySaveSaveAndCloseButtonsEnabled();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickVehicleButton();
		records.switchToCaseVehicle();
		records.caseVehicle.verifySaveSaveAndCloseButtonsEnabled();
		records.switchToReportStatus();
		records.reportStatus.ClickSuspectButton();
		records.switchToCaseSuspect();
		records.caseSuspect.ClickAddSuspectButton();
		names.switchToSuspectEntry();
		names.suspectEntry.verifySaveSaveAndCloseButtonsEnabled();

	}

	// 2021Defecttestcases
	@Test(priority = 5, groups = { "ReportEntrySupervisor" }) // 2021 Q1 Sprint 1 Automated by Mahesha
	public void VerifyThatApplicationisNotAllowingToEdittheOtherOfficerSubmittedReportsForTheLoggedInUser_263135(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "263135");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter759AsFalse();
		loader.logout();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsSubmitted();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsSubmitted();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsSubmitted();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.verifySaveSaveAndCloseButtonsDisabled();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickVehicleButton();
		records.switchToCaseVehicle();
		records.caseVehicle.verifySaveSaveAndCloseButtonsDisabled();
		records.caseVehicle.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickSuspectButton();
		records.switchToCaseSuspect();
		records.caseSuspect.verifyAddSuspectButtonDisabled();

	}

	// 2021Defecttestcases
	@Test(priority = 6, groups = { "ReportEntrySupervisor" }) // 2021 Q1 Sprint 1 Automated by Mahesha
	public void VerifythatApplicationisallowingtoSelectTheRejectAction_263136(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "263136");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsSubmitted();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsSubmitted();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsReject();
		records.reportManager.updateStatusTab.verifyRejectionCodeAsMandatory();
		records.reportManager.updateStatusTab.SelectRejectionCode();
		records.reportManager.Saveandclose();

		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsRejected();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.verifyRejectionCountAs1(1);
		home.myHome.myReportsTab.VerifyAtRefNo();

	}

	@Test(priority = 7, groups = { "ReportEntrySupervisor" }) // Automated BY Stalin
	public void Approvedwhenreportgotapprovedfromsubmitted_263137(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "263137");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyReportStatusAsApproved();

	}

	@Test(priority = 8, groups = { "ReportEntrySupervisor" }) // Automated by Stalin
	public void ApplicationIsAllowingToRejectTheApprovedReport_263138(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "263138");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.enterAtFromCaseNo();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.clickSearch();
		records.reportSearch.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsMoreInfoNeeded();
		records.reportManager.updateStatusTab.selectRejectionCodeAsSpellingErrors();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToReportSearch();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.SelectStatusAsMoreInfoNeeded();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.verifyAtStatusUsingRefNo();
		home.myHome.myReportsTab.selectRowByAtRefNo();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsMoreInfoNeeded();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.switchToReportManager();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.switchToReportManager();
		records.reportManager.save();
		records.switchToReportManager();

	}

	@Test(priority = 9, groups = { "ReportEntrySupervisor" }) // Automated by Stalin
	public void AllowingtoLockApprovedReportForLoggedInUser_263139(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "263139");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.enterAtFromCaseNo();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.clickSearch();
		records.reportSearch.SelectRowByAtCaseNo(); // Updated
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsLock();
		records.switchToReportManager();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsLockedInMenuBar();
		records.switchToReportManager();

	}

	@Test(priority = 10, groups = { "ReportEntrySupervisor" }) // Automated BY Stalin
	public void ApproveOwnReportsForLoggedInUser_263140(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "263140");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		home.myHome.myReportsTab.VerifyKeypunchOfficerToAccessConfirmMessage();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectCrimeAgainstAsProperty();
		records.fTC.SelectPropertyLossAsStolen();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.selectSuspectOfUsingAsNotApplicable();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.switchToReportManager();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.switchToReportManager();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsApprovedInMenuBar();
		records.switchToReportManager();

	}

	@Test(priority = 12, groups = { "ReportEntrySupervisor" }) // Automated BY Stalin
	public void SearchOwnReportsForLoggedInUser_263142(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "263142");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.ClickShowMyItemsOnly();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.selectGridRowByStatusAsHold();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();

	}

	// 2021Defecttestcases
	@Test(priority = 1, groups = { "ManagementReportStatus" }) // 2021 Q1 Sprint 1 Automated by Mahesha
	public void VerifythatApplicationisShowingtoSelectReportDueAndOnHoldReportsForUser_263144(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "263144");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.verifyListOfStatusAvailable();
		home.myHome.myReportsTab.SelectStatusAsReportDue();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsReportDue();

		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();

		home.myHome.myReportsTab.ClickShowMyItemsOnly();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyAtRefNo(0);

	}

	// 2021Defecttestcases
	@Test(priority = 2, groups = { "ManagementReportStatus" }) // 2021 Q1 Sprint 1 Automated by Mahesha
	public void VerifythatApplicationisShowingtoSelectReportDueAndOnHoldReportsForUser_263145(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "263145");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.verifyNoOfTabsEnabledForUserIs(4);
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.verifyListOfStatusAvailable();
		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfSupplementalReportAsOnHold();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.verifySaveSaveAndCloseButtonsEnabled();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickVehicleButton();
		records.switchToCaseVehicle();
		records.caseVehicle.verifySaveSaveAndCloseButtonsEnabled();
		records.caseVehicle.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickSuspectButton();
		records.switchToCaseSuspect();
		records.caseSuspect.verifyAddSuspectButtonEnabled();
		records.caseSuspect.CloseScreen();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsComment();
		records.reportManager.updateStatusTab.verifyActionAvailableOnlyForComment();

	}

	@Test(priority = 3, groups = { "ManagementReportStatus" }) // 2021 Q1 Sprint 1 Automated by Mahesha
	public void VerifythatApplicationisShowingTheKeyPunchStatusInMyreportsTab_263146(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "263146");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.verifyNoOfTabsEnabledForUserIs(4);
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.verifyListOfStatusAvailable();
		home.myHome.myReportsTab.SelectStatusAsKeypunch();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsTranscriber();
		home.myHome.myReportsTab.ClickShowMyItemsOnly();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsTranscriber();
		loader.logout();

	}

	@Test(priority = 4, groups = { "ManagementReportStatus" }) // 2021 Q1 Sprint 1 Automated by Mahesha
	public void VerifythatApplicationisShowingKeypunchStatusForLoginUser_263147(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "263147");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		Playback.javaScreenShot();
		home.myHome.verifyNoOfTabsEnabledForUserIs(4);
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.verifyListOfStatusAvailable();
		home.myHome.myReportsTab.SelectStatusAsKeypunch();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsTranscriber();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		home.myHome.myReportsTab.VerifyOtherOfficerToKeypunchConfirmMessage();
		records.switchToReportStatus();

		records.reportStatus.VerifyReportStatusAsKeypunch();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsComment();
		records.reportManager.updateStatusTab.verifyActionAvailableOnlyForComment();

	}

	@Test(priority = 5, groups = { "ManagementReportStatus" }) // 2021 Q1 Sprint 1 Automated by Mahesha
	public void VerifythatApplicationisallowingtochangeReadyToSubmitStatusForLoginUser_263473(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "263473");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.verifyNoOfTabsEnabledForUserIs(4);
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.verifyListOfStatusAvailable();
		home.myHome.myReportsTab.SelectStatusAsKeypunch();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsTranscriber();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		home.myHome.myReportsTab.VerifyOtherOfficerToKeypunchConfirmMessage();
		records.switchToReportStatus();
		records.reportStatus.VerifyReportStatusAsKeypunch();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsReadyToSubmit();
		records.reportManager.updateStatusTab.verifyActionsAvailableForReadyToSubmitSendForApproveAndComment();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.VerifyReportStatusAsReadyToSubmit();

	}

	@Test(priority = 6, groups = { "ManagementReportStatus" }) // 2021 Q1 Sprint 1 Automated by Mahesha
	public void VerifythatApplicationisAllowingReadyToSubmitStatusToSubmitForLoginUser_263148(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "263148");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.verifyNoOfTabsEnabledForUserIs(4);
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.verifyListOfStatusAvailable();
		home.myHome.myReportsTab.SelectStatusAsReadyToSubmit();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsReadyToSubmit();
		home.myHome.myReportsTab.ClickShowMyItemsOnly();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyAtRefNo();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.VerifyReportStatusAsReadyToSubmit();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.verifyActionsAvailableForSendToTanscriberSendForApproveAndComment();
		records.reportManager.Saveandclose();
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.verifyNoOfTabsEnabledForUserIs(4);
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.verifyListOfStatusAvailable();
		home.myHome.myReportsTab.SelectStatusAsSubmitted();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsSubmitted();
		home.myHome.myReportsTab.ClickShowMyItemsOnly();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyAtRefNo();
	}

	@Test(priority = 7, groups = { "ManagementReportStatus" }) // Automated by Stalin
	public void ToEditTheDetailsInSubmittedStatusReport_263149(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "263149");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.SelectDomesticViolanceAsYes();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();

	}

	@Test(priority = 8, groups = { "ManagementReportStatus" }) // Automated by Stalin
	public void ToEditTheDetailsInMoreInfoNeededReport_263150(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "263150");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.verifyAtStatusUsingRefNo();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.SelectDomesticViolanceAsYes();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();

	}

	@Test(priority = 9, groups = { "ManagementReportStatus" }) // Automated by Stalin
	public void ToEditTheDetailsInRejectedReport_263151(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "263151");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.verifyAtStatusUsingRefNo();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.SelectDomesticViolanceAsYes();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();

	}

	@Test(priority = 1, groups = { "ReportEntryPoliceOfficer" }) // Vijay
	public void verifyApplicationIsShowingReportDueStatusReportOfTheCaseUserInvolvedAsPrime_262634(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "262634");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.verifyIncidentReportStatusAsReportDue();
		records.caseUpdate.reportingTab.VerifyIncidentReportRowAtOfficer(0);
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.ClickShowMyItemsOnly();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyCaseAtCaseNo();
		home.myHome.myReportsTab.VerifyGridRowAtOfficer1ByCaseNo();
	}

	@Test(priority = 2, groups = { "ReportEntryPoliceOfficer" }) // Vijay
	public void verifyApplicationIsDefaultingThePrimeOfficerNameInReportDueStatusWhenParameter734IsFalse_262636(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "262636");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsReportDue();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyCaseAtCaseNo();
		home.myHome.myReportsTab.VerifyGridRowStatusAsReportDueByCaseNo();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportManager();
		records.reportManager.VerifyAtCaseNo();
		records.reportManager.verifyAtReportedByPF();
		records.reportManager.clearReportedPF();
		records.reportManager.enterAtReportedByPF1();
		records.reportManager.VerifyPFNotRelatedToConfirmPopupMessage();
		records.switchToReportManager();
	}

	@Test(priority = 3, groups = { "ReportEntryPoliceOfficer" }) // Vijay
	public void verifyThatApplicationIsAllowingToInitiateTheReportDueStatusReportForLoggedInUser_262637(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "262637");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsReportDue();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsReportDueByCaseNo();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportManager();
		records.reportManager.VerifyAtCaseNo();
		records.reportManager.verifyAtReportedByPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.close();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.verifyGridRowStatusAsOnHoldByCaseNo();

	}

	@Test(priority = 4, groups = { "ReportEntryPoliceOfficer" }) // Vijay
	public void verifyThatApplicationIsShowingSendToTranscriberSendForApprovalCommentOptionForLoggedInUser_262638(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "262638");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		List<String> allElements = records.reportManager.updateStatusTab.getAllElementsInActionComboBox();
		records.reportManager.updateStatusTab.verifyMentionedElementInActionComboBox(allElements, "Send for Approval");
		records.reportManager.updateStatusTab.verifyMentionedElementInActionComboBox(allElements,
				"Send To Transcriber");
		records.reportManager.updateStatusTab.verifyMentionedElementInActionComboBox(allElements, "Comment");
		records.reportManager.updateStatusTab.SelectAtAction();
		records.reportManager.updateStatusTab.verifyDivisionIsEnabled();
		records.reportManager.updateStatusTab.verifySectionIsEnabled();
		records.reportManager.updateStatusTab.verifyTranscriberIsEnabled();
		records.switchToReportManager();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.VerifyReportStatusAsKeypunch();
	}

	@Test(priority = 5, groups = { "ReportEntryPoliceOfficer" }) // Vijay
	public void verifyThatApplicationIsShowingKeypunchStatusReportsInMyReportsTabWhenShowMyItemChecked_262664(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "262664");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.verifyPoliceOfficeRoleTabsEnabled();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.ClickShowMyItemsOnly();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.verifyGridRowStatusAsTranscriberByCaseNo();
	}

	@Test(priority = 6, groups = { "ReportEntryPoliceOfficer" }) // Vijay
	public void verifyThatApplicationIsShowingReadyToSubmitStatusForLoggedInUser_262721(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "262721");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsKeypunch();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		home.myHome.myReportsTab.VerifyOtherOfficerToKeypunchConfirmMessage();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectAtAction();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsReadyToSubmit();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.verifyGridRowStatusAsReadyToSubmitByCaseNo();
	}

	@Test(priority = 7, groups = { "ReportEntryPoliceOfficer" }) // Vijay
	public void verifyThatApplicationIsChangingTheStausToOnHoldWhenReadyToSubmitReportIsOpened_262728(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "262728");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.VerifyReportStatusAsReadyToSubmit();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();

	}

	@Test(priority = 8, groups = { "ReportEntryPoliceOfficer" }) // Automated by Stalin
	public void AllowingToSelectSendForApprovalAction_262738(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "262738");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.selectRowByAtRefNo();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();

		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolation();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.verifySupervisorIsEnabled();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.ClickRefreshButton();
		home.myHome.myReportsTab.selectRowByAtRefNo();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsSubmitted();

	}

	@Test(priority = 9, groups = { "ReportEntryPoliceOfficer" }) // Automated by Stalin
	public void EditTheDetailsInSubmittedStatusReport_262762(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "262762");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.verifyAtStatusColumn();
		records.caseUpdate.reportingTab.selectAtStatus();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.SelectDomesticViolanceAsYes();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
	}

	@Test(priority = 10, groups = { "ReportEntryPoliceOfficer" }) // Automated by Stalin
	public void AapplicationAbleToApproveTheReport_262763(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "262763");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.selectRowByAtRefNo();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsApproved();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.clickAction();
		records.reportManager.updateStatusTab.verifyActionDisplayedAsLock();
		records.reportManager.updateStatusTab.verifyActionDisplayedAsMoreInfoNeeded();
		records.switchToReportManager();

	}

	@Test(priority = 11, groups = { "ReportEntryPoliceOfficer" }) // Automated by Stalin
	public void ShowingTheRejectedStatusRreports_262766(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "262766");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.enterAtFromCaseNo();
		records.reportSearch.clickSearch();
		records.reportSearch.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsMoreInfoNeeded();
		records.reportManager.updateStatusTab.selectRejectionCodeAsSpellingErrors();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsMoreInfoNeeded();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsReject();
		records.reportManager.updateStatusTab.selectRejectionCodeAsSpellingErrors();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.VerifyIncidentReportAsRejectedIsOpening();
		records.switchToReportStatus();

	}

	@Test(priority = 12, groups = { "ReportEntryPoliceOfficer" }) // Automated by Stalin
	public void AapplicationNotShowingTheApprovedReport_262770(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "262770");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.selectRowByAtRefNo();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.selectRowByAtRefNo();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsApproved();
		records.switchToReportStatus();

	}

	@Test
	public void IBRSubmission90CDisorderlyConductWI_210301(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "210301");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Search");
		names.switchToArrestSearch();

		names.arrestSearch.clickAddnewButton();
		names.switchToArrestEntry();
		names.arrestEntry.closeCallActivitiesPopupIfExist();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.enterAtCaseNo();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.enterAtOfficer1();
		names.arrestEntry.arrestTab.EnterOffenderID();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.tabTheCaseNoEntries();
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.TabTheCount();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.selectCourtType();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.saveScreen();
		names.switchToArrestEntry();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.clickCaseInfoButton();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.SaveScreen();
		records.switchToFTC();
		records.fTC.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyAtChargeInGrid();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyNIBRSCheckTabAppearsGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();

	}

	@Test(groups = "IBRcodeCompletedWI")
	public void IBRSubmission90ZAllOtherOffenses_210302(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "210302");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Search");
		names.switchToArrestSearch();
		names.arrestSearch.clickAddnewButton();
		names.switchToArrestEntry();
		names.arrestEntry.closeCallActivitiesPopupIfExist();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.enterAtCaseNo();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.enterAtOfficer1();
		names.arrestEntry.arrestTab.EnterOffenderID();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.tabTheCaseNoEntries();
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.clickAtDescription();
		names.switchToArrestEntry();
		names.arrestEntry.chargeTab.TabTheCount();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.selectCourtType();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.saveScreen();
		names.switchToArrestEntry();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.clickCaseInfoButton();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.clickAtDescription();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtPropertyLoss();
		records.fTC.SaveScreen();
		records.switchToFTC();
		records.fTC.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyAtChargeInGrid();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();

		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.ClickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectAtNIBRS1();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.SelectPropertyAsBicycles();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterValue();
		property.propertyEntry.propertyEntryMainTab.EnterAtLastName();
		property.propertyEntry.propertyEntryMainTab.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.SelectIncidentNameAtName();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		String propertyNo = property.propertyEntry.readPropertyNo();
		property.propertyEntry.ClickSubmitButton();
		property.propertyEntry.VerifyConfirmSubmitMessage();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.verifyAtPropertyNo(propertyNo, 0);
		records.caseUpdate.caseUpdatePropertyTab.VerifyAtReasonInGrid(0);
		records.switchToCaseUpdate();
		records.caseUpdate.verifyNIBRSCheckTabAppearsGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();

	}

	@Test(groups = "IBRcodeCompletedWI")
	public void IBRGroupA26EWireFraudOffensesCrimeAgainstProperty_270179(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270179");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.ClickReset();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtPropertyLoss();
		records.fTC.SelectLocationType();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyAtChargeInGrid();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();

		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.ClickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectAtNIBRS1();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.SelectPropertyAsBicycles();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterValue();
		property.propertyEntry.propertyEntryMainTab.EnterAtLastName();
		property.propertyEntry.propertyEntryMainTab.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		property.switchToPropertyEntry();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.tabOutQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.selectDispositionAsSentToPropertyRoom();
		property.propertyEntry.recoveredTab.enterAtInitialStorageLocation();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		String propertyNo = property.propertyEntry.readPropertyNo();
		property.propertyEntry.ClickSubmitButton();
		property.propertyEntry.VerifyConfirmSubmitMessage();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.verifyAtPropertyNo(propertyNo, 0);
		records.caseUpdate.caseUpdatePropertyTab.VerifyAtReasonInGrid(0);
		records.switchToCaseUpdate();
		records.caseUpdate.verifyNIBRSCheckTabAppearsGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();

	}

	@Test(groups = "IBRcodeCompletedWI")
	public void IBRSubmission09CHomicideOffenses_210263(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "210263");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.ClickReset();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.clickAtDescription();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.SelectLocationType();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.SelectWeaponsUsedAsPersonalWeapon();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyAtChargeInGrid();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectAtCircumstances1();
		records.nameVictim.SelectJustifiableHomicide();
		records.nameVictim.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyNIBRSCheckTabAppearsGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();

	}

	@Test(groups = "IBRcodeCompletedWI")
	public void IBRSubmission100KidnapingAbductio_210264(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "210264");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.ClickDateResetButton();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.switchToSuspectsTab();
		records.callEntry.callEntrySuspectsTab.clickAddSuspects();
		names.switchToSuspectEntry();

		names.suspectEntry.EnterAtLastName1FirstName1();
		names.suspectEntry.EnterAge();
		names.suspectEntry.EnterWeight();
		names.suspectEntry.EnterHeight();
		names.suspectEntry.SelectEyes();
		names.suspectEntry.SaveAndClose();
		records.switchToCallEntry();
		records.callEntry.switchToSuspectsTab();
		records.callEntry.callEntrySuspectsTab.clickRefresh();
		records.callEntry.callEntrySuspectsTab.VerifyAtNameInGrid(0);
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.nameSearchHelpWindow.SelectName();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtPropertyLoss();
		records.fTC.SelectLocationType();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.SelectWeaponsUsedAsPersonalWeapon();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyAtChargeInGrid();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.SelectOffenderAsSuspect1();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectInjuryLevel();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.Save();
		records.switchToNameVictim();
		records.nameVictim.Close();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyNIBRSCheckTabAppearsGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();
	}

	@Test(groups = "IBRcodeAttemptedWI")
	public void IBRGroupA_64AHumanTraffickingCommercialSexActsOffensesCrimesAgainstPersons_270266(
			ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270266");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		records.callEntry.callEntryNamesTab.selectNameFromHelpWindow();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.SelectLocationType();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyAtChargeInGrid();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.selectAtInjuryLevel();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyNIBRSCheckTabAppearsGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();

	}

	@Test(groups = "IBRcodeAttemptedWI")
	public void IBRGroupA_64BHumanTraffickingInvoluntaryServitudeOffensesCrimesAgainstPersons_270267(
			ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270267");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		records.callEntry.callEntryNamesTab.selectNameFromHelpWindow();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.SelectLocationType();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyAtChargeInGrid();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyNIBRSCheckTabAppearsGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();

	}

	@Test(groups = "2021DefectTestCases2") // 2021 Q2 S2 Mahesha
	public void VerifytheDVreportcollectsAllthenecessaryInformationwhentheformRestraining_270292(
			ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270292");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.ClickReset();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.VerfiyAtNameInGrid(1);
		records.caseNames.VerfiyAtName1InGrid(0);
		records.caseNames.ClickDomesticViolenceIcon(1);
		records.switchToDVEntry();
		records.dVEntry.selectDomesticViolenceRestrainingOrderOnlyAsYes();
		records.dVEntry.SelectAtOffenderName();
		// records.dVEntry.verifyAtAgeRange();
		records.dVEntry.selectHouseHoldStatusAsPresentHouseholdMember();
		records.dVEntry.SelectArrestedFor();
		records.dVEntry.EnterRemarks();
		records.dVEntry.SaveScreen();
		records.switchToDVEntry();
		records.dVEntry.VerifyAdditionSuccessfulMessage();

	}

	@Test(groups = "2021DefectTestCases2") // 2021 Q2 S2 Mahesha
	public void VerifyTheSystemabletoCreateVehicleProfileandabletoDisplaydetailslikeReportCount_270255(
			ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270255");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Profile Search");
		records.switchToProfileSearch();
		records.profileSearch.ClickAddNew();
		records.switchToVehicleProfileEntry();
		records.vehicleProfile.EnterAtCallNo();
		records.vehicleProfile.TabDateTime();
		records.vehicleProfile.EnterAtOfficer();
		records.vehicleProfile.EnterAtPlateNo();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.clickSelectButton();
		records.switchToVehicleProfileEntry();
		records.vehicleProfile.enterAtOptionalRaceInfo();
		records.vehicleProfile.selectDriverGenderAsMale();
		records.vehicleProfile.EnterAtTotalNoOfOccupants();
		records.vehicleProfile.SelectAtTow();
		records.vehicleProfile.SelectAtReasonForStop();
		records.vehicleProfile.selectResidencyAsCityTownResident();
		records.vehicleProfile.enterAtDriverYearOfBirth();
		records.vehicleProfile.selectSpeedDeterminedByAsRader();
		records.vehicleProfile.SelectResultOfStop();
		records.vehicleProfile.SelectDurationOfStop();
		records.vehicleProfile.SelectSearchAsResultStopAsYes();
		records.vehicleProfile.ClickDrugsDrugParaphernaliaCheckbox();
		records.vehicleProfile.ClickInventoryCheckbox();
		records.vehicleProfile.ClickReasonableSuspicionCheckbox();
		records.vehicleProfile.Save();
		records.switchToVehicleProfileEntry();
		String profileNo = records.vehicleProfile.readProfileNo();
		records.switchToProfileSearch();
		records.profileSearch.ClickBack();
		records.profileSearch.enterAtProfileNo(profileNo);
		records.switchToProfileSearch();
		records.profileSearch.ClickSearch();
		records.profileSearch.clickPrintIcon();
		home.switchToSelectReport();
		home.selectReport.VerifyRecordCount("1");

	}

	@Test(groups = "2021DefectTestCases2") // 2021 Q2 S2 Mahesha
	public void VerifyTheOfficerAbleToAccessSharedSupplementalReportInCaseUpdateScreen_270897(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "270897");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseManagementIcon();
		cm.switchToCaseFolder();
		cm.caseFolder.clickAssignmentTab();
		cm.caseFolder.caseFolderAssignmentTab.selectAtDivision();
		cm.caseFolder.caseFolderAssignmentTab.selectSection(); // added by dinesh
		cm.caseFolder.caseFolderAssignmentTab.enterAtSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.enterAtPrimeInvestigator();
		cm.caseFolder.caseFolderAssignmentTab.tabOutDateAssignedTime();
		cm.switchToCaseFolder();
		cm.caseFolder.save(); // issue detected by dinesh
		cm.switchToCaseFolder();
		cm.caseFolder.clickReportingTab();
		cm.caseFolder.caseFolderReportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.EnterReportDescriptionAsReportType();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfSupplementalReportAsOnHold();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.VerifyShareCaseUpdateCaseFolderCheckboxsEnabled();
		records.reportManager.updateStatusTab.ClickShareCaseUpdateCheckbox();
		records.reportManager.updateStatusTab.verifyShareCaseFolderCheckboxDisabledAndSelected();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.switchToReportManager();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.switchToReportManager();
		records.reportManager.Saveandclose();

		cm.switchToCaseFolder();
		cm.caseFolder.clickReportingTab();
		cm.caseFolder.caseFolderReportingTab.selectAtReportByType();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyReportStatusAsApproved();
	}

	@Test(groups = "2021DefectTestCases2") // 2021 Q2 S2 Mahesha
	public void VerifyTheOfficerAbleToAccessSharedSupplementalReportInCaseUpdateScreen_270898(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "270898");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseManagementIcon();
		records.caseUpdate.verifyAccessDeniedForScreenAcknowledge();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.verifyReportTypeAsSupplementReport(0);
		records.caseUpdate.reportingTab.VerifyStatusAsApprovedInGrid(0);
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyReportStatusAsApproved();

	}

	@Test(groups = "2021DefectTestCases2") // 2021 Q2 S2 Mahesha
	public void VerifyTheOfficerNotAbleToAccessUnSharedSupplementalReportFromMyApprovalTab_270899(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "270899");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseManagementIcon();
		cm.switchToCaseFolder();
		cm.caseFolder.clickAssignmentTab();
		cm.caseFolder.caseFolderAssignmentTab.selectAtDivision();
		cm.caseFolder.caseFolderAssignmentTab.selectSection(); // added by dinesh
		cm.caseFolder.caseFolderAssignmentTab.enterAtSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.enterAtPrimeInvestigator();
		cm.caseFolder.caseFolderAssignmentTab.tabOutDateAssignedTime();
		cm.switchToCaseFolder();
		cm.caseFolder.save(); // issue ditected by dinesh
		cm.switchToCaseFolder();
		cm.caseFolder.clickReportingTab();
		cm.caseFolder.caseFolderReportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.EnterReportDescriptionAsReportType();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfSupplementalReportAsOnHold();

	}

	@Test(groups = "2021DefectTestCases2") // 2021 Q2 S2 Mahesha
	public void VerifyTheOfficerNotAbleToAccessUnSharedSupplementalReportFromMyApprovalTab_270900(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "270900");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		home.myHome.myReportsTab.verifyAccessRestrictedByCaseFolderAcknowledge();
		home.switchToMyHomeScreen();

	}

	@Test(groups = "2021DefectTestCases2") // 2021 Q2 S2 Mahesha
	public void VerifyWhetherTheUserAbleToAddQAFormForParticularNameFromCaseNamesScreen_271628(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "271628");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.EnterReportDescriptionAsReportType();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.verifyQaFormButtonAsGrayColor();
		records.caseNames.verifyQaFormButtonDisabled();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickAtNameInGrid();
		records.caseNames.verifyQaFormButtonAsBlueColor();
		records.caseNames.verifyQaFormButtonEnabled();
		records.caseNames.clickQaFormsButton();
		qA.SwitchToQuestionnarie();
		qA.questionnarie.SelectAtForm();

		qA.SwitchToQuestionDataEntry();
		qA.questionDataEntry.TabOutPF();
		qA.questionDataEntry.clickSaveNClose();
		qA.SwitchToQuestionnarie();
		qA.questionnarie.ClickRefreshButton();
		qA.questionnarie.VerifySingleQAFormInGrid();
		qA.questionnarie.verifyFormNameInGrid(0);
		qA.questionnarie.CloseTheScreen();

		records.switchToCaseNames();
		records.caseNames.ClickAtNameInGrid();
		records.caseNames.verifyQaFormButtonAsGreenColor();
		records.caseNames.clickAddButton();
		records.caseNames.verifyQaFormButtonAsGrayColor();
		records.caseNames.verifyQaFormButtonDisabled();

	}

	@Test(priority = 1, groups = "2021DefectTestCases2") // 2021 Q2 S2 Mahesha
	public void VerifyUserAbletoAddQAFormfromReportManagerscreen2511_271629(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "271629");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.EnterReportDescriptionAsReportType();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.verifyQAformTabNotEnabled();
		records.reportManager.Close();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("QA Forms");
		settings.switchToQAForms();
		settings.qaForms.clickOnSearch();
		settings.qaForms.selectCheckBoxOfTheRowByFormRefNO();
		settings.qaForms.clickManageRepository();

		qA.switchToQuestionnaireRepository();
		qA.questionnarieRepository.EnterAtRepositoryID();
		qA.questionnarieRepository.clickAddButton();
		qA.questionnarieRepository.saveNClose();

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.clickReset();
		records.reportManager.verifyQAformTabEnabled(); // issue detected by dinesh
		records.reportManager.clickQAFormTab();

		qA.SwitchToQuestionDataEntry();
		qA.questionDataEntry.enterAtLastName();
		qA.questionDataEntry.enterAtFirstName();
		qA.questionDataEntry.clickReportSaveNExit();

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.verifyQAFormsTabShowBlueColor();

	}

	@Test(priority = 2, groups = "2021DefectTestCases2") // 2021 Q2 S2 Mahesha
	public void VerifytheuserisabletoaddVictimOffenderRelationshipdetailsfromCaseNamesscreen_271630(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "271630");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();

		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();

		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();

		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.verifyVictimOffenderButtonAsGrayColor();
		records.caseNames.verifyVictimOffenderButtonDisabled();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickAtNameInGrid();
		records.caseNames.verifyVictimOffenderButtonAsRedColor();

		records.caseNames.ClickVictimOffenderIcon(1);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.switchToNameVictim();
		records.nameVictim.saveNClose();

		records.switchToCaseNames();
		records.caseNames.ClickAtNameInGrid();
		records.caseNames.verifyVictimOffenderButtonAsRedColor();

		records.caseNames.ClickVictimOffenderIcon(1);
		records.switchToNameVictim();

		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.saveNClose();

		records.switchToCaseNames();
		records.caseNames.ClickAtNameInGrid();
		records.caseNames.verifyVictimOffenderButtonAsGreenColor();

	}

	@Test(groups = "IBRcodeCompletedWI")
	public void IBRGroupA_370PornographyObsceneMaterialCrimeAgainstSocity_270279(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270279");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.ClickReset();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.clickAtDescription();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.SelectLocationType();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyAtChargeInGrid();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyNIBRSCheckTabAppearsGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();

	}

	@Test(groups = "IBRcodeCompletedWI")
	public void IBRGroupA_40AProstitutionOffensesCrimeAgainstSociety_270280(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270280");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.ClickReset();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.SelectLocationType();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyAtChargeInGrid();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyNIBRSCheckTabAppearsGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();

	}

	@Test(groups = "IBRcodeCompletedWI")
	public void IBRGroupA_40BAssistingorPromotingProstitutionOffensesCrimeAgainstSociety_270281(
			ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270281");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.ClickReset();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.SelectLocationType();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyAtChargeInGrid();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyNIBRSCheckTabAppearsGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();

	}

	@Test(groups = "IBRcodeCompletedWI")
	public void IBRGroupA_40BAssistingorPromotingProstitutionOffensesCrimeAgainstSociety_270282(
			ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270282");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.ClickReset();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.SelectLocationType();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyAtChargeInGrid();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyNIBRSCheckTabAppearsGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();

	}

	@Test(groups = "IBRcodeAttemptedWI")
	public void IBRGroupA_120RobberyCrimeAgainstProperty_270283(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270283");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtPropertyLoss();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		;
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyAtChargeInGrid();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(1);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectInjuryLevel();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();

		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.ClickAddNewPropertyReport();
		property.switchToPropertyEntry();

		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectAtNIBRS1();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();

		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		String propertyNo = property.propertyEntry.readPropertyNo();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.verifyAtPropertyNo(propertyNo, 0);
		records.caseUpdate.caseUpdatePropertyTab.VerifyAtReasonInGrid(0);
		records.switchToCaseUpdate();
		records.caseUpdate.verifyNIBRSCheckTabAppearsGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();

	}

	@Test(groups = "IBRcodeCompletedWI")
	public void IBRGroupA_11ASexOffensesForcibleCrimesAgainstPersons_270284(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270284");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.ClickDateResetButton();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.switchToSuspectsTab();
		records.callEntry.callEntrySuspectsTab.clickAddSuspects();
		names.switchToSuspectEntry();

		names.suspectEntry.EnterAtLastName1FirstName1();
		names.suspectEntry.EnterAge();
		names.suspectEntry.EnterWeight();
		names.suspectEntry.EnterHeight();
		names.suspectEntry.SelectEyes();
		names.suspectEntry.SaveAndClose();
		records.switchToCallEntry();
		records.callEntry.switchToSuspectsTab();
		records.callEntry.callEntrySuspectsTab.clickRefresh();
		records.callEntry.callEntrySuspectsTab.VerifyAtNameInGrid(0);
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.nameSearchHelpWindow.SelectName();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.SelectLocationType();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.SelectWeaponsUsedAsPersonalWeapon();
		records.fTC.SelectDegree();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyAtChargeInGrid();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.SelectOffenderAsSuspect1();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.SelectInjuryLevel();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.Save();
		records.switchToNameVictim();
		records.nameVictim.Close();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyNIBRSCheckTabAppearsGreenColor();
		records.caseUpdate.switchToNIBRSCheckTab();
		records.caseUpdate.nIBRSCheckTab.VerifyErrorCheckCompletedLabel();
	}

	@Test(groups = { "2021DefectTestCases" }) // Vijay
	public void verifyOfficerIsNotAbleToOpenUnsharedSupplementalReportFromCaseUpdateScreen_270895(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "270895");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseManagementIcon();
		cm.switchToCaseFolder();
		cm.caseFolder.clickAssignmentTab();
		cm.caseFolder.caseFolderAssignmentTab.selectAtDivision();
		cm.caseFolder.caseFolderAssignmentTab.selectAtSection();
		cm.caseFolder.caseFolderAssignmentTab.tabOutSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.enterAtPrimeInvestigator();
		cm.caseFolder.caseFolderAssignmentTab.tabOutDateAssignedTime();
		cm.switchToCaseFolder();
		cm.caseFolder.save();
		cm.switchToCaseFolder();
		cm.caseFolder.switchToReportingTab();
		cm.caseFolder.caseFolderReportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.VerifyAtCaseNo();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfSupplementalReportAsOnHold();
	}

	@Test(groups = { "2021DefectTestCases" }) // Vijay
	public void verifyOfficerIsNotAbleToOpenUnsharedSupplementalReportFromCaseUpdateScreen_270896(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "270896");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.EnterFromAndEndAtCaseNo();
		records.reportSearch.clickSearch();
		records.reportSearch.SelectRowByAtCaseNo();
		records.reportStatus.verifyAccessRestrictedAcknowledgeMessage();
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseManagementIcon();
		records.caseUpdate.verifyAccessDeniedForScreenAcknowledge();
		records.switchToCaseUpdate();

	}

	@Test(groups = { "2021DefectTestCases" }) // Vijay // Run in 45 Only
	public void verifyUserIsAbleToAddUseOfForceReportToAParticularNameFromCaseNamesScreen_271631(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "271631");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.SelectActivityAsCaller();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickAtActivityInGrid();
		records.caseNames.verifyUseOfForceReportButtonIsBlueColor();
		records.caseNames.clickUseOfForceReportButton();
//				   		records.switchToUseOfForceReportEntry();   // altered by dinesh
//				   		records.useOfForceReportEntry.clickAddNewButton();   //error occured place
		records.switchToUOFEntry();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.selectAtListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.switchToUOFEntry();
		records.uOFEntry.SaveAndClose();
		records.switchToCaseNames();
		records.caseNames.clickUseOfForceReportButton();
		records.switchToUseOfForceReportEntry(); // dinesh
		records.useOfForceReportEntry.clickResetButton(); // error detected
		records.useOfForceReportEntry.closeScreen(); // dinesh
		records.switchToCaseNames();
		records.caseNames.clickRefreshIcon();
		records.caseNames.ClickAtActivityInGrid();
		records.caseNames.verifyUseOfForceReportButtonIsGreenColor();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen(); // added by dinesh
		objectIdentification.windowHandle.switchToMainWindow();
	}

	// Issue with Functionality
	@Test(groups = { "2021DefectTestCases" }) // Vijay // Run in 45 Only
	public void verifyUserIsAbleToUseNewSignatureFunctionalityInReportManagerScreen_271632(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "271632");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter290AsFalse();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter704AsTrue();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.ClickNotarySignCheckBox(); // error detected by dinesh
		settings.switchToPhoenixAuthenticatorWindow();
		settings.phoenixAuthenticatorWindow.enterAtUserName();
		settings.phoenixAuthenticatorWindow.enterAtPassword();
		settings.phoenixAuthenticatorWindow.clickAcceptButton();
	}

	@Test(groups = { "2021DefectTestCases2" }) // Mahesha
	public void VerifytheReportFontchangesinaccordancewiththefontprovidedinNarrativescreen_272362(
			ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "272362");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickNarrativeButton();
		records.switchToReportStatusNarrative();
		records.reportStatusNarrative.switchToFrame();
		records.reportStatusNarrative.enterAtTextField();
		records.switchToReportStatusNarrative();
		records.reportStatusNarrative.save();
		records.switchToReportStatusNarrative();
		records.reportStatusNarrative.switchToFrame();
		records.reportStatusNarrative.selectAllText();
		records.switchToReportStatusNarrative();
		records.reportStatusNarrative.selectTestFontAndSize("Arial", "14");
		records.reportStatusNarrative.save();

		records.switchToReportStatusNarrative();
		records.reportStatusNarrative.verifyNarrativeFontsSelectedAsArialSize14();
		records.reportStatusNarrative.switchToFrame();
		records.reportStatusNarrative.selectAllText();
		records.switchToReportStatusNarrative();
		records.reportStatusNarrative.selectTestFontAndSize("Courier New", "16");
		records.reportStatusNarrative.save();

		records.switchToReportStatusNarrative();
		records.reportStatusNarrative.verifyNarrativeFontsCourierNewSize16();
	}

	@Test(groups = { "2021DefectTestCases2" }) // 2021 defect Automated by Mahesha
	public void ToShowCFSInNameActivity_275939(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "275939");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.VerifyAtActivityInGrid(0);
		records.callEntry.callEntryNamesTab.VerifyAtActivity1InGrid(1);
		records.callEntry.callEntryNamesTab.SelectRowByAtName();
		records.callEntry.callEntryNamesTab.ClickNameInfoIcon();

		names.switchToNameEntry();
		names.nameEntry.switchToActivityTab();
		names.nameEntry.activityTab.verifyAtCharge(0);
		names.nameEntry.activityTab.SelectAtActivity();
		names.nameEntry.activityTab.verifyAtCharge(0);
		names.nameEntry.closeTheScreen();

		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.VerifyAtActivity1InGrid(1);
		records.callEntry.callEntryNamesTab.SelectRowByAtName1();
		records.callEntry.callEntryNamesTab.ClickNameInfoIcon();
		names.switchToNameEntry();
		names.nameEntry.switchToActivityTab();
		names.nameEntry.activityTab.SelectAtActivity1();
		names.nameEntry.activityTab.verifyAtCharge1(0);

	}

	// Issue with Functionality
	@Test(groups = { "2021DefectTestCases" }) // Automated by Stalin Q2 S4 ran in 45
	public void PoliceDefectTestCase_270892(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270892");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.reportedDate();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.EnterAtCADDisposition();
		records.callEntry.enterAtLocation1();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.enterAtVehicleNumber();
		records.callEntry.vehicleTab.selectAtState();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.clickSelectButton();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.enterAtNameID();
		records.callEntry.vehicleTab.selectAtActivity();
		records.callEntry.vehicleTab.clickAddButton();
		records.callEntry.vehicleTab.InternalSave();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickCMIcon();
		cm.switchToCaseFolder();
		cm.caseFolder.clickAssignmentTab();
		cm.caseFolder.caseFolderAssignmentTab.selectDivision();
		cm.caseFolder.caseFolderAssignmentTab.selectSection();
		cm.caseFolder.caseFolderAssignmentTab.tabOutSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.tabOutDateAssignedTime();
		cm.switchToCaseFolder();
		cm.caseFolder.save();
		cm.switchToCaseFolder();
		cm.caseFolder.close();
		records.switchToCaseUpdate();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.ClickAtActivityInGrid();
		records.callEntry.vehicleTab.clickDeleteRowByAtActivity();
		records.callEntry.vehicleTab.verifyAccessDeniedAcknowledgeMessageFor2414();
		records.switchToCaseUpdate();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.ClickAtActivityInGrid();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();

	}

	// Issue with Functionality
	@Test(groups = { "2021DefectTestCases" }, enabled = false) // Automated by Mithun,reworked by dinesh
	public void Verifytowentryisdisplayedintheincidentreport_268000(ITestContext testContext) { // functionality
																								// changed.

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "268000");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.ClickVehicleButton();
		records.switchToCaseVehicle();
		records.caseVehicle.SelectStateAsWI();
		vehicle.switchToVehicleBoatSearchHelpWindow();
		vehicle.vehicleBoatSearchHelpWindow.selectBoat();
		records.switchToCaseVehicle();
		records.caseVehicle.EnterAtNameID();
		records.caseVehicle.SelectActivityAsFieldInterview();
		records.caseVehicle.ClickAddButton();
		records.caseVehicle.Save();
		tow.switchToTowEntry();
		tow.towEntry.enterAtPlateNumber();
		tow.towEntry.selectAtPlateState();
		vehicle.switchToVehicleBoatEntry();

		vehicle.vehicleBoatEntry.clickSelectButton();
		tow.switchToTowEntry();
		tow.towEntry.clickTowTab();
		tow.towEntry.towTab.selectEquipment();
		tow.towEntry.towTab.tabTowRequestDate();
		tow.towEntry.towTab.verifyCurrentDateAutoPopulatesInTowRequestedDate();
		tow.towEntry.towTab.selectWrecker();
		tow.towEntry.save();
		tow.switchToTowEntry();

	}

	@Test(groups = { "2021DefectTestCases" }) // Automated by Mithun
	public void ToVerifywhetherthereportdisplayamultiplechargesinsupplementalreport_265271(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "265271");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectAtType();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();

		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.enterAtCharge1();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.EnterAtCharge2();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs200Arson(); // method changed by dinesh
		records.fTC.selectCrimeAgainstAsProperty(); // error detected by dinesh
		records.fTC.selectAtPropertyLoss();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.EnterAtCharge3();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs23APocketPicking(); // method altered by dinesh
		records.fTC.selectCrimeAgainstAsProperty();
		records.fTC.selectAtPropertyLoss1();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolation();
		records.aCD.Save();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	// Issue with functionality
	@Test(groups = { "2021DefectTestCases" }) // Vijay
	public void verifySystemSharesReportByDefaultToCaseFolderBasedOnSystemParameter926_272382(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "272382");
		// "CaseNo":"21-000142",
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter926AsTrue();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseManagementIcon();
		cm.switchToCaseFolder();
		cm.caseFolder.clickAssignmentTab();
		cm.caseFolder.caseFolderAssignmentTab.selectAtDivision();
		cm.caseFolder.caseFolderAssignmentTab.selectAtSection();
		cm.caseFolder.caseFolderAssignmentTab.enterAtSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.enterAtPrimeInvestigator();
		cm.caseFolder.caseFolderAssignmentTab.tabOutDateAssignedTime();
		cm.switchToCaseFolder();
		cm.caseFolder.saveNclose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAsSupplementReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.enterReportDescription();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.SelectCrimeAgainstAsSociety();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.verifyShareWithCaseUpdateCheckboxIsSelected();
		records.reportManager.updateStatusTab.verifyShareWithCaseFolderCheckboxIsSelectedAndDisabled();
		records.reportManager.updateStatusTab.ClickShareCaseUpdateCheckbox();
		records.reportManager.updateStatusTab.VerifyShareCaseUpdateCaseFolderCheckboxsEnabled();
		records.switchToReportManager();
		records.reportManager.save();
		records.switchToReportManager();
	}

	@Test(groups = { "2021DefectTestCases" }) // Vijay // 2021 Q2 Sprint 4
	public void verifyRedactButtonIsEnabledBasedOnRolePermission25100_273478(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "273478");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter839AsTrue();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.SelectCrimeAgainstAsSociety();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.SelectAtDivision();
		records.reportManager.updateStatusTab.SelectAtSection();
		records.reportManager.Saveandclose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsSubmitted();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsApproved();
		records.reportStatus.verfyRedactButtonIsEnabledAndDisplayed();

	}

	@Test(groups = { "2021DefectTestCases" }) // Vijay // 2021 Q2 Sprint 4
	public void verifySystemSearchesAndDisplaysListOfReportsBasedOnDateRangeInReportsSearchScreen_273480(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "273480");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.enterFromDateAs5YearBeforeFromCurrentDate();
		records.reportSearch.enterToDateAsCurrentDate();
		records.reportSearch.clickSearch();
		records.reportSearch.clickNextButtonInGrid(5);
		records.reportSearch.verifyRecordsListOutInGrid();
	}

	@Test(groups = { "2021DefectTestCases3" }) // Automated by Stalin Q2 S4 Run in 45
	public void VerifyMedicalassitancerequiredfielddisplayedascustomfield_273006(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273006");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UOF Search");
		records.switchToUOFSearch();
		records.uOFSearch.ClickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.verifyMedicalAssistanceRequiredAsCustomField();
		records.switchToUOFEntry();

	}

	// TestCase ID – 273475
	@Test(groups = { "2021DefectTestCases3" }) // Automated by Stalin Q2 S4 Run in 45
	public void VerifyCustomfieldMedicalassistancerequireddisplayasmandatory_273475(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273475");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UOF Search");
		records.switchToUOFSearch();
		records.uOFSearch.ClickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.EnterAtRelatedCaseNo();
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.EnterAtNameID();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.clickMedicalAssistanceRequiredLabel();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.verifyAtRepositoryID();
		settings.repositoryEntry.verifyAtDefaultName();
		settings.repositoryEntry.enterAtCustomName();
		settings.repositoryEntry.selectFieldUsageAsMandatory();
		settings.repositoryEntry.saveNClose();
		records.switchToUOFEntry();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.SelectListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.switchToUOFEntry();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.verifyMedicalAssistanceRequiredLabelAsMandatory();
		records.switchToUOFEntry();
		records.uOFEntry.ClickSavebutton(); // issue detected by dinesh
		records.uOFEntry.verifyAt1018RequiredEntriesMissingAcknowledgeMessage();
		records.switchToUOFEntry();
		objectIdentification.windowHandle.switchToMainWindow();

	}
	// TestCase ID – 273476

	@Test(groups = { "2021DefectTestCases3" }) // Automated by Stalin Q2 S4 Run in 45
	public void VerifyCustomfieldMedicalassistancerequiredIsdisplay_273476(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273476");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.ClickUseOfForceButton();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.ClickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.EnterAtNameID();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.clickMedicalAssistanceRequiredLabel();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.enterAtCustomName();
		settings.repositoryEntry.selectFieldUsageAsShow();
		settings.repositoryEntry.saveNClose();
		records.switchToUOFEntry();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.verifyMedicalAssistanceRequiredAsCustomField();
		records.switchToUOFEntry();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.SelectListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.switchToUOFEntry();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
	}

	// TestCase ID – 273477
	@Test(groups = { "2021DefectTestCases3" }) // Automated by Stalin Q2 S4 Run in 45
	public void VerifyCustomfieldMedicalassistancerequireddisplayAsHide_273477(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273477");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.ClickUseOfForceButton();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.ClickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.EnterAtNameID();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.clickMedicalAssistanceRequiredLabel();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.enterAtCustomName();
		settings.repositoryEntry.selectFieldUsageAsHide();
		settings.repositoryEntry.saveNClose();
		records.switchToUOFEntry();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.verifyMedicalAssistanceRequiredIsDisabled();
		records.switchToUOFEntry();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.SelectListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.switchToUOFEntry();
		records.uOFEntry.Save();
		records.switchToUOFEntry();

	}

	// TestCase ID – 273483

	@Test(groups = { "2021DefectTestCases3" }) // Automated by Stalin Q2 S4 Run in 45
	public void Verifythedeleteiconisenabledinthereport_273483(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273483");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContextOtherDB();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickDeleteIconWithConfirmation();
		records.reportStatus.verifyDeletedSuccessfullyAcknowledgeMessage();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.verifyRowCountIsZeroInGrid();
		records.switchToCaseUpdate();
	}

	// TestCase ID – 273495

	@Test(priority = 1, groups = { "2021DefectTestCases3" }) // Automated by Stalin Q2 S4 Run in 45
	public void VerifyReportisabletodeletebyPurge_273495(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273495");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.selectSuspectOfUsingAsNotApplicable();
		records.fTC.selectWeaponsUsedAsUnknown();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyDoNotPurgeIsNotChecked();
		records.switchToCaseUpdate();
	}

	@Test(priority = 2, groups = { "2021DefectTestCases3" }) // Automated by Stalin Q2 S4 Run in 45
	public void VerifyReportisabletodeletebyPurge1PartI_273496(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273496");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter736AsNull();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter785AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter835AsTrue();
		settings.switchToSystemParamter();
	}

	@Test(priority = 3, groups = { "2021DefectTestCases3" }) // Automated by Stalin Q2 S4 Run in 45
	public void VerifyReportisabletodeletebyPurge1PARTII_273496(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273496");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContextOtherDB();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon(); //
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
//				records.callEntry.callEntryNamesTab.enterAtNameID1();
//				records.callEntry.callEntryNamesTab.selectActivityAsArrested();
//				records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.closeScreen(); //
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		Playback.controlReadyThreadWait();
		records.reportManager.VerifyPFNotRelatedToConfirmPopupMessage(); // issue reported by dinesh
		records.reportManager.tabDateAndTime();
		Playback.controlReadyThreadWait();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.selectSuspectOfUsingAsNotApplicable();
		records.fTC.selectWeaponsUsedAsUnknown();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.Save();
		records.switchToACD();
		records.aCD.Close();
		records.switchToReportStatus();
		// String readPDFContent = records.reportStatus.readPDFContent("273496");
		// System.out.println(readPDFContent);
		// records.reportStatus.verifyAtChargeInPDFReport(readPDFContent);
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectNIBRS();
		property.propertyEntry.propertyEntryMainTab.SelectReasonAsEvidence();
		property.propertyEntry.propertyEntryMainTab.SelectPropertyAsAircraft();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.EnterValueAs100();
		property.switchToPropertyEntry();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.tabOutQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.SelectDispositionAsSentToLab();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.closeTheScreen();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.closeTheScreen();
		records.switchToReportStatus();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickPopupCopyButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.SelectAtCircumstances1();
		records.nameVictim.SelectJustifiableHomicide();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();
		records.caseNames.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.switchToReportManager();
		records.reportManager.save(); // issue reported by dinesh
		records.switchToReportManager();
		records.reportManager.Close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsSubmitted();
		records.switchToReportStatus();

	}

	// TestCase ID – 273497

	@Test(priority = 4, groups = { "2021DefectTestCases3" }) // Automated by Stalin Q2 S4 Run in 45
	public void VerifyReportisabletodeletebyPurge2_273497(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273497");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContextOtherDB();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.SelectRowByAtCaseNo(); // issue detected by dinesh
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab(); // issue detected by dinesh
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.switchToReportManager();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.Close();
		home.switchToMyHomeScreen();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.VerifyApprovedIncidentReportsButtons();
		records.reportStatus.verifyReportStatusAsApproved();
		records.switchToReportStatus();

	}
	// TestCase ID – 273922

	@Test(groups = { "2021DefectTestCases3" }) // Automated by Stalin Q2 S4 ran in 45
	public void VerifytheItemCodedoesntallowtoduplicateinFeesTab_273922(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273922");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.enterAtRequestNo();
		records.openRecordsRequest.clickSearchButton();
		records.openRecordsRequest.selectRowByAtRequestNo();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.SwitchToFeesTab();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.selectAtItemCode();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.ClickAddButton();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.selectAtItemCode();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.ClickAddButton();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.verifyItemCodeDetailAlreadyExistsAcknowledgeMessage();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.SwitchToFeesTab();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.selectAtItemCode1();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.ClickAddButton();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.selectGridRowByIndex(1);
		records.openRecordsRequestEntry.openRecordRequestFeesTab.selectAtItemCode();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.ClickAddButton();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.verifyItemCodeDetailAlreadyExistsAcknowledgeMessage();
		records.switchToOpenRecordsRequestEntry();
	}

	// TestCase ID – 274785

	// TestCase ID – 274788

	@Test(groups = { "2021DefectTestCases3" }) // Automated by Stalin Q2 S4 ran in 45
	public void VerifyRelatedcasetabshowingcorrectpopupmessage_274788(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "274788");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton(); // added by dinesh
		records.caseSearch.enterAtCaseNo(); // added by dinesh
		records.caseSearch.clickSearch();
		records.caseSearch.ClickRowAtCaseNo1(); // issue detected by dinesh
		records.switchToCaseUpdate();
		records.caseUpdate.ClickRelatedCaseTab();
		records.caseUpdate.caseUpdateRelatedCasesTab.EnterAtRelatedCaseNo();
		records.caseUpdate.caseUpdateRelatedCasesTab.verifyRelatedCaseNoInfoIconIsDisplayed();
		records.caseUpdate.caseUpdateRelatedCasesTab.EnterNotes();
		records.caseUpdate.caseUpdateRelatedCasesTab.clickResetButton();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyUpdateSuccessfulMessage();
	}

	// TestCase ID – 274791

	@Test(priority = 1, groups = { "2021DefectTestCases3" }) // Automated by Stalin Q2 S4 ran in 45
	public void PoliceDefectTestCase_274791(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "274791");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContextOtherDB(); // commented by dinesh
		// login.loginScreen.Logon(); // added by dinesh
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();

	}
	// TestCase ID – 274792

	@Test(priority = 2, groups = { "2021DefectTestCases3" }) // Automated by Stalin Q2 S4 ran in 45
	public void PoliceDefectTestCase_274792(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "274792");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContextOtherDB(); // commented by dinesh
		// login.loginScreen.Logon(); // added by dinesh
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.deleteAtTypeInGrid();
//				        records.caseUpdate.reportingTab.verifyIncidentReportCannotDeleteAcknowledgeMessage(); //issue detected by dinesh,commented by dinesh
		records.caseUpdate.reportingTab.verifyAccessDeniedAcknowledgeMessage(); // method added by dinesh
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		// records.switchToReportStatus();
	}

	@Test(groups = { "2021DefectTestCases4" }) // Mithun
	public void Records_272383(ITestContext testContext) {
		testContext.setAttribute("testID", "272383");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter926AsFalse();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseManagementIcon();
		cm.switchToCaseFolder();
		cm.caseFolder.clickAssignmentTab();
		cm.caseFolder.caseFolderAssignmentTab.selectDivision();
		cm.caseFolder.caseFolderAssignmentTab.selectSection();
		cm.caseFolder.caseFolderAssignmentTab.tabOutSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.tabOutDateAssignedTime();
		cm.caseFolder.caseFolderAssignmentTab.clickSupervisorSearchButton();
		cm.caseFolder.caseFolderAssignmentTab.tabOutSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.tabOutNextReviewDate();
		cm.caseFolder.caseFolderAssignmentTab.tabOutNextReportDate();
		cm.caseFolder.caseFolderAssignmentTab.enterPrimeInvestigator();
		cm.switchToCaseFolder();
		cm.caseFolder.save();
		cm.switchToCaseFolder();
		cm.caseFolder.switchToReportingTab();
		cm.caseFolder.caseFolderReportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.VerifyShareCaseUpdateCaseFolderCheckboxsEnabled();
		records.reportManager.updateStatusTab.VerifyShareCaseUpdateCaseFolderCheckboxsUnchecked();
		records.switchToReportManager();
		records.reportManager.save();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = { "2021DefectTestCases4" }) // Mithun
	public void Records_274796(ITestContext testContext) {
		testContext.setAttribute("testID", "274796");

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtFromDate();
		records.caseSearch.enterAtToDate();
		records.caseSearch.clickSearch();
		records.caseSearch.VerifyAtToDateInFirstRow();
		records.caseSearch.VerifyAtFromDateInLastRow();

	}

	@Test(groups = { "2021DefectTestCases4" }) // Mithun
	public void Records_273489(ITestContext testContext) {
		testContext.setAttribute("testID", "273489");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtPropertyLoss();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.verifyDACheckboxEnabled();
		records.caseUpdate.caseUpdateCaseDataTab.clickDACheckbox();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyUpdateSuccessfulMessage();
	}

	@Test(groups = { "2021DefectTestCases4" }) // Mithun
	public void VerifyRecordInAccessLog_275249(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "275249");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();

		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		String CaseNo = records.caseUpdate.readCaseNo();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("Access Log");
		settings.switchToAcessLog();
		settings.accessLog.tabTheFromDateAndTime();
		settings.accessLog.tabTheToDateAndTime();
		settings.accessLog.enterAtCaseNo(CaseNo);
		settings.accessLog.clickSearch();
		settings.accessLog.verifyAtDescription(0, CaseNo);
	}

	@Test(groups = { "2021DefectTestCases4" }) // Mithun
	public void VerifyRecordInAccessLog_275250(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "275250");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		String CallNo = records.callEntry.readCallNo();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("Access Log");
		settings.switchToAcessLog();
		settings.accessLog.tabTheFromDateAndTime();
		settings.accessLog.tabTheToDateAndTime();
		settings.accessLog.enterAtCallNo(CallNo);
		settings.accessLog.clickSearch();
		settings.accessLog.verifyAtDescription(0, CallNo);

	}

	@Test(groups = { "2021DefectTestCases4" }) // Mithun
	public void Records_272384(ITestContext testContext) {
		testContext.setAttribute("testID", "272384");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseManagementIcon();
		cm.switchToCaseFolder();
		cm.caseFolder.clickAssignmentTab();
		cm.caseFolder.caseFolderAssignmentTab.selectDivision();
		cm.caseFolder.caseFolderAssignmentTab.selectSection();
		cm.caseFolder.caseFolderAssignmentTab.tabOutSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.tabOutDateAssignedTime();
		cm.caseFolder.caseFolderAssignmentTab.tabOutSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.tabOutNextReviewDate();
		cm.caseFolder.caseFolderAssignmentTab.tabOutNextReportDate();
		cm.caseFolder.caseFolderAssignmentTab.enterPrimeInvestigator();
		cm.switchToCaseFolder();
		cm.caseFolder.save();
		cm.switchToCaseFolder();
		cm.caseFolder.switchToReportingTab();
		cm.caseFolder.caseFolderReportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.ClickSignReportCheckBox();
		settings.switchToPhoenixAuthenticatorWindow();
		settings.phoenixAuthenticatorWindow.enterAtPassword();
		settings.phoenixAuthenticatorWindow.clickAcceptButton();
		home.switchToSignatureScreen();
		home.signatureScreen.clickTypeButton();
		home.signatureScreen.enterAtSignTextArea("Raja");
		home.signatureScreen.clickApplyButton();
		records.switchToReportManager();
		records.reportManager.clickReset();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.VerifyPFSignImageDisplayed();
		records.reportManager.save();
		objectIdentification.windowHandle.switchToMainWindow();
	}

	@Test(groups = "OpenRecordRequestFuntional")
	public void OpenRecordRequestDetailsTab_291713(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "291713");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickAddNewButton();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.tabOutReceivedDate();
		records.openRecordsRequestEntry.EnterDueByDateAs3DaysFutureDate();
		records.openRecordsRequestEntry.selectAtRequestType();
		records.openRecordsRequestEntry.EnterAtRelatedCaseNo();
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.tabOutFirstName();
		names.nameSearchHelpWindow.SelectName();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterRequestInformationDetails();
		records.openRecordsRequestEntry.Save();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.VerifyStatusAsOpen();
		records.openRecordsRequestEntry.VerifyStatusAs3Days();

	}

	@Test(groups = "OpenRecordRequestFuntional")
	public void OpenRecordRequestFeeTab_159698(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "159698");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.enterAtPhoneNo();
		records.openRecordsRequest.clickSearchButton();
		records.openRecordsRequest.selectRowByAtRequestedBy();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.SwitchToFeesTab();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.selectAtItemCode();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.ClearQty();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.EnterAtQty();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.ClearRate();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.EnterAtRate();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.ClickAddButton();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.Save();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.SwitchToFeesTab();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.VerifyAtTotalInvoiceAmount();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.VerifyAtBalanceInvoiceAmount();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.ClickReceivePaymentButton();
		accounting.SwitchToReceivePayment();
		// AccountingScripts.AccountingTestContext = TestContext;
		accounting.receivePayment.EnterAtAmount();
		accounting.receivePayment.selectPaymentMethodAsCash();
		accounting.receivePayment.clickSave();

	}

	@Test(groups = { "Useofforce" })

	public void Police2018RecordsModule_159638(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "159638");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UOF Search");
		records.switchToUOFSearch();
		records.uOFSearch.ClickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.EnterAtRelatedCaseNo();
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.VerifyAtOfficerPFNo();
		records.uOFEntry.EnterAtSubjectLastName();
		records.uOFEntry.EnterAtSubjectFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.SelectName();
		records.switchToUOFEntry();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.VerifyCurrentDateAutoPopulates();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.SelectAtTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.ClickAllTabs();
		records.uOFEntry.Close();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = { "Useofforce" })
	public void Police2018RecordsModule_159691(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "159691");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UOF Search");
		records.switchToUOFSearch();
		records.uOFSearch.ClickDateReset();
		records.uOFSearch.EnterAtNameID();
		records.uOFSearch.ClickSearch();
		records.uOFSearch.ClickAtSubjectNameInGrid();
		records.switchToUOFEntry();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.SelectCharge();
		records.switchToUOFEntry();
		records.uOFEntry.incidentSubjectInformationTab.SelectWasASupervisorPresentAsYes();
		records.uOFEntry.incidentSubjectInformationTab.SelectSupervisorPF();
		records.switchToUOFEntry();
		records.uOFEntry.incidentSubjectInformationTab.EnterTotalNoOfOfficersUsedForce();
		records.uOFEntry.incidentSubjectInformationTab.VerifyTotalNoOfOfficersUsedForceComboBoxDisabled();
		records.uOFEntry.incidentSubjectInformationTab.ClearTotalNoOfOfficersUsedForce();
		records.uOFEntry.incidentSubjectInformationTab.VerifyTotalNoOfOfficersUsedForceComboBoxEnabled();
		records.uOFEntry.incidentSubjectInformationTab.EnterTotalNoOfOfficersUsedForceFromYourAgency();
		records.uOFEntry.incidentSubjectInformationTab.VerifyTotalNoOfOfficersUsedForceFromYourAgencyComboBoxDisabled();
		records.uOFEntry.incidentSubjectInformationTab.ClearTotalNoOfOfficersUsedForceFromYourAgency();
		records.uOFEntry.incidentSubjectInformationTab.VerifyTotalNoOfOfficersUsedForceFromYourAgencyComboBoxEnabled();
		records.uOFEntry.incidentSubjectInformationTab.SelectListKnownMentalPhysicalConditionsAsYes();
		records.uOFEntry.incidentSubjectInformationTab.SelectAtConditions();
		records.uOFEntry.incidentSubjectInformationTab.SelectWasSubjectArmedWithWeaponAsYes();
		records.uOFEntry.incidentSubjectInformationTab.SelectWeapons();
		records.uOFEntry.incidentSubjectInformationTab.SelectListTheSubjectActionsAsOthers();
		records.uOFEntry.incidentSubjectInformationTab.VerifySubjectActionsEnabled();
		records.uOFEntry.incidentSubjectInformationTab.EnterSubjectActionsText();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.Close();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = { "Useofforce" })
	public void Police2018RecordsModule_159692(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "159692");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UOF Search");
		records.switchToUOFSearch();
		records.uOFSearch.ClickDateReset();
		records.uOFSearch.EnterAtNameID();
		records.uOFSearch.ClickSearch();
		records.uOFSearch.ClickAtSubjectNameInGrid();
		records.switchToUOFEntry();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.DeleteAtTypeOfForce();
		records.switchToUOFEntry();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.typeOfForceTab.EnterForceSeqNo();
		records.uOFEntry.typeOfForceTab.SelectAtTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.EnterNotes();
		records.uOFEntry.typeOfForceTab.SelectEffectiveness();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.typeOfForceTab.VerifyAtTypeOfForce(0);
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.Close();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = { "Useofforce" })

	public void Police2018RecordsModule_159693(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "159693");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UOF Search");
		records.switchToUOFSearch();
		records.uOFSearch.ClickDateReset();
		records.uOFSearch.EnterAtNameID();
		records.uOFSearch.ClickSearch();
		records.uOFSearch.ClickAtOfficerInGrid();
		records.switchToUOFEntry();
		records.uOFEntry.ClickOfficerInformationTab();
		records.uOFEntry.officerInformationTab.SelectOfficerFullTimeEmployee();
		records.uOFEntry.officerInformationTab.SelectWasOfficerOnDuty();
		records.uOFEntry.officerInformationTab.SelectWasOfficerInjured();
		records.uOFEntry.officerInformationTab.SelectListOfficersInjuries();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.ClickDispositionTab();
		records.uOFEntry.uOFDispositionTab.EnterAtDispositionPFNo();
		records.uOFEntry.uOFDispositionTab.SelectAtDisposition();
		records.uOFEntry.uOFDispositionTab.EnterNotesRichText();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.Close();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = { "Useofforce" })
	public void Police2018RecordsModule_162355(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "162355");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UOF Search");
		records.switchToUOFSearch();
		records.uOFSearch.ClickDateReset();
		records.uOFSearch.EnterAtNameID();
		records.uOFSearch.ClickSearch();
		records.uOFSearch.ClickAtOfficerInGrid();
		records.switchToUOFEntry();
		records.uOFEntry.ClickRelatedCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUseOfForceTab();
		records.caseUpdate.caseUpdateUseOfForceTab.VerifyAtOfficerInGrid(0);
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		records.switchToUOFEntry();
		records.uOFEntry.Close();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = { "2021DefectTestCases3" }) // Automated by Stalin Q3 S1 //Run in 87
	public void Arrestdateandtimechangesautomatically_275270(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "275270");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.EnterFromAndEndAtCaseNo();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.clickSearch();
		records.reportSearch.SelectRowByAtCaseNo(); // issue detected by dinesh while running on 82
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.verifyAtArrestDate();
		names.arrestEntry.arrestTab.ClearArrestDate();
		names.arrestEntry.arrestTab.ClearArrestTime();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectHowAsOnViewArrest();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.switchToArrestEntry();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.verifyArrestDateAsCurrentDate();
		names.switchToArrestEntry();

	}

	@Test(groups = { "2021DefectTestCases4" }) // Mithun
	public void Records_274790(ITestContext testContext) {
		testContext.setAttribute("testID", "274790");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter832AsTrue();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyUseOfForceButtonDisplayed();

	}

	@Test(groups = { "2021DefectTestCases4" }) // Mithun
	public void Records_274789(ITestContext testContext) {
		testContext.setAttribute("testID", "274789");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter832AsFalse();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.verifyUseOfForceButtonNotDisplayed();

	}

	@Test(groups = { "2021DefectTestCases4" }) // Mithun
	public void VerifyRecordInAccessLog_275251(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "275251");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtNameID();
		records.walkInEntry.selectAtActivity();
		records.walkInEntry.clickCreateCallInCADForDispatchCheckBox();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.VerifyAtLastNameFirstNameInGrid(0);
		records.callEntry.callEntryNamesTab.VerifyAtActivityInGrid(0);
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = { "2021DefectTestCases4" }) // Mithun
	public void Records_273002(ITestContext testContext) {
		testContext.setAttribute("testID", "273002");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickNarrativeButton();
		records.switchToReportStatusNarrative();
		records.reportStatusNarrative.switchToFrame();
		records.reportStatusNarrative.enterAtTextField();
		records.reportStatusNarrative.selectAllText();
		records.switchToReportStatusNarrative();
		records.reportStatusNarrative.clickBold();
		records.reportStatusNarrative.save();
		records.switchToReportStatusNarrative();
		records.reportStatusNarrative.switchToFrame();
		records.reportStatusNarrative.VerifyEnteredTextAsBold();

	}

	@Test // Mithun
	public void PoliceRecordsModule_274783(ITestContext testContext) {
		testContext.setAttribute("testID", "274783");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectAtActivity();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();

		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.Save();

		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickPopupCopyButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectAtActivity1();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();
		records.caseNames.ClickAtActivityInGrid();
		records.caseNames.verifyDVReportButtonIsBlueColor();
		records.caseNames.verifyQAFormButtonIsBlueColor();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test // Mithun
	public void PoliceRecordsModule_274782(ITestContext testContext) {
		testContext.setAttribute("testID", "274782");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickAtActivityInGrid();
		records.caseNames.verifyUseOfForceReportButtonIsBlueColor();
		records.caseNames.clickUseOfForceReportButton();
		records.switchToUOFEntry();
		records.uOFEntry.verifyAtCaseNo();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test // Mithun
	public void VerifythedeletedpropertyisnotlistedinNIBRScheck_275260(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "275260");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");
		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.SelectStatusAsApproved();
		records.reportSearch.EnterFromAndEndAtCaseNo();
		records.reportSearch.clickSearch();
		records.reportSearch.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.verifyRedauctButtonNotDisplayed();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test // Mithun
	public void PoliceRecordsModule_274784(ITestContext testContext) {
		testContext.setAttribute("testID", "274784");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();

		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();

		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectAtActivity1();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.clickOffenderIconInGrid(0);
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.saveNClose();
		records.switchToCaseNames();
		records.caseNames.ClickAtActivityInGrid();
		records.caseNames.verifyDVReportButtonIsBlueColor();
		records.caseNames.verifyUpdateButtonDisplayed();
		records.caseNames.verifyDVReportButtonEnabled();
		records.caseNames.clickDVReportButton();
		records.switchToDVEntry();
		records.dVEntry.SelectAtOffender();
		records.dVEntry.SaveAndClose();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test // Mithun
	public void Records_274781(ITestContext testContext) {
		testContext.setAttribute("testID", "274781");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.ClickSaveButton();
		records.fTC.Verify7061WeaponForceUsedIsMandatoryAckMsg();
		records.switchToFTC();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.saveNClose();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = { "Useofforce" })

	public void CRM_59261Records_163439(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "163439");
		Browser.NavigateToLoginScreen();

		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UOF Search");
		records.switchToUOFSearch();
		records.uOFSearch.ClickDateReset();
		records.uOFSearch.EnterAtCaseNo();
		// records.switchToCaseUpdate();
		// records.caseUpdate.closeTheScreen();
		// records.switchToUOFSearch();
		records.uOFSearch.ClickSearch();
		records.uOFSearch.SelectRowByAtUOFNo();
		records.switchToUOFEntry();
		records.uOFEntry.switchToApprovalTab();
		records.uOFEntry.approvalTab.selectNewActionAsSendForApproval();
		records.uOFEntry.approvalTab.tabDateAndTime();
		records.switchToUOFEntry();
		records.uOFEntry.ClickSave();
		records.uOFEntry.verifyAcknowldgeMessage1051();
		records.switchToUOFEntry();
		records.uOFEntry.switchToApprovalTab();
		records.uOFEntry.approvalTab.saveInApprovalTab();
		records.uOFEntry.Save();
		records.uOFEntry.verifyUpdateSuccessfulStatusMsg();
		records.uOFEntry.switchToApprovalTab();
		records.uOFEntry.approvalTab.selectNewActionAsApprove();
		records.uOFEntry.approvalTab.tabDateAndTime();
		records.uOFEntry.approvalTab.saveInApprovalTab();
		records.uOFEntry.verifyStatusOfReportAsApproved();
		records.uOFEntry.VerifyMenuButtonsDisabled();
		records.switchToUOFEntry();

	}

	@Test(groups = "MohanCRM")
	public void CRM_75394_75783Records_179812(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "179812");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.ClickResetButton();
		records.switchToCallSearch();
		records.callSearch.SelectLocationAsAddress();
		records.callSearch.EnterAtPremise();
		records.callSearch.EnterAtStreet();
		records.callSearch.clickSearchButton();
		records.callSearch.VerifyAtCallNoInGrid(0);
		records.callSearch.VerifyAtLocationInGrid(0);
		records.callSearch.clickBackButton();
		records.callSearch.ClickResetButton();

		records.switchToCallSearch();
		records.callSearch.SelectLocationAsCommonName();
		records.callSearch.EnterAtCommonName();
		records.callSearch.clickSearchButton();
		records.callSearch.VerifyAtCallNo1InGrid(1);
		records.callSearch.VerifyAtLocation1InGrid(1);
		records.callSearch.clickBackButton();
		records.callSearch.ClickResetButton();
		records.switchToCallSearch();
		records.callSearch.SelectLocationAsIntersection();
		records.callSearch.EnterAtStreet1();
		records.callSearch.EnterAtStreet2();
		records.callSearch.clickSearchButton();
		records.callSearch.VerifyAtCallNo2InGrid(0);
		records.callSearch.VerifyAtLocation2InGrid(0);
		records.callSearch.clickBackButton();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = "MohanCRM")
	public void CRM_79896Records_180957(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "180957");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.ClickReset();
		records.caseSearch.clickDateResetButton();

		records.caseSearch.enterAtOfficer();
		records.caseSearch.EnterAtCADDisposition();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		records.switchToCaseSearch();
		records.caseSearch.clickSearch();
		records.caseSearch.VerifyAtLocationByAtCaseNo();
		records.caseSearch.ClickShowMapButton();

		home.switchToGlobalMapScreen();
		home.globalMapScreen.SelectSelectOverlay1();
		home.globalMapScreen.VerifyMapCaseDetailsShows();
		home.globalMapScreen.Close();
		records.switchToCaseSearch();
		records.caseSearch.clickBackButton();
		records.caseSearch.ClickReset();

		records.caseSearch.EnterAtOfficer1();
		records.caseSearch.EnterAtCaseNo1();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		records.switchToCaseSearch();
		records.caseSearch.clickSearch();

		records.caseSearch.ClickRowAtCaseNo1();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToAllTabs();
		records.caseUpdate.clickCaseDataTab();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = "MohanCRM")
	public void CRM_78749Records_180960(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "180960");
		Browser.NavigateToLoginScreen();

		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.ClickResetButton();

		records.callSearch.EnterAtCADDisposition();
		records.callSearch.EnterAtOfficer();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.closeScreen();
		records.switchToCallSearch();
		records.callSearch.clickSearchButton();
		records.callSearch.ClickAtCallNoInGrid();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		Playback.gridLoadThreadWait();
		records.callEntry.vehicleTab.VerifyAtSerialInGrid(0);
		records.callEntry.vehicleTab.ClickVehicleLookupIcon();
		vehicle.switchToVehicleBoatSearchHelpWindow();

		// VehicleScripts.VehicleTestContext = RecordsTestContext;
		vehicle.vehicleBoatSearchHelpWindow.selectAtVehicleUsingVehicleNo();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.selectAtActivity();
		records.callEntry.vehicleTab.SelectInsuranceCompany();
		records.callEntry.vehicleTab.clickAddButton();
		records.callEntry.vehicleTab.VerifyAtActivityInGrid();
		records.callEntry.vehicleTab.VerifyAtSerialInGrid(0);
		records.callEntry.vehicleTab.VerifyAtSerial1InGrid(1);
		records.callEntry.vehicleTab.ClickAtActivityInGrid();
		records.callEntry.vehicleTab.EnterOtherVehicleInformation();
		records.callEntry.vehicleTab.clickAddButton();
		records.callEntry.vehicleTab.VerifyAtSerial1InGrid(1); // error found
		records.callEntry.vehicleTab.InternalSave();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.VerifyAtSerialInGrid(0);
		records.callEntry.vehicleTab.VerifyAtSerial1InGrid(1);
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = "MohanCRM")
	public void CRM_78789Records_180962(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "180962");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.SelectAtChargeUsingDescription();
		records.switchToACD();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.SelectAtChargeUsingDescription1();
		records.switchToACD();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.VerifyRowCount(2);
		records.aCD.VerifyAtDescriptionInGrid(0);
		records.aCD.VerifyAtDescription1InGrid(1);
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.selectDomesticViolance();
		records.aCD.Save();
		records.switchToACD();
		records.aCD.Close();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = "MohanCRM")
	public void CRM_75389_Names_179814(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "179814");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Name Search");
		names.switchToNameSearch();
		names.nameSearch.SelectAddressAsAddress();
		names.nameSearch.EnterAtPremiseNo();
		names.nameSearch.EnterAtStreet();
		names.nameSearch.clickSearchButton();
		names.nameSearch.ClickAtNameID();
		names.switchToNameEntry();
		names.nameEntry.switchToMainTab();
		names.nameEntry.nameEntryMainTab.EnterAtBirthDate();
		names.nameEntry.nameEntryMainTab.VerifyAgeFromToFieldDisabled();
		names.nameEntry.nameEntryMainTab.ClickAgeResetIcon();
		names.nameEntry.nameEntryMainTab.EnterAgeFromAs25();
		names.nameEntry.nameEntryMainTab.EnterAgeToAs15();
		names.nameEntry.ClickSaveButton();
		names.nameEntry.VerifyAgeGreaterAcknowledge();
		names.switchToNameEntry();
		names.nameEntry.nameEntryMainTab.ClickAgeResetIcon();
		names.nameEntry.nameEntryMainTab.EnterAgeFromAs25();
		names.nameEntry.nameEntryMainTab.EnterAgeToAs35();
		names.nameEntry.SaveWithConfirmMessage();
		names.switchToNameEntry();
		names.nameEntry.VerifyUpdateSuccessfulStatusMessage();
		objectIdentification.windowHandle.switchToMainWindow();
	}

	@Test(groups = "MohanCRM")
	public void CRM_75389_Names_179815(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "179815");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Name Search");
		names.switchToNameSearch();
		names.nameSearch.ClickAddNewButton();
		names.switchToNameEntry();
		names.nameEntry.EnterAtLastName();
		names.nameEntry.EnterAtFirstName();
		names.nameEntry.ClickAddressVerifyCheckBox();
		names.nameEntry.EnterAtAddress();
		names.nameEntry.switchToMainTab();
		names.nameEntry.nameEntryMainTab.EnterAtBirthDate();
		names.nameEntry.nameEntryMainTab.SelectSex();
		names.nameEntry.nameEntryMainTab.SelectEthnic();
		names.nameEntry.nameEntryMainTab.SelectRace();
		names.nameEntry.SaveWithConfirmMessage();
		names.switchToNameEntry();
		names.nameEntry.VerifyAddressContentColorAsRed();
		names.nameEntry.EnterAtAddress1();
		names.nameEntry.ClickAddressVerifyCheckBox();
		names.nameEntry.VerifyAddressIconDisplayed();
		names.nameEntry.ClickSaveButton();
		names.nameEntry.verifyChangeAddressPopupWindow();
		names.nameEntry.VerifySaveConfirmMessage();

		names.switchToNameEntry();
		names.nameEntry.switchToAddressesTab();
		names.nameEntry.nameEntryAddressesTab.VerifyAtAddress(0);
		names.nameEntry.nameEntryAddressesTab.ClickAtAddressInGrid();
		names.nameEntry.nameEntryAddressesTab.VerifyAddressContentColorAsRed(); // Cant verify Checkbox unchecked
		names.nameEntry.nameEntryAddressesTab.VerifyTypeAsOld();
		names.switchToNameEntry();
		// Names.NameEntry.SwitchToActivityTab(); //need to verify
		// Names.NameEntry.ActivityTab.VerifyAtActivityNumber();
		// Names.SwitchToNameEntry();

	}

	@Test(groups = "MohanCRM")
	public void CRM_75575_HomeModule_179813(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());

		testContext.setAttribute("testID", "179813");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectAtStatus();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsTranscriber();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		home.myHome.myReportsTab.VerifyKeypunchOfficerToAccessConfirmMessage();
		records.switchToReportStatus();
		records.reportStatus.VerifyReportStatusAsKeypunch();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = "MohanCRM")
	public void CRM_75575_HomeModule_179849(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "179849");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectAtStatus();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsTranscriber();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		home.myHome.myReportsTab.VerifyReportBeingUpdatedByKeypunchConfirmMessage();
		records.switchToReportStatus();
		records.reportStatus.VerifyReportStatusAsKeypunch();

	}

	@Test(groups = "MohanCRM")
	public void PropertyDrugPanelFunctionality_180958(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "180958");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Property");
		loader.navigateToScreen("Property Edit/Entry");
		property.switchToPropertyEditEntry();
		property.propertyEditEntry.enterAtCaseNumberAndTab();

		String reportedDate = property.propertyEditEntry.GetTheReportedDate();
		String ReportedTime = property.propertyEditEntry.GetTheReportedTime();

		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.VerifyReportedDateTime(reportedDate, ReportedTime);
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.SelectAtNIBRS();
		// property.propertyEntry.propertyEntryMainTab.selectAtReason();
		// property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.verifyReasonAndPropertyDefaultSelected();
		property.propertyEntry.propertyEntryMainTab.enterDescription();

		property.propertyEntry.clickSaveButton();

		property.propertyEntry.propertyEntryMainTab.VerifyAcknowledgeDrugsType();

		property.switchToPropertyEntry();
		property.propertyEntry.propertyEntryMainTab.SelectDrugTypeAsHeroin();
		property.propertyEntry.propertyEntryMainTab.VerifyDrugQuantityMeasurementFieldsMandatory();
		property.propertyEntry.propertyEntryMainTab.EnterAtDrugQuantity();
		property.propertyEntry.propertyEntryMainTab.SelectMeasurement();

		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.EnterAtDrugPanelQuantity();
		property.propertyEntry.recoveredTab.selectAtDisposition();
		property.propertyEntry.recoveredTab.SelectAtInitialStorageUsingCodeValue();
		property.propertyEntry.recoveredTab.VerifyEvidenceLockerUseConfirmMessage();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.ClickSubmitButton();
		property.propertyEntry.VerifyConfirmSubmitMessage();
		property.switchToPropertyEditEntry();
		property.propertyEditEntry.VerifyAtType(0);
		property.propertyEditEntry.VerifyAtQuantity(0);

	}

	@Test(groups = "MohanCRM")
	public void CRM_76460CMModule_180959(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "180959");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("CM");
		loader.navigateToScreen("CM Search");
		cm.switchToCMSearch();
		cm.cMSearch.clickReset();
		cm.cMSearch.clickDateRangeClearButton();
		cm.cMSearch.selectAtStatus();
		cm.cMSearch.enterAtInvestigator();
		cm.cMSearch.enterFromDateTime();
		cm.cMSearch.enterToDateTime();
		cm.cMSearch.clickSearch();
		String rowCount2 = cm.cMSearch.getRowCount();
		cm.cMSearch.clickPrintIcon();
		home.switchToSelectReport();
		home.selectReport.VerifyRecordCount(rowCount2);
		home.selectReport.CloseTheScreen();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = "MohanCRM")
	public void cRM_78749Settings_180961(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "180961");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("Disposition");
		settings.switchToDisposition();

		settings.disposition.clickAddNew();
		settings.switchToSharedCodes();
		settings.sharedCodes.enterAtDisposition();
		settings.sharedCodes.enterDescriptionAsQualityAssurance();
		settings.sharedCodes.selectAtType();
		settings.sharedCodes.verifyManagementTabDisabled();
		settings.sharedCodes.clickCADTab();
		settings.sharedCodes.clickCaseGereratedNoCheckBox();
		settings.sharedCodes.selectAtReportCode();
		settings.sharedCodes.selectBackupUnitReportCodeAsIncidentReport();
		settings.sharedCodes.clickSave();
		settings.sharedCodes.verifyReportCodeBackupUnitReportCodeAcknowledgeMessage();
		settings.switchToSharedCodes();
		settings.sharedCodes.selectBackupUnitReportCodeAsArrestReport();
		settings.sharedCodes.saveScreen();
		settings.switchToSharedCodes();
		settings.sharedCodes.closeScreen();
		settings.switchToDisposition();
		settings.disposition.enterAtDisposition();
		settings.disposition.selectAtType();
		settings.disposition.clickSearchButton();
		settings.disposition.verifyAtDispoationInGrid(0);
		settings.disposition.verifyAtTypeInGrid(0);
		objectIdentification.windowHandle.switchToMainWindow();
	}

	@Test(groups = "MohanCRM")
	public void CRM_59217Home149214(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "149214");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.ClickAddLinkButton();
		home.myHome.SwitchToManageLinks();
		home.myHome.manageLinks.EnterAtLinkName();
		home.myHome.manageLinks.EnterAtScreenID();
		home.myHome.manageLinks.ClickAddButton();
		home.myHome.manageLinks.VerifyAtLinkName();
		home.myHome.manageLinks.VerifyViewOrderAsMinusOne(0);
		home.myHome.manageLinks.Save();
		home.myHome.manageLinks.VerifyAtLinkName();
		home.myHome.manageLinks.VerifyAtScreenName();
		home.myHome.manageLinks.CloseTheScreen();
		home.switchToMyHomeScreen();
		home.myHome.ReloadMyHomeScreen();
		home.switchToMyHomeScreen();
		home.myHome.ClickCallEntryLink();
		records.switchToCallEntry();
		records.callEntry.ClickResetButton();
	}

	@Test(groups = "2021DefectTestCases3") // Done By KIRAN
	public void VerifyThatExisitngCasesAreableToSearchFromCaseSearch_273494(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273494");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.enterParameter753As15Days();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter779AsTrue();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		Playback.threadWait();
		records.switchToCaseSearch();
		records.caseSearch.verifyFromAndToDateRangeAs15();
		records.caseSearch.clickchargeSearchicon();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.enterAtCharge();
		popup.kPICodedLookup.clickSearchIcon();
		popup.kPICodedLookup.selectAtCharge();
		records.switchToCaseSearch();
		records.caseSearch.enterGeoCoord();
		records.caseSearch.selectpatrolZone();
		records.caseSearch.selectSubZone();
		records.caseSearch.selectAtPrimeInvestigator();
		records.caseSearch.clickCaseStatusChargeIcon();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.selectAtDispositionInGrid();
		records.switchToCaseSearch();
		records.caseSearch.clickOfficerSearchIcon();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.selectAtDispositionInGrid1();
		records.switchToCaseSearch();
		records.caseSearch.selectDomesticViolenceAsYes();
		records.caseSearch.clickSearch();
		records.caseSearch.VerifyNoRecordAcknowledgeMessage();
		records.switchToCaseSearch();
		records.caseSearch.clickPoliceForceTab();
		records.caseSearch.policeForceTab.clickPhysicalForceCheckBox();
		records.caseSearch.policeForceTab.clickDeadlyForceCheckBox();
		records.caseSearch.policeForceTab.clickVechicleForceCheckBox();
		records.caseSearch.clickSearch();
		records.caseSearch.VerifyNoRecordAcknowledgeMessage();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = "ReportApprovalProcess", priority = 1)
	public void RecordsIncidentReportApprovalProcessCaseCreate_281470(ITestContext testContext) {
		testContext.setAttribute("testID", "281470");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.setCaseYearToJSONFile("281470");
		records.caseUpdate.setCaseNumberToJSONFile("281470");
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.verifyIncidentReportStatusAsReportDue();

	}

	@Test(groups = "ReportApprovalProcess", priority = 2)
	public void RecordsIncidentReportApprovalProcessFTCAndACD_102110(ITestContext testContext) {
		testContext.setAttribute("testID", "102110");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsReportDue();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowInMyReportsTabUsingJsonReadFile("281470");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281470");

		records.switchToReportManager();
		records.reportManager.VerifyStatusOfReportDataMenubar();
		records.reportManager.VerfiyStatusFieldInReportData();
		records.reportManager.tabReportedbyPF();
		records.switchToReportManager();
		records.reportManager.tabDateAndTime();
		records.reportManager.VerifyCurrentDate();

		records.reportManager.switchToHistoryTab();
		records.reportManager.reportManagerHistroyTab.VerifyActionInHistoryTabInReportData(0);
		records.switchToReportManager();
		records.reportManager.save();

		records.switchToReportStatus();
		records.reportStatus.VerifyLabelStatusOfIncidentReportMenubar();

		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();

		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolation();
		records.aCD.Save();
		records.switchToACD();

	}

	@Test(groups = "ReportApprovalProcess", priority = 3)
	public void RecordsIncidentReportApprovalProcessSendForApproval_102158(ITestContext testContext) {
		testContext.setAttribute("testID", "102158");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowInMyReportsTabUsingJsonReadFile("281470");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281470");

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();

		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAtUpdateStatusAction();
		records.reportManager.save();

		records.switchToReportManager();
		records.reportManager.VerifyStatusOfReportDataMenubar();
		records.reportManager.VerfiyStatusFieldInReportData();

		records.reportManager.switchToHistoryTab();
		records.reportManager.reportManagerHistroyTab.VerifyActionInHistoryTabInReportData(0);
		records.reportManager.reportManagerHistroyTab.VerifyAtPFInHistoryTabInReportData(0);
		records.reportManager.Close();

		records.switchToReportStatus();
		records.reportStatus.VerifyLabelStatusOfIncidentReportMenubar();
	}

	@Test(groups = "ReportApprovalProcess", priority = 4)
	public void RecordsIncidentReportApprovalProcessSendReport_102178(ITestContext testContext) {
		testContext.setAttribute("testID", "102178");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsKeypunch();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowInMyReportsTabUsingJsonReadFile("281470");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281470");
		home.myHome.myReportsTab.verifyreportSenttoKeypunchConfirmMessage();

		records.switchToReportStatus();
		records.reportStatus.VerifyLabelStatusOfIncidentReportMenubar();
		records.reportStatus.clickReportDetails();

		records.switchToReportManager();
		records.reportManager.VerifyStatusOfReportDataMenubar();
		records.reportManager.VerfiyStatusFieldInReportData();

		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAtUpdateStatusAction();

		records.switchToReportManager();
		records.reportManager.save();

		records.reportManager.switchToHistoryTab();
		records.reportManager.reportManagerHistroyTab.VerifyActionInHistoryTabInReportData(0);
		records.reportManager.reportManagerHistroyTab.VerifyAtPFInHistoryTabInReportData(0);

	}

	@Test(groups = "ReportApprovalProcess", priority = 5)
	public void RecordsIncidentReportApprovalProcessSubmit_102183(ITestContext testContext) {
		testContext.setAttribute("testID", "102183");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsReadyToSubmit();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowInMyReportsTabUsingJsonReadFile("281470");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281470");

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();

		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAtUpdateStatusAction();

		records.switchToReportManager();
		records.reportManager.save();

		records.reportManager.switchToHistoryTab();
		records.reportManager.reportManagerHistroyTab.VerifyActionInHistoryTabInReportData(0);
		records.reportManager.reportManagerHistroyTab.VerifyAtPFInHistoryTabInReportData(0);

		records.switchToReportManager();
		records.reportManager.VerifyStatusOfReportDataMenubar();
		records.reportManager.VerfiyStatusFieldInReportData();

	}

	@Test(groups = "ReportApprovalProcess", priority = 6)
	public void RecordsIncidentReportApprovalProcessApprove_102184(ITestContext testContext) {
		testContext.setAttribute("testID", "102184");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsSubmitted();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowInMyReportsTabUsingJsonReadFile("281470");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281470");

		/*
		 * records.switchToReportStatus(); records.reportStatus.clickReportDetails();
		 */

		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAtUpdateStatusAction();
		records.reportManager.updateStatusTab.SelectRejectionCode(1);
		records.reportManager.updateStatusTab.ClickOpenPDFMarkupButton();
		// records.reportManager.updateStatusTab.SavePDFforMarkup();
		objectIdentification.readPDF.SendLocalDownloadedFileToServerPath("102184");

		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.UploadPDFClick();
		records.reportManager.updateStatusTab.pDFUploadPanel.sendFilePath("102184");
		records.reportManager.updateStatusTab.pDFUploadPanel.ClickSelect();
		// objectIdentification.filesHandle.fileAttach.fileUpload("281470");
		// records.reportManager.updateStatusTab.pDFUploadPanel.EnterFilePath();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.pDFUploadPanel.Save();
		records.reportManager.updateStatusTab.VerifyUploadPDFButtonTextAsGreen();
		records.reportManager.save();

		records.reportManager.switchToHistoryTab();
		records.reportManager.reportManagerHistroyTab.VerifyActionInHistoryTabInReportData(0);
		records.reportManager.reportManagerHistroyTab.VerifyAtPFInHistoryTabInReportData(0);

		records.reportManager.reportManagerHistroyTab.VerifyPaperIconInHistoryTabInReportData(0);

		records.switchToReportManager();
		records.reportManager.VerifyStatusOfReportDataMenubar();
		records.reportManager.VerfiyStatusFieldInReportData();
		records.reportManager.clickViewReportButton();
		records.switchToReportStatus();
		records.reportStatus.VerifyLabelStatusOfIncidentReportMenubar();
		records.reportStatus.VerifyPaperIconInInReportStatusMenuBar();

	}

	@Test(groups = "ReportApprovalProcess1", priority = 1)
	public void RecordsIncidentReportApprovalProcess_281528(ITestContext testContext) {
		testContext.setAttribute("testID", "281528");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.setCaseYearToJSONFile("281528");
		records.caseUpdate.setCaseNumberToJSONFile("281528");
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.verifyIncidentReportStatusAsReportDue();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabDateAndTime();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();

		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();

		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();

		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolation();
		records.aCD.Save();

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();

		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsSubmittedInMenuBar();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsReject();
		records.reportManager.updateStatusTab.SelectRejectionCode(1);
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsRejectedInMenuBar();

	}

	@Test(groups = "ReportApprovalProcess1", priority = 2)
	public void RecordsIncidentReportApprovalProcess_102185(ITestContext testContext) {
		testContext.setAttribute("testID", "102185");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();

		// Loader.Header.ClickMessageSearchImageButton();
		// home.switchToMessageSearch();
		// home.MessageSearch.VerfiyMessagefromMessageScreen();
		// home.MessageSearch.Close();

		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsRejected();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowInMyReportsTabUsingJsonReadFile("281528");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281528");

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();

		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAtUpdateStatusAction();
		records.switchToReportManager();
		records.reportManager.save();

		records.reportManager.switchToHistoryTab();
		records.reportManager.reportManagerHistroyTab.VerifyActionInHistoryTabInReportData(0);
		records.reportManager.reportManagerHistroyTab.VerifyAtPFInHistoryTabInReportData(0);

		records.switchToReportManager();
		records.reportManager.VerifyStatusOfReportDataMenubar();
		records.reportManager.VerfiyStatusFieldInReportData();

	}

	@Test(groups = "ReportApprovalProcess1", priority = 3)
	public void RecordsIncidentReportApprovalProcess_102186(ITestContext testContext) {
		testContext.setAttribute("testID", "102186");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsSubmitted();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowInMyReportsTabUsingJsonReadFile("281528");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281528");

		// records.switchToReportStatus(); records.reportStatus.clickReportDetails();

		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAtUpdateStatusAction();

		records.switchToReportManager();
		records.reportManager.save();

		records.reportManager.switchToHistoryTab();
		records.reportManager.reportManagerHistroyTab.VerifyActionInHistoryTabInReportData(0);
		records.reportManager.reportManagerHistroyTab.VerifyAtPFInHistoryTabInReportData(0);

		records.switchToReportManager();
		records.reportManager.VerifyStatusOfReportDataMenubar();
		records.reportManager.VerfiyStatusFieldInReportData();

		records.reportManager.switchToMainTab();
		records.reportManager.reportManagerMainTab.VerifyApprovedPF();
		records.switchToReportManager();
		records.reportManager.clickViewReportButton();

		records.switchToReportStatus();
		records.reportStatus.VerifyLabelStatusOfIncidentReportMenubar();

	}

	@Test(groups = "ReportApprovalProcess1", priority = 4)
	public void RecordsIncidentReportApprovalProcess_102187(ITestContext testContext) {
		testContext.setAttribute("testID", "102187");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();

		// Loader.Header.ClickMessageSearchImageButton();
		// home.switchToMessageSearch();
		// home.MessageSearch.VerfiyMessagefromMessageScreen();
		// home.MessageSearch.Close();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");

		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.EnterFromAndEndAtCaseNoUsingJSONData("281528");
		records.reportSearch.SelectReportTypeAsIncidentReport();
		records.reportSearch.clickSearch();
		records.reportSearch.VerifyIncidentReportData(0);
	}

	@Test(groups = "ReportApprovalProcess1", priority = 5)
	public void RecordsIncidentReportApprovalProcess_102190(ITestContext testContext) {
		testContext.setAttribute("testID", "102190");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");

		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.selectAtTypeandReportStatus();
		records.reportSearch.VerifyIncidentReportData(0);
		records.reportSearch.SelectRowByAtCaseNoUsingJSON("281528");

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();

		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAtUpdateStatusAction();
		records.reportManager.updateStatusTab.SelectRejectionCode(1);
		records.reportManager.updateStatusTab.VerifyRejectionCode();

		records.reportManager.save();
		records.reportManager.VerifyStatusOfReportDataMenubar();
		records.reportManager.VerfiyStatusFieldInReportData();

		records.reportManager.switchToHistoryTab();
		records.reportManager.reportManagerHistroyTab.VerifyActionInHistoryTabInReportData(0);
		records.reportManager.reportManagerHistroyTab.VerifyAtPFInHistoryTabInReportData(0);

		records.switchToReportManager();
		records.reportManager.switchToMainTab();
		records.reportManager.reportManagerMainTab.VerifyApprovedPFEmpty();
		records.reportManager.Close();

		records.switchToReportStatus();
		records.reportStatus.VerifyLabelStatusOfIncidentReportMenubar();

	}

	@Test(groups = "ReportApprovalProcess1", priority = 6)
	public void RecordsIncidentReportApprovalProcess_102192(ITestContext testContext) {
		testContext.setAttribute("testID", "102192");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsMoreInfoNeeded();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowInMyReportsTabUsingJsonReadFile("281528");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281528");

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();

		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAtUpdateStatusAction();
		records.reportManager.save();

		records.reportManager.switchToHistoryTab();
		records.reportManager.reportManagerHistroyTab.VerifyActionInHistoryTabInReportData(0);
		records.reportManager.reportManagerHistroyTab.VerifyAtPFInHistoryTabInReportData(0);

	}

	@Test(groups = "ReportApprovalProcess1", priority = 7)
	public void RecordsIncidentReportApprovalProcess_102195(ITestContext testContext) {
		testContext.setAttribute("testID", "102195");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();

		// Loader.Header.ClickMessageSearchImageButton();
		// home.switchToMessageSearch();
		// home.MessageSearch.VerfiyMessagefromMessageScreen();
		// home.MessageSearch.Close();

		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsSubmitted();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowInMyReportsTabUsingJsonReadFile("281528");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281528");

		// records.switchToReportStatus(); records.reportStatus.clickReportDetails();

		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAtUpdateStatusAction();
		records.reportManager.save();

		records.reportManager.switchToHistoryTab();
		records.reportManager.reportManagerHistroyTab.VerifyActionInHistoryTabInReportData(0);
		records.reportManager.reportManagerHistroyTab.VerifyAtPFInHistoryTabInReportData(0);

		records.switchToReportManager();
		records.reportManager.VerifyStatusOfReportDataMenubar();
		records.reportManager.VerfiyStatusFieldInReportData();

		records.reportManager.switchToMainTab();
		records.reportManager.reportManagerMainTab.VerifyApprovedPF();
		records.reportManager.clickViewReportButton();

		records.switchToReportStatus();
		records.reportStatus.VerifyLabelStatusOfIncidentReportMenubar();

	}

	@Test(groups = "ReportApprovalProcess1", priority = 8)
	public void RecordsIncidentReportApprovalProcess_102221(ITestContext testContext) {
		testContext.setAttribute("testID", "102221");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();

		// Loader.Header.ClickMessageSearchImageButton();
		// home.switchToMessageSearch();
		// home.MessageSearch.VerfiyMessagefromMessageScreen();
		// home.MessageSearch.Close();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");

		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.SelectStatusAsApproved();
		records.reportSearch.EnterFromAndEndAtCaseNoUsingJSONData("281528");
		records.reportSearch.SelectReportTypeAsIncidentReport();
		records.reportSearch.clickSearch();
		records.reportSearch.VerifyIncidentReportData(0);
	}

	@Test(groups = "ReportApprovalProcess1", priority = 9)
	public void RecordsIncidentReportApprovalProcess_102222(ITestContext testContext) {
		testContext.setAttribute("testID", "102222");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Report Search");

		records.switchToReportSearch();
		records.reportSearch.clickDateTimeResetButton();
		records.reportSearch.SelectStatusAsApproved();
		records.reportSearch.EnterFromAndEndAtCaseNoUsingJSONData("281528");
		records.reportSearch.SelectReportTypeAsIncidentReport();
		records.reportSearch.clickSearch();
		records.reportSearch.SelectRowByAtCaseNoUsingJSON("281528");

		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();

		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAtUpdateStatusAction();
		records.reportManager.save();

		records.reportManager.switchToHistoryTab();
		records.reportManager.reportManagerHistroyTab.VerifyActionInHistoryTabInReportData(0);
		records.reportManager.reportManagerHistroyTab.VerifyAtPFInHistoryTabInReportData(0);

		records.switchToReportManager();
		records.reportManager.switchToMainTab();
		records.reportManager.reportManagerMainTab.VerifyApprovedPF();

		records.reportManager.VerifyStatusOfReportDataMenubar();
		records.reportManager.VerfiyStatusFieldInReportData();
		records.reportManager.clickViewReportButton();

		records.switchToReportStatus();
		records.reportStatus.VerifyLabelStatusOfIncidentReportMenubar();

	}

	@Test(groups = { "2021DefectTestCases4" }) // Mahesha //Q3S4 09/01/2021
	public void VerifyThatAbleToTrackAccesslogWhenPrintaReport_281423(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "281423");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.ClickPrint();
		home.switchToSelectReport();
		home.selectReport.ClickCaseDetailReportInGrid();

		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.ClickPrintButton();
		home.switchToSelectReport();
		home.selectReport.ClickCADSummaryDateSpecificReport();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("Access Log");
		settings.switchToAcessLog();
		settings.accessLog.tabTheFromDateAndTime();
		settings.accessLog.tabTheToDateAndTime();
		settings.accessLog.enterAtContainsDescription();
		settings.accessLog.clickSearch();
		settings.accessLog.verifyAccessAsPrint(1);
		settings.accessLog.verifyAtDescription(1);
		settings.accessLog.verifyScreenIDAndNameAsCaseSearch(1);
		settings.accessLog.verifyAccessAsPrint(0);
		settings.accessLog.verifyAtDescription1(0);
		settings.accessLog.verifyScreenIDAndNameAsCallSearch(0);

	}

	@Test(groups = { "2021DefectTestCase4" }) // Mahesha
	public void CheckUserCanChangeValueofPropertyAfterSubmitOrApprove_280019(ITestContext testContext) {
		testContext.setAttribute("testID", "280019");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.save();

		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		// records.fTC.selectAtNIBRS();
		// records.fTC.SelectCrimeAgainstAsSociety();
		records.fTC.selectAtPropertyLoss();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();

		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.propertyEntryMainTab.SelectAtNIBRS();
		property.propertyEntry.propertyEntryMainTab.verifyReasonAndPropertyDefaultSelected();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterQuantityAs10();
		property.propertyEntry.propertyEntryMainTab.enterAtValue();
		property.propertyEntry.propertyEntryMainTab.clickOwnerUnknownCheckbox();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.tabOutQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();

		property.propertyEntry.recoveredTab.selectAtDisposition();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveNClose();
		property.switchToPropertyEditEntryPopup();
		property.propertyEntry.closeTheScreen();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		// records.reportManager.updateStatusTab.SelectAtDivision();
		// records.reportManager.updateStatusTab.SelectAtSection();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifiyStatusAsSubmitted();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.Saveandclose();

		loader.navigateToModule("Property");
		loader.navigateToScreen("Property Update");
		property.switchToPropertyUpdate();
		property.propertyUpdate.clickMoreFiltersButton();
		property.propertyUpdate.EnterAtCaseNo();
		property.propertyUpdate.clickSearchButton();
		property.propertyUpdate.ClickAtCaseNoInGrid();
		property.switchToPropertyIndex();

		property.propertyIndex.clickOnMainTab();
		property.propertyIndex.propertyIndexMainTab.SelectAtNIBRS1();
		property.propertyIndex.propertyIndexMainTab.verifyReasonAndPropertyDefaultSelected();
		property.propertyIndex.propertyIndexMainTab.VerifyPropertyTypeDrugs();
		property.propertyIndex.propertyIndexMainTab.enterDescription();
		property.propertyIndex.propertyIndexMainTab.SelectAtDrugType();
		property.propertyIndex.propertyIndexMainTab.SelectAtMeasurement();
		property.propertyIndex.propertyIndexMainTab.EnterAtDrugQuantity();
		property.propertyIndex.propertyIndexMainTab.clickOwnerUnknownCheckbox();
		property.propertyIndex.ClickOnRecoveredTab();
		property.propertyIndex.recoveredTab.tabDateAndTime();
		property.propertyIndex.recoveredTab.TabOutDrugQuantity();
		property.propertyIndex.recoveredTab.verifyQuantityAsDrugQuantity();
		property.propertyIndex.recoveredTab.tabOutValue();
		property.propertyIndex.recoveredTab.VerifyValueAs0();
		property.propertyIndex.recoveredTab.SelectAtStatus();
		property.propertyIndex.saveTheScreen();
		property.switchToPropertyIndex();

	}

	@Test(groups = { "VehicleRelatedTestCase" })
	public void police2017Sprint2Vehicle_148741() {

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Vehicle");
		loader.navigateToScreen("Vehicle/Boat Search");
		vehicle.switchToVehicleBoatSearch();
		Playback.controlReadyThreadWait();
		vehicle.vehicleBoatSearch.vehicleTab.enterAtVehicleNo();
		vehicle.vehicleBoatSearch.clickSearch();
		vehicle.vehicleBoatSearch.verifyAtVehicleNo(0);
		vehicle.vehicleBoatSearch.clickRowAtVehicleNo();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.clickMainTab();
		vehicle.vehicleBoatEntry.vehicleBoatEntryMainTab.doubleClickAtAssocNoUsingCallNo();

		records.switchToCallEntry();

		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.verifyAtPlate(1);
		records.switchToCallEntry();
		records.callEntry.closeScreen();

		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.closeScreen();

	}

	@Test(groups = { "VehicleRelatedTestCase" }) // Vijay
	public void verifyCallVehicleDetailsFromTowEntryScreen_259717(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "259717");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();

		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.enterAtVehicleNumber();
		records.callEntry.vehicleTab.enterAtState();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.selectInsuranceCompany();
		vehicle.vehicleBoatEntry.clickMainTab();
		vehicle.vehicleBoatEntry.vehicleBoatEntryMainTab.enterNameID();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.clickSelectButton();// Changed
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.enterNCICField();
		records.callEntry.vehicleTab.selectAtActivity();
		records.callEntry.vehicleTab.EnterOtherVehicleInformation();
		records.callEntry.vehicleTab.clickAddButton();
		records.callEntry.vehicleTab.InternalSave();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.verifyTowRowIsEmptyInGrid();
		records.callEntry.vehicleTab.clickTowCellInGrid();
		tow.switchToTowEntry();
		tow.towEntry.verifyAtCallNo();
		tow.towEntry.verifyAtCaseNo();
		tow.towEntry.verifyAtCallDateTime();
		tow.towEntry.selectEquipmentUsed();
		tow.towEntry.tabTowRequestDateTime();
		tow.towEntry.selectWrecker();
		tow.switchToTowEntry();
		tow.towEntry.saveNClose();// Changed
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.clickResetButton();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.verifyTowImageDisplayed();
		records.callEntry.vehicleTab.ClickAtActivityInGrid();
		/*
		 * records.callEntry.vehicleTab.verifyAtVehicle(); //verification is not
		 * possible in our product but in testcase they mentioned to verify, sent mail
		 * to developer but no responce records.callEntry.vehicleTab.verifyNCIC();
		 * records.callEntry.vehicleTab.verifyAtNameID();
		 * records.callEntry.vehicleTab.verifyOtherVehicleInformation();
		 */
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToVehicleTab();
		records.caseUpdate.caseUpdateVehicleTab.deleteExsistingRowInGrid();
		records.caseUpdate.caseUpdateVehicleTab.verifyTowEntryIsRetainedPopup();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();

		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.ClickAtActivityInGrid();
		records.callEntry.vehicleTab.enterAtVehicleNumber1();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.saveAndCloseScreen();// Changed
		vehicle.switchToVehicleBoatSearchHelpWindow();
		vehicle.vehicleBoatSearchHelpWindow.selectVehicle();

		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.clickAddButton();
		records.callEntry.vehicleTab.InternalSave();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.DeleteRowByAtActivity();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.InternalSave();

		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.ClickAtActivityInGrid();
		records.callEntry.vehicleTab.enterAtVehicleNumber1();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.saveAndCloseScreen();// Changed

		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.clickAddButton();
		records.callEntry.vehicleTab.InternalSave();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.DeleteRowByAtActivity();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.InternalSave();

		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.verifyRowCountIsZeroInGrid();

	}

	@Test(groups = { "GeoRelatedTestCase" }) // Oct Sprint 2 Automated By mahesha
	public void ValidatedIntersectionAddressSearchBringingCorrectAddressInthelist_257126(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "257126");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Geo");
		loader.navigateToScreen("Street Search");
		geo.switchToStreetSearchScreen();
		geo.streetSearch.clickAddNew();
		geo.switchToStreetEntry();
		geo.streetEntry.enterAtStreetName();
		geo.streetEntry.enterAtStreetType();
		geo.streetEntry.enterAtZipCode();
		geo.streetEntry.clickAddButton();
		geo.streetEntry.Save();
		geo.switchToStreetEntry();
		geo.streetEntry.closeStreetEntry();

		loader.navigateToScreen("Street Search");
		geo.switchToStreetSearchScreen();
		geo.streetSearch.enterAtStreetName();
		geo.streetSearch.enterAtStreetType();
		geo.streetSearch.clickSearchButton();
		geo.streetSearch.clickAtStreetName();
		geo.switchToAddressIntersection();
		geo.addressIntersection.enterAtFromAndToOddNumber();
		geo.addressIntersection.SelectAsOdd();
		geo.addressIntersection.clickAddButton();
		geo.addressIntersection.SaveScreen();
		geo.switchToAddressIntersection();
		geo.addressIntersection.CloseScreen();

		loader.navigateToScreen("Street Search");
		geo.switchToStreetSearchScreen();
		geo.streetSearch.clickAddNew();
		geo.switchToStreetEntry();
		geo.streetEntry.enterAtStreetName(1);
		geo.streetEntry.enterAtStreetType(1);
		geo.streetEntry.enterAtZipCode();
		geo.streetEntry.clickAddButton();
		geo.streetEntry.Save();
		geo.switchToStreetEntry();
		geo.streetEntry.closeStreetEntry();

		loader.navigateToScreen("Street Search");
		geo.streetSearch.reloadStreetSearch();
		geo.switchToStreetSearchScreen();
		geo.streetSearch.enterAtStreetName();
		geo.streetSearch.enterAtStreetType();
		geo.streetSearch.clickSearchButton();
		geo.streetSearch.SelectManageIntersection();
		geo.switchToAddressIntersection();
		geo.addressIntersection.enterAtInterStreet();
		geo.addressIntersection.clickAddButton();
		geo.addressIntersection.SaveScreen();
		geo.switchToAddressIntersection();
		geo.addressIntersection.CloseScreen();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.CallCompletionLocation();
		records.callEntry.enterCADDispositionAsI();
		records.callEntry.enterAtPrimeUnit();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		String callno = records.callEntry.readCallNo();
		records.callEntry.closeScreen();

		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.SelectLocationAsIntersection();
		records.callSearch.EnterAtStreet1();
		records.callSearch.EnterAtStreet2();
		records.callSearch.clickSearchButton();
		records.callSearch.VerifyCallNumberInGrid(callno);
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = { "GeoRelatedTestCase" }) // Automated by Stalin
	public void AddressMergefunctionality_260150(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "260150");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Geo");
		loader.navigateToScreen("Address Search");
		geo.switchToAddressSearchScreen();
		geo.addressSearch.enterAtAddress();
		geo.addressSearch.clickMergeAddressButton();
		geo.addressSearch.mergeAddressPopup.clickGetCountButton();
		geo.addressSearch.mergeAddressPopup.VerifyAtRecordCount();
		geo.addressSearch.mergeAddressPopup.EnterAtMergeToAddress();
		geo.addressSearch.mergeAddressPopup.verifyMergeAddressInfoButton();
		geo.addressSearch.mergeAddressPopup.verifyAtCSZ();
		geo.addressSearch.mergeAddressPopup.ClickMergeButton();
		geo.addressSearch.mergeAddressPopup.VerifyConfirmMessageThisProcessWillTakeSignificationAmoutOfTime();
		geo.addressSearch.mergeAddressPopup.VerifyMergeSuccessfulAcknowledge();
		geo.switchToAddressSearchScreen();
		geo.addressSearch.enterAtAddress();
		geo.addressSearch.verifyAcknowledgePremiseInactiveAddress();
		geo.switchToAddressSearchScreen();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.VerifyAtReportedLocation();
		records.callEntry.closeScreen();
		records.switchToCallSearch();
		records.callSearch.ClickResetButton();
		// 2nd scenario
		loader.navigateToModule("Geo");
		loader.navigateToScreen("Address Search");
		geo.switchToAddressSearchScreen();
		geo.addressSearch.ResetAddress();
		geo.addressSearch.enterAtAddress1();
		geo.addressSearch.clickMergeAddressButton();
		geo.addressSearch.mergeAddressPopup.EnterAtMergeToAddress1(); // update JsonData name
		geo.addressSearch.mergeAddressPopup.verifyAtCSZ();
		geo.addressSearch.mergeAddressPopup.ClickMergeButton();
		geo.addressSearch.mergeAddressPopup.VerifyConfirmMessageThisProcessWillTakeSignificationAmoutOfTime();
		geo.addressSearch.mergeAddressPopup.VerifyMergeSuccessfulAcknowledge();
		geo.switchToAddressSearchScreen();
		geo.addressSearch.enterAtAddress1();
		geo.addressSearch.verifyAcknowledgePremiseInactiveAddress();
		geo.switchToAddressSearchScreen();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.EnterAtCallNo1();
		records.switchToCallEntry();
		records.callEntry.verifyAtReportedLocation1();
		records.callEntry.closeScreen();
		records.switchToCallSearch();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = { "GeoRelatedTestCase" }) // Mithu q4 Sprint 2 //Mahesha
	public void AddressMergeWithApartment_257119(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "257119");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.tabTheCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();

		loader.navigateToModule("Geo");
		loader.navigateToScreen("Address Search");
		geo.switchToAddressSearchScreen();
		geo.addressSearch.enterAtAddress();
		geo.addressSearch.clickMergeAddressButton();
		geo.addressSearch.mergeAddressPopup.EnterAtMergeToAddress(0);
		geo.addressSearch.mergeAddressPopup.ClickMergeButton();
		geo.addressSearch.mergeAddressPopup.VerifyConfirmMessageThisProcessWillTakeSignificationAmoutOfTime();
		geo.addressSearch.mergeAddressPopup.VerifyMergeSuccessfulAcknowledge();
		geo.switchToAddressSearchScreen();
		geo.addressSearch.enterAtAddress1();
		geo.switchToPremiseHelpWindow();
		geo.premiseHelpWindow.enterValidPremise();
		geo.premiseHelpWindow.clickUseThisPremise();
		geo.switchToAddressSearchScreen();
		geo.addressSearch.verifyAtAddressBubbleDisplayed();

		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.caseUpdate.VerifyAtMergedToAddress();

	}

	@Test(groups = { "HomeRelatedTestCase" }) // Vijay
	public void verifyThatTheIncidentReportIsAllowingToApprove_256810(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "256810");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.switchToReportManager();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerfiyStatusAsApproved();
		records.switchToReportStatus();
		records.reportStatus.VerifyApprovedIncidentReportsButtons();
	}

	@Test(groups = { "HomeRelatedTestCase" }) // Vijay
	public void MyReportsMyHomeScreen_272998(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "272998");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.selectJurisAsBC();
		home.myHome.myReportsTab.verifyShownRecordsBelongsToBCInGrid();
		home.myHome.myReportsTab.selectOnHoldReportInGrid();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfSupplementalReportAsOnHold();
		records.reportStatus.close();
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.ClickShowMyItemsOnly();
		home.myHome.myReportsTab.ClickSearchButton();
		List<String> MyItems = home.myHome.myReportsTab.getOfficerColumnValues();
		home.myHome.myReportsTab.ClickShowMyItemsOnly();
		home.myHome.myReportsTab.ClickSearchButton();
		List<String> AllItems = home.myHome.myReportsTab.getOfficerColumnValues();
		home.myHome.myReportsTab.verifyOfficerColumnValuesareNotEqual(AllItems, MyItems);
		home.myHome.myReportsTab.ClickAddNewButton();
		records.switchToReportManager();
		records.reportManager.clickReset();
		records.reportManager.Close();
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myReportsTab.selectIncidentReportOnHoldTypeInGrid();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
	}

	@Test(groups = { "NamesRelatedTestCase" }) // Automated By Stalin
	public void VerifytoviewlogfilewithUCRline(ITestContext testContext) {
		testContext.setAttribute("testID", "251733");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Search");
		names.switchToArrestSearch();
		names.arrestSearch.clickAddnewButton();
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.enterAtCaseNo();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		// names.arrestEntry.arrestTab.enterAtIncidentLocation();//no need
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.selectOfficer1ID();
		names.switchToArrestEntry();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.tabTheCaseNoEntries();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectAtStatus();
		names.arrestEntry.chargeTab.selectAtAgencyAction();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.Save();
		names.switchToArrestEntry();
		names.arrestEntry.closeTheScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UCR");
		records.switchToUCR();
		// records.uCR.enterSubmissionPeriodAsCurrentDate();
		// records.uCR.verifyAllReportCheckboxChecked();
		records.uCR.ClickGenerateReportButton();
		records.switchToUCRReportPDF();
		Playback.driver.close();
		records.switchToUCR();
		records.uCR.ClickViewLogFileButton();
		Playback.driver.close();

	}

	@Test(groups = { "NamesRelatedTestCase" }) // Raga Ranjani

	public void Police2020DefectNamesModule_255527(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "255527");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Name Search");
		names.switchToNameSearch();
		names.nameSearch.SelectNameTypeAsO();
		names.nameSearch.EnterAtLastName();
		names.nameSearch.EnterAtFirstName();
		names.nameSearch.clickSearchButton();
		names.nameSearch.ClickAtNameID();
		names.switchToNameEntry();
		names.nameEntry.selectSetNameAsA();
		names.nameEntry.SaveNCloseScreen();
		objectIdentification.windowHandle.phoenixMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtNameID1();
		records.callEntry.callEntryNamesTab.SelectActivity();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.switchToUnitsTab();
		records.callEntry.callEntryUnitsTab.ClickEditButton();
		records.switchToCaseUnits();
		records.caseUnits.tabOutUnit();
		records.caseUnits.tabOutOfficer1();
		records.caseUnits.SaveCloseScreen();
		objectIdentification.windowHandle.phoenixMainWindow();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Entry");
		names.switchToArrestEntry();
		names.arrestEntry.EnterAtLastName();
		names.arrestEntry.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		names.switchToArrestEntry();
		// names.arrestEntry.ClickPopupCloseButton(); // popup not showing in arrest
		// entry window
		names.arrestEntry.arrestTab.enterAtCaseNo();
		names.arrestEntry.arrestTab.selectHow();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.tabTheCaseNoEntries();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.switchToArrestEntry();
		names.arrestEntry.Save();
		names.switchToArrestEntry();
		names.arrestEntry.ClickNameInfoButton();
		names.switchToNameEntry();

	}

	@Test(groups = { "NamesRelatedTestCase" }) // Vijay
	public void verifyInNamesTabWhenchangingTheNameExactFlagIconColorShouldBeShown_256421(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "256421");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Names");
		loader.navigateToScreen("Name Search");

		names.switchToNameSearch();
		names.nameSearch.enterAtNameID();
		names.nameSearch.clickSearchButton();
		names.nameSearch.selectRowByAtAtypeNameID();
		names.switchToNameEntry();
		names.nameEntry.switchToNameEntryFlagTab();
		names.nameEntry.nameEntryFlagTab.ClickAddNewButton();
		names.nameEntry.nameEntryFlagTab.SelectFlagAsArmedDangerous();
		names.nameEntry.nameEntryFlagTab.CheckCriticalCheckBox();
		names.nameEntry.nameEntryFlagTab.EnteredBy();
		names.nameEntry.nameEntryFlagTab.EnterExpiredDate();
		names.nameEntry.nameEntryFlagTab.EnterActiveDate();
		names.nameEntry.nameEntryFlagTab.EnterAuthorizedBy();
		names.nameEntry.nameEntryFlagTab.EnterComment();
		names.nameEntry.nameEntryFlagTab.ClickAddButton();
		names.switchToNameEntry();
		names.nameEntry.SaveNCloseScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		names.switchToNameSearch();
		names.nameSearch.ClickBackButton();
		names.nameSearch.ClickResetButton();
		names.nameSearch.EnterAtBNameID();
		names.nameSearch.clickSearchButton();
		names.nameSearch.selectRowByAtBtypeNameID();
		names.switchToNameEntry();
		names.nameEntry.switchToNameEntryFlagTab();
		names.nameEntry.nameEntryFlagTab.ClickAddNewButton();
		names.nameEntry.nameEntryFlagTab.SelectFlagAsArmedDangerous();
		names.nameEntry.nameEntryFlagTab.EnteredBy();
		names.nameEntry.nameEntryFlagTab.EnterExpiredDate();
		names.nameEntry.nameEntryFlagTab.EnterActiveDate();
		names.nameEntry.nameEntryFlagTab.EnterAuthorizedBy();
		names.nameEntry.nameEntryFlagTab.EnterComment();
		names.nameEntry.nameEntryFlagTab.ClickAddButton();
		names.switchToNameEntry();
		names.nameEntry.SaveNCloseScreen();
		objectIdentification.windowHandle.switchToMainWindow();

		names.switchToNameSearch();
		names.nameSearch.ClickBackButton();
		names.nameSearch.enterAtNameID1();
		names.nameSearch.clickSearchButton();
		names.nameSearch.selectRowByAtJtypeNameID();
		names.switchToNameEntry();
		names.nameEntry.switchToNameEntryFlagTab();
		names.nameEntry.nameEntryFlagTab.ClickAddNewButton();
		names.nameEntry.nameEntryFlagTab.SelectFlagAsArmedDangerous();
		names.nameEntry.nameEntryFlagTab.CheckCriticalCheckBox();
		names.nameEntry.nameEntryFlagTab.EnteredBy();
		names.nameEntry.nameEntryFlagTab.EnterExpiredDate();
		names.nameEntry.nameEntryFlagTab.EnterActiveDate();
		names.nameEntry.nameEntryFlagTab.EnterAuthorizedBy();
		names.nameEntry.nameEntryFlagTab.EnterComment();
		names.nameEntry.nameEntryFlagTab.ClickAddButton();
		names.switchToNameEntry();
		names.nameEntry.SaveNCloseScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		names.switchToNameSearch();
		names.nameSearch.ClickBackButton();
		names.nameSearch.ClickResetButton();
		names.nameSearch.EnterAtNameID2();
		names.nameSearch.clickSearchButton();
		names.nameSearch.selectRowByAtOtypeNameID();
		names.switchToNameEntry();
		names.nameEntry.switchToNameEntryFlagTab();
		names.nameEntry.nameEntryFlagTab.ClickAddNewButton();
		names.nameEntry.nameEntryFlagTab.SelectFlagAsArmedDangerous();
		names.nameEntry.nameEntryFlagTab.EnteredBy();
		names.nameEntry.nameEntryFlagTab.EnterExpiredDate();
		names.nameEntry.nameEntryFlagTab.EnterActiveDate();
		names.nameEntry.nameEntryFlagTab.EnterAuthorizedBy();
		names.nameEntry.nameEntryFlagTab.EnterComment();
		names.nameEntry.nameEntryFlagTab.ClickAddButton();
		names.switchToNameEntry();
		names.nameEntry.SaveNCloseScreen();
		objectIdentification.windowHandle.switchToMainWindow();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.enterReceivedSourceAs9();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.reportedDate();
		records.callEntry.reportedTime();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.enterAtLocation1();
		records.callEntry.enterCADDispositionAsI();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectAtActivity();
		records.callEntry.callEntryNamesTab.verifyNameInfoIconAsRed();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtBNameID();
		records.callEntry.callEntryNamesTab.selectAtActivity1();
		records.callEntry.callEntryNamesTab.verifyNameInfoIconAsYellow();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtNameID1();
		records.callEntry.callEntryNamesTab.selectAtActivity2();
		records.callEntry.callEntryNamesTab.verifyNameInfoIconAsRed();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.enterAtNameID2();
		records.callEntry.callEntryNamesTab.selectAtActivity3();
		records.callEntry.callEntryNamesTab.verifyNameInfoIconAsYellow();
		records.callEntry.callEntryNamesTab.clickAddNameButton();

	}

	@Test(groups = { "NamesRelatedTestCase" }) // Vijay
	public void VerifyApplicationOpeningArresSearchScreenWhenExisitngArrestEntryAvailableForTheCase_261991(
			ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "261991");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		String caseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.verifyAtCaseNo(caseNo);
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.EnterOffenderID();
		names.arrestEntry.arrestTab.SelectAtArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.verifyAtCaseNo(caseNo);
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.chargeTab.enterAtCharge1();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.randomKPIHelpSelect();
		names.switchToArrestEntry();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.enterCountAs2();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.saveScreen();
		names.switchToArrestEntry();
		String arrestNo = names.arrestEntry.readArrestNo();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Search");
		names.switchToArrestSearch();
		names.arrestSearch.EnterArrestNo(arrestNo);
		names.arrestSearch.ClickClearDateButton();
		names.arrestSearch.ClickSearchButton();
		names.arrestSearch.VerifyRowCount();

	}

	@Test(groups = { "NamesRelatedTestCase" }) // Q4 sprint 5 Automated by Mahesha
	public void VerifyApplicationAllowingToSelectNameFromlatest24HourActivityNameWindow_261990(
			ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "261990");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		String caseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();

		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.clickAddButton();

		records.caseNames.EnterAtLastName();
		records.caseNames.EnterAtFirstName();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCaseNames();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.VerifyCasePopupAtName1(0);
		names.arrestEntry.VerifyCasePopupAtName(1);
		names.arrestEntry.ClickPopupCloseButton();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.arrestTab.verifyAtCaseNo(caseNo);
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.EnterOffenderID();
		names.arrestEntry.arrestTab.SelectAtArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.verifyAtCaseNo(caseNo);
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.saveScreen();
		names.switchToArrestEntry();
		String arrestNo = names.arrestEntry.readArrestNo();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Search");
		names.switchToArrestSearch();
		names.arrestSearch.EnterArrestNo(arrestNo);
		names.arrestSearch.ClickClearDateButton();
		names.arrestSearch.ClickSearchButton();
		names.arrestSearch.VerifyRowCount();

	}

	@Test(groups = { "NamesRelatedTestCase" }) // Q4 sprint 5 Automated by Mahesha
	public void VerifyApplicationOpeningArresSearchScreenWhenExisitngArrestEntryAvailableForTheCase_261989(
			ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "261989");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		String caseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.arrestTab.verifyAtCaseNo(caseNo);
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.EnterOffenderID();
		names.arrestEntry.arrestTab.SelectAtArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.verifyAtCaseNo(caseNo);
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.saveScreen();
		names.switchToArrestEntry();
		String arrestNo = names.arrestEntry.readArrestNo();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Search");
		names.switchToArrestSearch();
		names.arrestSearch.EnterArrestNo(arrestNo);
		names.arrestSearch.ClickClearDateButton();
		names.arrestSearch.ClickSearchButton();
		names.arrestSearch.VerifyRowCount();
		names.switchToArrestSearch();
	}

	@Test(groups = { "NamesRelatedTestCase" })
	public void VerifyThePopupMessageAppearsNIBRSOffenseArrestentry_243231(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "243231");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Entry");
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.SelectCase();
		records.switchToCaseSearchWindow();
		records.caseSearch.clickSearch();
		records.caseSearch.SelectRowInGrid(0);
		names.switchToArrestEntry();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.VerifyAtOfficer1();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.tabTheCaseNoEntries();
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectAtStatus();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.saveScreen();
		names.switchToArrestEntry();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.DoubleClickAtChargeInGrid();
		names.switchToArrestEntryChargeWindow();
		names.arrestEntryForCharge.EnterAtmodifyCharge();
		names.switchToArrestEntryChargeWindow();
		names.arrestEntryForCharge.clickAddButton();
		names.arrestEntryForCharge.ClickSaveNClose();
		names.switchToArrestEntry();
		try {
			names.arrestEntry.saveScreen();
			objectIdentification.windowHandle.switchToMainWindow();
		} catch (Exception e) {

			names.arrestEntry.chargeTab.Verify6529WarningNIBRSOffenseNotEnteredForChargeAckMsg();
			names.switchToArrestEntry();
			names.arrestEntry.chargeTab.ClickAtCharge1InGrid();
			names.arrestEntry.chargeTab.SelectNIBRS();
			names.arrestEntry.chargeTab.clickTheAddButton();
			names.arrestEntry.saveScreen();
		}
	}

	@Test(groups = { "2021DefectTestCases5" }) // Automated by Stalin Q2 S4 Run in 45
	public void ExpungeTheProsecutorArrestRecord_276783(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "276783");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Entry");
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.enterAtCaseNo();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectAtHow();
		names.arrestEntry.arrestTab.enterAtOfficer1();
		names.arrestEntry.arrestTab.SelectAtArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.switchToArrestEntry();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.tabTheCaseNoEntries();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.TabTheCount();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.switchToArrestEntry();
		names.arrestEntry.saveScreen();
		names.switchToArrestEntry();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.clickCaseInfoButton();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyAtNameInGrid();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		names.switchToArrestEntry();
		names.arrestEntry.clickExpungementIcon();
		names.switchToArrestExpungementScreen();
		names.arrestExpungement.clickOneOrMoreCharge();
		names.arrestExpungement.verifyAtCaseNoInGrid();
		names.arrestExpungement.verifyAtChargeInGrid();
		names.arrestExpungement.enterReason();
		names.arrestExpungement.clickExpungeButton();
		names.arrestExpungement.clickYesExpungeButton();
		settings.switchToPhoenixAuthenticatorWindow();
		settings.phoenixAuthenticatorWindow.enterAtPassword();
		settings.phoenixAuthenticatorWindow.clickAcceptButton();
		names.switchToArrestExpungementScreen();
		names.arrestExpungement.verifyPopupMessageWithLabelTextAndClickClose();
		names.switchToArrestEntry();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.clickCaseInfoButton();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.verifyRowCountAs0();
		records.switchToCaseUpdate();

	}

	@Test(groups = { "2020DefectCodedCFSJobJuris" }, priority = 5) // Automated by Stalin
	public void SMTPConfiguration_257055(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "257055");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter200AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter203AsSSL();
		settings.switchToSystemParamter();
		loader.navigateToScreen("Jobs");
		settings.switchToJobs();
		settings.jobsScreen.enterAtJobName();
		settings.jobsScreen.clickSearch();
		settings.jobsScreen.clickAtJobNameInGrid();
		settings.switchToJobEntry();
		settings.jobEntry.clickNotificationTab();
		settings.jobEntry.notificationJobScreenTab.enterAtNotifyEmail();
		settings.jobEntry.notificationJobScreenTab.clickAdd();
		settings.jobEntry.saveScreen();
		settings.switchToJobEntry();
		settings.jobEntry.clickRunJobButton();
		settings.jobEntry.close();
		settings.switchToJobs();
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter200AsTrue();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter203AsNonSSL();
		settings.switchToSystemParamter();
		loader.navigateToScreen("Jobs");
		settings.switchToJobs();
		settings.jobsScreen.clearJobName();
		settings.jobsScreen.enterAtJobName();
		settings.jobsScreen.clickSearch();
		settings.jobsScreen.clickAtJobNameInGrid();
		settings.switchToJobEntry();
		settings.jobEntry.clickNotificationTab();
		settings.jobEntry.notificationJobScreenTab.enterAtNotifyEmail();
		settings.jobEntry.notificationJobScreenTab.clickAdd();
		settings.jobEntry.saveScreen();
		settings.switchToJobEntry();
		settings.jobEntry.clickRunJobButton();
		settings.jobEntry.close();
		settings.switchToJobs();
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter200AsFalse();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter203AsSSL();
		settings.switchToSystemParamter();
		loader.navigateToScreen("Jobs");
		settings.switchToJobs();
		settings.jobsScreen.clearJobName();
		settings.jobsScreen.enterAtJobName();
		settings.jobsScreen.clickSearch();
		settings.jobsScreen.clickAtJobNameInGrid();
		settings.switchToJobEntry();
		settings.jobEntry.clickNotificationTab();
		settings.jobEntry.notificationJobScreenTab.enterAtNotifyEmail();
		settings.jobEntry.notificationJobScreenTab.clickAdd();
		settings.jobEntry.saveScreen();
		settings.switchToJobEntry();
		settings.jobEntry.clickRunJobButton();
		settings.jobEntry.close();
		settings.switchToJobs();
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter200AsFalse();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter203AsNonSSL();
		settings.switchToSystemParamter();
		loader.navigateToScreen("Jobs");
		settings.switchToJobs();
		settings.jobsScreen.clearJobName();
		settings.jobsScreen.enterAtJobName();
		settings.jobsScreen.clickSearch();
		settings.jobsScreen.clickAtJobNameInGrid();
		settings.switchToJobEntry();
		settings.jobEntry.clickNotificationTab();
		settings.jobEntry.notificationJobScreenTab.enterAtNotifyEmail();
		settings.jobEntry.notificationJobScreenTab.clickAdd();
		settings.jobEntry.saveScreen();
		settings.switchToJobEntry();
		settings.jobEntry.clickRunJobButton();
		settings.jobEntry.close();
		settings.switchToJobs();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();

		records.callSearch.clickSearchButton(); // error detected by dinesh
		records.callSearch.ClickPrintIcon(); // changes made in ui
		home.switchToSelectReport();
		home.selectReport.selectDBRCitationWrittenCountsCheckboxInGrid();
		home.switchToSelectReport(); // added by dinesh
		home.selectReport.clickEmailReportButton();
		Playback.gridLoadThreadWait();
		Playback.gridLoadThreadWait();
		home.selectReport.clickIndividualReportButton(); // error detected by dinesh
		home.switchToPrintEmailScreen();
		home.printEmailScreen.enterAtFrom();
		home.printEmailScreen.enterAtTo();
		home.printEmailScreen.enterAtSubject();
		home.printEmailScreen.enterMessage();
		home.printEmailScreen.ClickSendEmail();
		objectIdentification.windowHandle.switchToMainWindow();
	}

	@Test(groups = { "2020DefectQAForm" }) // Vijay // Q2 Sprint 3
	public void verifyQAFormDetailsAreSavedInTheReportScreen_278640(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "278640");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("Coded");
		settings.switchToCodedScreen();
		settings.coded.enterAtCodeID();
		settings.coded.clickSearchButton();
		settings.coded.clickRowByAtCodeID();
		settings.switchToSharedCodes();
		settings.sharedCodes.enterAtCodeValue();
		settings.sharedCodes.clickSearchButton();
		settings.sharedCodes.SelectAtCodeValueDescription();
		settings.sharedCodes.clickAddButtonInPopUp();
		settings.switchToSharedCodes();
		settings.sharedCodes.closeScreen();
		loader.navigateToScreen("QA Forms");
		settings.switchToQAForms();
		settings.qaForms.enterAtFormNameEdit();
		settings.qaForms.clickOnSearch();
		settings.qaForms.selectCheckBoxOfTheRowByFormName();
		settings.qaForms.clickManageRepository();
		qA.switchToQuestionnaireRepository();
		qA.questionnarieRepository.verifyAtRepositoryIDAddedInGrid();
		qA.questionnarieRepository.clickAtRepositoryIDInGrid();
		qA.questionnarieRepository.selectAtPDFAttachmentComboBox();
		qA.questionnarieRepository.clickAddButton();
		qA.questionnarieRepository.saveNClose();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		Playback.popupThreadWait();
		Playback.popupThreadWait();
		records.switchToReportStatus();
		records.reportStatus.switchToReportFrame();
		records.reportStatus.enterLastNameAtQAFormreport();
		records.reportStatus.enterFirstNameAtQAFormreport();
		records.reportStatus.clickSaveExitButton();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.SaveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		Playback.popupThreadWait();
		Playback.popupThreadWait();
		records.switchToReportStatus();
		records.reportStatus.switchToReportFrame();
		records.reportStatus.verifyLastNameAtQAFormreport();
		records.reportStatus.verifyFirstNameAtQAFormreport();

	}

	@Test(groups = { "2020DefectQAForm" }) // 2021 Q1 Sprint 1 Automated by Mahesha
	public void VerifyApplicationIsListingQAformsInDropdownWhenReportEntryRepositoryMapped_262005(
			ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "262005");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("QA Forms");
		settings.switchToQAForms();
		settings.qaForms.enterAtFormRef();
		settings.qaForms.clickOnSearch();
		settings.qaForms.selectCheckBoxOfTheRowByFormRefNO();
		settings.qaForms.clickManageRepository();
		qA.switchToQuestionnaireRepository();
		qA.questionnarieRepository.EnterAtRepositoryID();
		qA.questionnarieRepository.clickAddButton();
		qA.questionnarieRepository.save();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.enterReportDescription();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.ClickQaFormButton();

		qA.SwitchToQuestionnarie();
		qA.questionnarie.SelectFormAsTest();
		qA.questionnarie.ClickFillFormButton();
		qA.SwitchToQuestionDataEntry();
		qA.questionDataEntry.TabOutPF();
		qA.questionDataEntry.SaveNClose();

		qA.SwitchToQuestionnarie();
		qA.questionnarie.ClickRefreshButton();
		qA.questionnarie.VerifySingleQAFormInGrid();

	}

	// MithunUpdate

	@Test(groups = { "2020DefectQAForm" }) // Vijay
	public void verifyTheReportDetailsButtonIsDisplayedInPropertyEntryScreenWhenWeCreateInIncidentReport_275942(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "275942");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.ClickAddNew();
		records.switchToWalkInEntry();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtNameID();
		records.walkInEntry.selectAtActivity();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton(); // Issue in Product need to change as click in grid //
																// directly
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.selectReasonAsStolen();
		property.propertyEntry.propertyEntryMainTab.SelectPropertyAsAircraft();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterQuantityAs10();
		property.propertyEntry.propertyEntryMainTab.enterValueAs28500();
		property.propertyEntry.propertyEntryMainTab.EnterAtLastName();
		property.propertyEntry.propertyEntryMainTab.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyReportDetailsButtonIsNotDisplayed();
		String caseNo = property.propertyEntry.readCaseNo();
		String propertyNo = property.propertyEntry.readPropertyNo();
		property.propertyEntry.closeTheScreen();
		loader.navigateToModule("Property");
		loader.navigateToScreen("Property Edit/Entry");
		property.switchToPropertyEditEntry();
		property.propertyEditEntry.enterCaseNumberByActiveData(caseNo);
		property.propertyEditEntry.selectRowByAtPropertyNo(propertyNo);
		property.switchToPropertyEntry();
		property.propertyEntry.verifyReportDetailsButtonIsNotDisplayed();
		property.propertyEntry.closeTheScreen();
		loader.navigateToScreen("Property Search");
		property.switchToPropertySearch();
		property.propertySearch.clickSearch();
		property.propertySearch.clickAtCaseNoInGrid(caseNo);
		property.switchToPropertyIndex();
		property.propertyIndex.verifyReportDetailsButtonIsNotDisplayed();
	}

	@Test(groups = { "2020DefectTestcases5" }) // Vijay // 2021 Q2 Sprint 6 Testcase
	public void verifyPropertyReportIsLockedBasedOnSystemParameter738OptionalWhenApproved_275943(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "275943");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.ClickAddNew();
		records.switchToWalkInEntry();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtNameID();
		records.walkInEntry.selectAtActivity();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.selectReasonAsStolen();
		property.propertyEntry.propertyEntryMainTab.SelectPropertyAsAircraft();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterQuantityAs10();
		property.propertyEntry.propertyEntryMainTab.enterValueAs28500();
		property.propertyEntry.propertyEntryMainTab.EnterAtLastName();
		property.propertyEntry.propertyEntryMainTab.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveNClose();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.closeTheScreen();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectCrimeAgainstAsProperty();
		records.fTC.SelectPropertyLossAsStolen();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.switchToReportManager();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.verifyIncidentReportStatusAsApproved();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.SelectActionAsLock();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.verifyIncidentReportStatusAsLocked();

	}

	@Test(groups = { "2020DefectTestcases5" }) // Vijay // 2021 Q2 Sprint 6
	public void verifyStolenPropertyIsAbleToEnterInPropertyEditEntryScreen_275944(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "275944");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Property");
		loader.navigateToScreen("Property Edit/Entry");
		property.switchToPropertyEditEntry();
		property.propertyEditEntry.enterAtCaseNumberAndTab();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.selectReasonAsStolen();
		property.propertyEntry.propertyEntryMainTab.SelectPropertyAsAircraft();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterQuantityAs10();
		property.propertyEntry.propertyEntryMainTab.enterValueAs28500();
		property.propertyEntry.propertyEntryMainTab.EnterAtLastName();
		property.propertyEntry.propertyEntryMainTab.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		property.switchToPropertyEntry();
		property.propertyEntry.ClickSubmitButton();
		property.propertyEntry.verifyConfirmSubmitMessageAsNo();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyReportDetailsIsDisplayed();
		property.propertyEntry.clickReportDetailsButton();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.switchToReportManager();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsSubmittedInMenuBar();

	}

	@Test(groups = { "2020DefectQAForm" }) // Q2 Sprint 3
	public void verifyQAFormDetailsAreSavedInTheReport_278651(ITestContext testcontext) throws IOException {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "278651");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.ClickQaFormButton();
		qA.SwitchToQuestionnarie();
		qA.questionnarie.selectAtForm();
		qA.SwitchToQuestionDataEntry();
		qA.questionDataEntry.TabOutPF();
		qA.questionDataEntry.clickYesButtonInQuestion1();
		qA.questionDataEntry.clickSaveNCloseButton();
		qA.SwitchToQuestionnarie();
		qA.questionnarie.ClickRefreshButton();
		qA.questionnarie.CloseTheScreen();
		records.switchToReportStatus();
		objectIdentification.readPDF.DownloadReports();
		objectIdentification.readPDF.SendLocalDownloadedFileToServerPath("278651");
		objectIdentification.readPDF.ReadPDF(" Names related to Arrest?");

	}

	@Test(groups = { "2020DefectTestcases5" }) // Vijay // Q2 Sprint 3
	public void verifyQAFormIsDisplayedInViewCaseFileOption_278653(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "278653");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtNameID();
		records.walkInEntry.selectAtActivity();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		Playback.popupThreadWait();
		Playback.popupThreadWait();
		records.switchToReportStatus();
		records.reportStatus.switchToReportFrame();
		records.reportStatus.enterLastNameAtQAFormreport();
		records.reportStatus.enterFirstNameAtQAFormreport();
		records.reportStatus.clickSaveExitButton();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.SaveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.ClickViewCaseFileButton();
		records.caseUpdate.reportingTab.verifyQAFormEntryInViewCaseFilePopup();
		records.caseUpdate.reportingTab.clickCancelInViewCaseFilePopup();
		records.switchToCaseUpdate();

	}

	@Test(groups = { "2020DefectTestcases5" }) // Mithun
	public void VerifythedifferentQAformisaddedinthereportfordifferentreport_276767(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "276767");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();

		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();

		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolation();
		records.aCD.Save();

		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.arrestTab.VerifyAtCaseNo();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.arrestTab.selectHow();
		names.arrestEntry.arrestTab.EnterOffenderID();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.VerifyAtCaseNo();
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.arrestEntry.saveScreen();
		names.switchToArrestEntry();
		names.arrestEntry.ClickAllTabs();
		names.arrestEntry.saveScreen();

		records.reportStatus.ClickArrestButton();
		names.switchToArrestSearchHelpWindow();
		names.arrestSearchHelpWindow.ClickAddNew();
		names.switchToArrestEntry();
		names.arrestEntry.VerifyPopupAtCharge(0);
		names.arrestEntry.enterAtJNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.selectHow();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.tabTheArrestDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.ClickAtChargeInGrid();

		names.arrestEntry.ClickPopupCopyButton();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.VerifyAtChargeInGrid(0);

	}

	@Test(groups = { "2020DefectQAForm" }) // Mithun
	public void VerifythedifferentQAformisaddedinthereportfordifferentreport_276776(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "276776");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();

		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();

		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();

		records.switchToReportStatus();
		records.reportStatus.ClickQaFormButton();
		qA.SwitchToQuestionnarie();
		qA.questionnarie.SelectFormAsTest();
		qA.questionnarie.ClickFillFormButton();
		qA.SwitchToQuestionDataEntry();
		qA.questionDataEntry.TabOutPF();
		qA.questionDataEntry.clickSaveNClose();

		records.switchToReportStatus();
		records.reportStatus.ClickQaFormButton();
		qA.SwitchToQuestionnarie();
		qA.questionnarie.verifyFormNameContainingInGrid(1);

	}

	@Test(groups = { "2020DefectQAForm" }) // Mithun
	public void VerifythedifferentQAformisaddedinthereportfordifferentreport_276777(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "276777");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();

		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();

		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();

		records.switchToReportStatus();
		records.reportStatus.ClickQaFormButton();
		qA.SwitchToQuestionnarie();
		qA.questionnarie.SelectFormAsTest();
		qA.questionnarie.ClickFillFormButton();
		qA.SwitchToQuestionDataEntry();
		qA.questionDataEntry.TabOutPF();
		qA.questionDataEntry.clickSaveNClose();

		qA.SwitchToQuestionnarie();
		qA.questionnarie.SelectFormAsTest();
		qA.questionnarie.ClickFillFormButton();
		qA.SwitchToQuestionDataEntry();
		qA.questionDataEntry.TabOutPF();
		qA.questionDataEntry.clickSaveNClose();

		qA.SwitchToQuestionnarie();
		qA.questionnarie.ClickRefreshButton();
		qA.questionnarie.VerifyDoubleQAFormInGrid();

	}

	@Test(groups = { "2020DefectQAForm" }) // Mithun
	public void VerifythedifferentQAformisaddedinthereportfordifferentreport_276778(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "276778");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();

		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();

		records.switchToReportStatus();
		records.reportStatus.ClickQaFormButton();
		qA.SwitchToQuestionnarie();
		qA.questionnarie.SelectFormAsTest();
		qA.questionnarie.ClickFillFormButton();
		qA.SwitchToQuestionDataEntry();
		qA.questionDataEntry.TabOutPF();
		qA.questionDataEntry.clickSaveNClose();

		records.switchToReportStatus();
		records.reportStatus.ClickQaFormButton();
		qA.SwitchToQuestionnarie();
		qA.questionnarie.SelectFormAsTest();
		qA.questionnarie.ClickFillFormButton();
		qA.SwitchToQuestionDataEntry();
//						qa.questionDataEntry.EnterAtPF();
		qA.questionDataEntry.clickSaveNClose();

		qA.SwitchToQuestionnarie();
		qA.questionnarie.ClickRefreshButton();
		qA.questionnarie.VerifyDoubleQAFormInGrid();

	}

	@Test(groups = { "2020DefectTestcases5" }) // Mithun
	public void VerifySignatureAuthentication_276782(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "276782");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myApprovalTab.SelectStatusAsSubmitted();
		home.myHome.myApprovalTab.SelectAtItemTypeUsingItemTypeInGrid();
		records.switchToReportManager();
		records.reportManager.VerifyAtType();
		records.reportManager.Close();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myApprovalTab.SelectStatusAsSubmitted();
		home.myHome.myApprovalTab.SelectAtItemTypeUsingItemType1InGrid();
		records.switchToReportManager();
		records.reportManager.VerifyAtType1();
		records.reportManager.Close();
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportApprovalTab();
		home.myHome.myApprovalTab.SelectStatusAsSubmitted();
		home.myHome.myApprovalTab.SelectAtItemTypeUsingItemType2InGrid();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.VerifyAtType2();
		records.reportManager.Close();
		home.switchToMyHomeScreen();

	}

	@Test(groups = { "2020DefectTestcases5" }) // Mohan 5/18/2021
	public void CreateUOFEntryFromCaseUpdate_273005(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273005");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUseOfForceTab();
		records.caseUpdate.caseUpdateUseOfForceTab.clickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.EnterAtNameID();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.selectAtWasSubjectUnderTheInfluence();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.selectAtListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.Save();
		records.uOFEntry.ClickApprovalTab();
		records.uOFEntry.approvalTab.selectNewActionAsSendForApproval();
		records.uOFEntry.approvalTab.tabDateAndTime();
		records.uOFEntry.approvalTab.saveInApprovalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUseOfForceTab();
		records.caseUpdate.caseUpdateUseOfForceTab.VerifyAtOfficerInGrid(0);

	}

	@Test(groups = { "2020DefectTestcases5" }) // Mohan

	public void NewSearchOptions_273492(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273492");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterToDateAsCurrentDate();
		records.caseSearch.clickShowOnlyCasesWithReportsCheckBox();
		records.caseSearch.clickSearch();
		records.caseSearch.clickReportIconInGrid(0);
		records.switchToReportStatus();
		records.switchToCaseSearch();
		records.caseSearch.clickBackButton();
		records.caseSearch.clickShowOnlyCasesWithReportsCheckBox();
		records.caseSearch.clickNotReviewedOnlyCheckBox();
		records.caseSearch.clickSearch();
		records.caseSearch.verifyReportStatusIconInGrid();
		records.caseSearch.verifyReportStatusIconPresentInGrid();

	}

	@Test(groups = { "2020DefectTestcases5" }) // Mohan

	public void SearchBasedOnCrimeType_273493(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273493");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.ClickSaveWithConfirm();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.selectAtPoliceForceUsed();
		records.aCD.clickSave();

		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.SaveScreen();
		records.fTC.CloseScreen();
	}

	@Test(groups = { "2020DefectTestcases5" }) // Mohan
	public void CreateUOFEntryFromCaseUpdate_273501(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273501");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.ClickSaveWithConfirm();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.selectAtPoliceForceUsed();
		records.aCD.clickSave();

		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.saveNClose();
		records.switchToACD();

	}

	@Test(groups = { "2020DefectTestcases5" }) // Mohan Added test data need to verify
	public void EvidenceOnCaseUpdateTextEnteredIsNotRetained_278657(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "278657");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		popup.kPICodedLookup.clickAtDescription();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtWeaponsForceUsed();
		records.fTC.SaveScreen();
		records.switchToFTC();
		records.fTC.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.selectEvidenceAsOther();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtEvidenceText();
		records.caseUpdate.caseUpdateCaseDataTab.clickEvidenceAddButton();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();

	}

	@Test(groups = { "2020DefectTestcases5" }) // Mohan
	public void VerifyUserCanChangeValueOfPropertyAfterPropertyReportSubmittedOrApproved_280019(
			ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "280019");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.ClickSaveWithConfirm();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.selectAtPoliceForceUsed();
		records.aCD.clickSave();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.selectAtCriminalActivity();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.SaveScreen();
		records.fTC.CloseScreen();

	}

	// Automated by TesterName :Mohan Date :Aug 25 2021 Sprint:-
	@Test(groups = { "2020DefectTestcases5" })
	public void VerifyTowZoneFieldVisible_281028(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "281028");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.CallCompletionLocation();
		records.callEntry.VerifyAtCallcompletionLocation();
		records.callEntry.SelectCADDispositionAsI();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.clickMainTab();
		records.callEntry.callEntryMainTab.verifyZoneFieldPresent();
		records.callEntry.callEntryMainTab.verifyZoneFieldDisabled();

	}

	// Automated by TesterName :Mohan Date :Aug 25 2021 Sprint:-
	@Test(groups = { "2020DefectTestcases5" })
	public void VerifyTowZoneFieldValueFetchedFromReportedLocation_281029(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "281029");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.CallCompletionLocation();
		records.callEntry.VerifyAtCallcompletionLocation();
		records.callEntry.SelectCADDispositionAsI();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.verifyLocationInfoIconIsDisplayed();
		records.callEntry.clickLocationInfoIcon();

		geo.switchToAddressSearchHelpWindow();
		geo.addressSearch.ClickAddressButton();
		geo.switchToAddressIntersection2040();
		geo.addressIntersection2040.switchToPoliceTab();
		geo.addressIntersection2040.policeTab.EnterAtTowZone();
		geo.addressIntersection2040.policeTab.Save();
		geo.switchToAddressIntersection2040();
		geo.addressIntersection2040.SaveNClose();
		records.switchToCallEntry();
		records.callEntry.clickMainTab();
		records.callEntry.callEntryMainTab.verifyZoneFieldPresent();
		records.callEntry.callEntryMainTab.verifyZoneFieldDisabled();

	}

	// Automated by TesterName :Mohan Date :Sep 8 2021 Sprint:-
	@Test(groups = { "2020DefectTestcases5" })
	public void VerifyExpiryCheckBoxCallSearch_281520(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());

		testContext.setAttribute("testID", "281520");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		Playback.controlReadyThreadWait();
		records.callSearch.ClickDateResetButton();
		Playback.waitForControlReady();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.ClickVehicleLookupIcon();
		vehicle.switchToVehicleBoatSearchHelpWindow();
		vehicle.vehicleBoatSearch.clickAddVehicle();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.enterAtVinNo();
		vehicle.vehicleBoatEntry.clickFlagsTab();

		vehicle.vehicleBoatEntry.vehicleBoatEntryFlagTab.enterPreviousDateEntered();
		vehicle.vehicleBoatEntry.vehicleBoatEntryFlagTab.enterPreviousDateAsExpiryDate();
		vehicle.vehicleBoatEntry.vehicleBoatEntryFlagTab.selectAtFlag();
		vehicle.vehicleBoatEntry.vehicleBoatEntryFlagTab.clickAddButton();
		vehicle.vehicleBoatEntry.saveAndCloseScreen();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.selectAtActivity();
		records.callEntry.vehicleTab.clickAddButton();
		records.callEntry.vehicleTab.InternalSave();
		records.callEntry.save();
		records.switchToCallSearch();
		records.callSearch.enterAtVinNo();

		records.callSearch.selectAtVehicleFlag();
		records.callSearch.clickExpiredFlagCheckbox();
		records.callSearch.clickSearchButton();
		records.callSearch.VerifyAtCallNoInGrid(0);

	}

	@Test
	public void Records_272385(ITestContext testContext) {
		testContext.setAttribute("testID", "272385");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Names");
		loader.navigateToScreen("Arrest Search");

		names.switchToArrestSearch();
		names.arrestSearch.ClickResetButton();
		names.arrestSearch.EnterAtCaseNo();
		names.arrestSearch.ClickSearchButton();
		names.arrestSearch.SelectArrestByAtCaseNo();
		names.switchToArrestEntry();
		names.arrestEntry.clickExpungementIcon();
		names.switchToExpungement();
		names.expungement.EnterReason();
		names.expungement.clickExpungeButon();
		names.expungement.clickYesInExpungementConfirmPopup();
		settings.switchToPhoenixAuthenticatorWindow();
		settings.phoenixAuthenticatorWindow.enterAtPassword();
		settings.phoenixAuthenticatorWindow.clickAcceptButton();
		names.switchToExpungement();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();

	}

	@Test
	public void Records_273001(ITestContext testContext) {
		testContext.setAttribute("testID", "273001");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.ClickDomesticViolanceIconUsingVictim();
		records.caseNames.ClickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.SelectCFSAsHomicide();
		records.nameVictim.SelectDomesticViolation();
		records.nameVictim.ClickSaveButton();
		records.nameVictim.clickAddButton();
		records.switchToNameVictim();
		records.nameVictim.VerifyRedOffenderIcon(0);
		records.nameVictim.ClickOffenderIcon();
		records.switchToVictimOffender();
		records.victimOffender.SelectOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.ClickSaveButton();
		records.switchToNameVictim();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.Save();
		records.nameVictim.VerifyGreenOffenderIcon(0);
		records.nameVictim.saveNClose();
		records.switchToCaseNames();
		records.caseNames.clickPrint();

	}

	@Test // Mithun
	public void Records_274794(ITestContext testContext) {
		testContext.setAttribute("testID", "274794");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		// flow missing

	}

	@Test // Mithun
	public void VerifythedeletedpropertyisnotlistedinNIBRScheck_275259(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "275259");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();

		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();
		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();
		property.propertyEntry.propertyEntryMainTab.selectReasonAsStolen();
		property.propertyEntry.propertyEntryMainTab.SelectPropertyAsBicycles();
		property.propertyEntry.propertyEntryMainTab.enterDecriptionAs10Shirts();
		property.propertyEntry.propertyEntryMainTab.EnterValueAs100();
		property.propertyEntry.propertyEntryMainTab.enterOwnerName();

		loader.navigateToScreen("Property Edit/Entry");
		property.switchToPropertyEditEntry();

		property.propertyEditEntry.enterAtCaseNumberAndTab();
		property.propertyEditEntry.VerifyReasonAsDeleted(1);
		property.propertyEditEntry.VerifyRowviewedRedColor();

	}

	// Automated by:-Mahesha , Date :- 10/25/2021 , Quarter:-Q4 , Sprint:-2 ,
	// Module:- Records .

	@Test(priority = 1, groups = { "CallSummaryEnhancement" })
	public void VerifyPrimaryUnitPFcanaccessCallSummaryOncecallfinishedinthecad_273485(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "273485");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.ClickDateResetButton();
		records.callSearch.enterAtCallNo();
		// records.callSearch.clickSearchButton();
		// records.callSearch.ClickAtCallNoInGrid();
		records.switchToCallEntry();
		records.callEntry.swithchtoCallSummaryTab();
		records.callEntry.callSummaryTab.verifySaveAndResetButtonsDisabled();
		records.switchToCallEntry();
		records.callEntry.switchToApprovalTab();
		records.callEntry.callEntryApprovalTab.verifyAllTheFieldsDisabled();

	}

	// Automated by:-Mahesha , Date :- 10/26/2021 , Quarter:-Q4 , Sprint:-2 ,
	// Module:- Records .
	@Test(priority = 2, groups = { "CallSummaryEnhancement" })
	public void VerifythePrimaryunitcanaccessthecallsummaryoncecallrestacked_273486(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "273486");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.ClickDateResetButton();
		records.callSearch.enterAtCallNo();
		// records.callSearch.clickSearchButton();
		// records.callSearch.ClickAtCallNoInGrid();
		records.switchToCallEntry();
		records.callEntry.switchToApprovalTab();
		records.callEntry.callEntryApprovalTab.verifyAllTheFieldsDisabled();
		records.switchToCallEntry();
		records.callEntry.swithchtoCallSummaryTab();
		records.callEntry.callSummaryTab.selectTemplate();
		records.callEntry.callSummaryTab.clickLoadButton();
		records.callEntry.callSummaryTab.saveCallsummaryTab();
		records.switchToCallEntry();
		records.callEntry.save();
		records.callEntry.switchToApprovalTab();
		records.callEntry.callEntryApprovalTab.verifyAllTheFieldsEnabled();

	}

	// Automated by:-Mahesha , Date :- 10/26/2021 , Quarter:-Q4 , Sprint:-2 ,
	// Module:- Records .
	@Test(priority = 3, groups = { "CallSummaryEnhancement" })
	public void VerifytheapplicationNotallowtoeditthecallsummaryoncecallapproved_273487(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "273487");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.ClickDateResetButton();
		records.callSearch.enterAtCallNo();
		// records.callSearch.clickSearchButton();
		// records.callSearch.ClickAtCallNoInGrid();
		records.switchToCallEntry();
		records.callEntry.switchToApprovalTab();
		records.callEntry.callEntryApprovalTab.verifyAllTheFieldsEnabled();
		records.callEntry.callEntryApprovalTab.selectNewActionAsSendForApproval();
		records.callEntry.callEntryApprovalTab.tabDateAndTime();
		records.callEntry.callEntryApprovalTab.saveInApprovalTab();
		records.switchToCallEntry();
		records.callEntry.switchToApprovalTab();
		records.callEntry.callEntryApprovalTab.verifyAllTheFieldsEnabled();
		records.callEntry.callEntryApprovalTab.selectNewActionAsApprove();
		records.callEntry.callEntryApprovalTab.tabDateAndTime();
		records.callEntry.callEntryApprovalTab.saveInApprovalTab();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.switchToCallEntry();
		records.callEntry.swithchtoCallSummaryTab();
		records.callEntry.callSummaryTab.verifySaveAndResetButtonsDisabled();
		records.callEntry.callSummaryTab.verifyOnlySyatemAdminCanEditSummaryTabMessage();
	}

	// Automated by:-Mahesha , Date :- 10/27/2021 , Quarter:-Q4 , Sprint:-2 ,
	// Module:- Records .
	@Test(priority = 4, groups = { "CallSummaryEnhancement" })
	public void Verifythecallsummaryisenabledonlyfortheofficerwhoeditedwithoutapprovalprocess_273488(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "273488");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.ClickDateResetButton();
		records.callSearch.enterAtCallNo();
		// records.callSearch.clickSearchButton();
		// records.callSearch.ClickAtCallNoInGrid();
		records.switchToCallEntry();
		records.callEntry.verifyApprovalTabNotDisplayed();
		records.switchToCallEntry();
		records.callEntry.swithchtoCallSummaryTab();
		records.callEntry.callSummaryTab.verifySaveAndResetButtonsDisabled();

	}

	@Test // Automated By Stalin Q2 S6
	public void VerifytheK9PDFReportshouldshowinReportingtab274793(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "274793");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.enterAtNameID();
		records.walkInEntry.selectActivityAsVictim();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickK9ReportIcon();
		k9.switchToReportEntry();
		k9.reportEntry.selectAtK9Handler();
		k9.reportEntry.selectTypeOfIncident();
		k9.reportEntry.clickSave();
		k9.reportEntry.verifyDetectionTypeAcknowledgeMessage();
		k9.switchToReportEntry();
		k9.reportEntry.clickOnDetectionTab();
		k9.reportEntry.detectionTab.selectDetectionTypeAsCheckAll();
		k9.switchToReportEntry();
		k9.reportEntry.saveScreen();
		k9.switchToReportEntry();
		k9.reportEntry.clickOnApprovalTab();
		k9.reportEntry.approvalTab.selectActionAsSendForApproval();
		k9.reportEntry.approvalTab.TabDateTime();
		k9.reportEntry.approvalTab.SaveInternalTab();
		k9.switchToReportEntry();
		k9.reportEntry.clickOnApprovalTab();
		k9.reportEntry.approvalTab.selectActionAsApprove();
		k9.reportEntry.approvalTab.TabDateTime();
		k9.reportEntry.approvalTab.SaveInternalTab();
		k9.switchToReportEntry();
		k9.reportEntry.close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.verifyTypeAsK9IncidentDetailPDF();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsAttempted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.SelectAtType1();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.SelectAtStatementName();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.switchToReportManager();
		records.reportManager.Saveandclose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.enterSortOrderInReportsGridAs0(3);
		records.caseUpdate.reportingTab.enterSortOrderInReportsGridAs1(2);
		records.caseUpdate.reportingTab.enterSortOrderInReportsGridAs2(1);
		records.caseUpdate.reportingTab.SaveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.ClickViewCaseFileButton(); // Cant able to verify App not Supporting as per
																	// testcase at this verification
		records.switchToCaseUpdate();

	}

	@Test // Automated by Stalin Q3 S1
	public void VerifythesuspectdetailsaredisplayedinIRSupplementreport_276769(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "276769");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.ClickSuspectButton();
		records.switchToCaseSuspect();
		records.caseSuspect.ClickAddSuspectButton();
		names.switchToSuspectEntry();
		names.suspectEntry.EnterAtLastNameFirstName();
		names.suspectEntry.SaveAndClose();
		records.switchToCaseSuspect();
		records.caseSuspect.CloseScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		// PDF Verification
		records.reportStatus.downloadReport();
		records.reportStatus.saveTheReportToLocation("276769");
		String readPDFContent = records.reportStatus.readPDFContent("276769");
		records.reportStatus.verifySuspectNameInPDFReport(readPDFContent);
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAsSupplementReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.ClickSuspectButton();
		records.switchToCaseSuspect();
		records.caseSuspect.ClickAddSuspectButton();
		names.switchToSuspectEntry();
		names.suspectEntry.EnterAtLastNameFirstName();
		names.suspectEntry.SaveAndClose();
		records.switchToCaseSuspect();
		records.caseSuspect.CloseScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.downloadReport();
		records.reportStatus.saveTheReportToLocation("276769I");
		String readPDFContent1 = records.reportStatus.readPDFContent("276769I");
		records.reportStatus.verifySuspectNameInPDFReport(readPDFContent1);
		records.reportStatus.close();
		records.switchToCaseUpdate();
	}

	@Test // Automated by Stalin Q3 S1 //Run in 87
	public void VerifytheQAFormsbuttonDVbuttoninCaseNamesscreen_276784(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "276784");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickPopupCopyButton();
		records.switchToCaseNames();
		records.caseNames.verifyAtNameInGrid();
		records.caseNames.ClickAtNameInGrid();
		records.caseNames.verifyQAFormButtonIsBlueColor();
		records.caseNames.verifyDomesticViolenceButtonAsBlueColor();
		records.switchToCaseNames();

	}

	@Test // Automated by Stalin Q3 S2
	public void VerifywhenclickonALCiconcaseupdatetabsdisplayedblue_278647(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "278647");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyReportingTabInBlueColor();
		records.caseUpdate.ClickALCIcon();
		records.switchToAccessListControl();
		records.aLCScreen.close();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyReportingTabInBlueColor();
		records.switchToCaseUpdate();

	}

	@Test // Automated by Stalin Q2 S6
	public void TocheckCreatecallcheckboxfunctionality_280008(ITestContext testContext) {
		testContext.setAttribute("testID", "280008");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Vehicle");
		loader.navigateToScreen("Tow");
		tow.switchToTowScreen();
		tow.towScreen.clickAddNewButton();
		tow.switchToTowEntry();
		tow.towEntry.verifyCreateCallCheckBoxIsDisplayed();
		tow.towEntry.clickCreateCallCheckBox();
		records.switchToWalkInEntry();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.clickSave();
		tow.switchToTowEntry();
		tow.towEntry.enterAtPlateNumber();
		tow.towEntry.selectAtPlateState();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.clickSelectButton();
		tow.switchToTowEntry();
		tow.towEntry.clickTowTab();
		tow.towEntry.towTab.selectEquipment();
		tow.towEntry.tabTowRequestDateTime();
		tow.towEntry.selectWrecker();
		tow.switchToTowEntry();
		tow.towEntry.save();
		tow.switchToTowEntry();

	}

// Automated by KIRAN :- Date :-11/9/2021 Quarter:-4 Sprint:-3 Module:-Records
	@Test(groups = { "2022DefectTestCasesKIRAN" })

	public void VerifyTheCMCaseIsCreatedForOtherJurisWhenSysPara905SetAsBlankOrAnyValue_283637(
			ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "283637");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.enterAtParameterID();
		settings.sysParameter.setSystemparameter905AsNull();
		settings.sysParameter.saveScreen();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.ClickReset();
		records.caseSearch.selectAtJuris();
		records.caseSearch.ClickReset();
		records.caseSearch.enterToDateAsCurrentDate();
		records.caseSearch.clickSearch();
		records.caseSearch.ClickRowAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseManagementIcon();
		cm.switchToCaseFolder();
		cm.caseFolder.clickAssignmentTab();
		cm.caseFolder.caseFolderAssignmentTab.selectAtDivision();
		cm.caseFolder.caseFolderAssignmentTab.selectAtSection();
		cm.caseFolder.caseFolderAssignmentTab.tabOutSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.tabOutDateAssignedTime();
		cm.caseFolder.save();
		cm.caseFolder.verifyAtInvestNo();
		cm.caseFolder.verifyAtjuris();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.enterAtParameterID();
		settings.sysParameter.setSystemparameter905AsOpenPending();
		settings.sysParameter.saveScreen();

	}

	// Automated by KIRAN :- Date :-11/12/2021 Quarter:-4 Sprint:-3 Module:-Records
	@Test(groups = { "2022DefectTestCasesKIRAN" })

	public void VerifyTheAccessLogScreenIsDisplayedTheReportActivityAsPrint_276781(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "276781");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickSearch();
		records.caseSearch.ClickRowAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.VerifyIncidentReportStatusAsOnHold();
		records.caseUpdate.reportingTab.selectAtStatus();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.VerifiyStatusAsOnHold();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.save();
		records.reportManager.VerifyStatsAsSubmittedInMenuBar();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.SaveInternalTab();
		records.caseUpdate.reportingTab.SelectAtStatus1();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.save();
		records.reportManager.VerifyStatsAsApprovedInMenuBar();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.SaveInternalTab();
		records.caseUpdate.reportingTab.SelectAtStatus2();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyReportStatusAsApproved();
		records.reportStatus.clickReportDetails();

		records.switchToReportManager();
		records.reportManager.clickPrintIcon();
		home.switchToSelectReport();
		home.selectReport.verifyAtReportName(0);
		home.selectReport.ClickReportManageReport();
		home.switchToPnxCustomReportPDFScreen();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("Access Log");
		settings.switchToAcessLog();

		settings.accessLog.tabTheFromDateAndTime();
		settings.accessLog.tabTheToDateAndTime();
		settings.accessLog.enterAtCaseNo("21-000241");
		settings.accessLog.clickSearch();

		settings.accessLog.verifyAccessAsPrint(0);

	}

	// Automated by KIRAN :- Date :-10/30/2021 Quarter:-4 Sprint:-2
	@Test(groups = { "2022DefectTestCasesKIRAN" })

	public void VerifyTwoCustomLabelFieldsInVehicleTabOfCallEntryScreen_281519(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "281519");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.verifyCustomLabel1IsDisplayed();
		records.callEntry.vehicleTab.verifyCustomLabel2IsDisplayed();

		records.callEntry.vehicleTab.clickcustom1Label();
		records.switchToRepositoryEntry();
		records.repositoryEntry.verifyRepositoryIdIsDisAbled();
		records.repositoryEntry.verifyDefaultNameIsDisAbled();
		records.repositoryEntry.enterAtCustomName();
		records.repositoryEntry.clicksave();

		records.repositoryEntry.selectAtFieldusage(0);
		records.repositoryEntry.clicksaveNClose();

		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.verifyCustom1AsMandatory();
		records.callEntry.vehicleTab.verifyCustom1IsEnbled();

		records.callEntry.vehicleTab.clickcustom1Label();
		records.switchToRepositoryEntry();
		records.repositoryEntry.selectAtFieldusage(1);
		records.repositoryEntry.clicksaveNClose();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.verifyCustom1IsEnbled();
		records.callEntry.vehicleTab.clickcustom1Label();
		records.switchToRepositoryEntry();
		records.repositoryEntry.selectAtFieldusage(2);
		records.repositoryEntry.clicksaveNClose();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.verifyCustomFeildIsDisAbled();
		records.switchToCallSearch();
		records.callSearch.ClickResetButton();
		records.callSearch.verifyCustomLabelIsDisplayed();
		records.callSearch.clickcustomFeild();
		records.switchToRepositoryEntry();
		records.repositoryEntry.verifyOptionsInFieldUsage();
		records.repositoryEntry.selectAtFieldusage(3);
		records.repositoryEntry.clicksaveNClose();
		records.switchToCallSearch();
		records.callSearch.verifyCustomLabelIsDisplayed();
		records.callSearch.verifyCustomFielIsEnabled();

		records.callSearch.clickcustomFeild();
		records.switchToRepositoryEntry();
		records.repositoryEntry.selectAtFieldusage(4);
		records.repositoryEntry.clicksaveNClose();
		records.switchToCallSearch();
		records.callSearch.verifyCustomLabelIsDisplayed();
		records.callSearch.verifyCustomFieldIsDisAbled();

	}

	// Automated by KIRAN :- Date :-10/12/2021 Quarter:-4 Sprint:-1
	@Test(groups = { "2022DefectTestCasesKIRAN" })
	public void EnteringPURSUITInformationfromIRReportSendforApproval_272378(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "272378");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.selectAtStatus1();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.SelectRowByAtCaseNo();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.clickPursuitReport();//
		records.switchToPursuitReportEntry();//
		records.pursuitReportEntry.tabOfficer();//
		records.pursuitReportEntry.enterAtsupervisor();//
		records.pursuitReportEntry.selectAtWeather();//
		records.pursuitReportEntry.selectAtRoadSurface();//
		records.pursuitReportEntry.enterAtNoOfPeopleInjured();//
		records.pursuitReportEntry.enterAtNoOfPeopleKilled();//
		records.pursuitReportEntry.enterAtNoOfPeopleInPursuedVechicle();//
		records.pursuitReportEntry.enterAtCharge();//
		records.pursuitReportEntry.clickAdd();//
		records.pursuitReportEntry.clickSaveScreen();//
		// NEED TO VERIFY THE PDF in REPORT STATUS SCREEN
		/// pAsses Upto Scripted

	}
	// Automated by KIRAN :- Date :-10/13/2021 Quarter:-4 Sprint:-1

	@Test(groups = { "2022DefectTestCasesKIRAN" }) // need to change status transcriber to submitted
	public void VerifythespecifiedSupervisorisabletoapprovareportsubmittedbyanyTranscriberorPoliceOfficer_273004(
			ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273004");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.ClickShowMyItemsOnly();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.selectRowByAtRefNo();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsSubmitted();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.VerifyStatsAsSubmittedInMenuBar();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsApprove();
		records.reportManager.ClickSaveWithConfirm();
		records.reportManager.VerifyStatsAsApprovedInMenuBar();
		records.switchToReportStatus();
		records.reportStatus.verifyReportStatusAsApproved();

	}

	// Automated by KIRAN :- Date :-10/13/2021 Quarter:-4 Sprint:-1
	@Test(groups = { "2022DefectTestCasesKIRAN" }) // DB SYnc Issue
	public void VerifythePursuitReportDisplaySelectedDataInRoadsurfaceandweather_272379(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "272379");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.ClickPursuitButton();
		records.switchToPursuitCaseEntry();
		records.pursuitCaseEntry.TabOfficer();
		records.pursuitCaseEntry.TabSupervisor();
		records.pursuitCaseEntry.SelectWeather();
		records.pursuitCaseEntry.SelectAtRoadSurface();
		records.pursuitCaseEntry.EnterAtCharge();
		records.pursuitCaseEntry.ClickAddButton();
		records.pursuitCaseEntry.SaveScreen();
		records.pursuitCaseEntry.ClickPrintIcon();
		home.switchToSelectReport();
		home.selectReport.VerifySelectReportScreenOpened();
		home.selectReport.verifyAtReportName(0);
		home.selectReport.ClickPursuitIncidentReport();
		// need to verify the pdf
		home.switchToKPITempPDFScreen();
		objectIdentification.readPDF.DownloadReports();
		objectIdentification.readPDF.SaveAsPDFfileToLocation("272379");
		String readPDF = objectIdentification.readPDF.ReadPDF("272379");
		home.switchToKPITempPDFScreen();
		home.kPITempPDFScreen.verifyContentInPDF(readPDF, "2C:11-2");

	}

	// Automated by KIRAN :- Date :-10/27/2021 Quarter:-4 Sprint:-2 Module:-Records
	@Test(groups = { "2022DefectTestCasesKIRAN" })
	public void VerifyTheNamesAndActivityIsDisplayingNonMandatoryInWalkInEntryScreen_278652(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "278652");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.ClickAddNew();
		records.switchToWalkInEntry();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.enterAtNameID();
		records.walkInEntry.verifyActivityAsRed();//
		records.walkInEntry.selectActivityAsVictim();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToAllTabs();
		records.caseUpdate.SaveNClose();
		records.switchToCaseSearch();

	}

	// Automated by KIRAN :- Date :-10/27/2021 Quarter:-4 Sprint:-2
	@Test(groups = { "2022DefectTestCasesKIRAN" })
	public void VerifyTheDdeleteIconIsDisabledInTheReportForAnOfficerWithoutRolePermission2510_273482(
			ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273482");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.SaveInternalTab();
		records.caseUpdate.reportingTab.deleteAtTypeInGrid();
		records.caseUpdate.reportingTab.verify39AccessDeniedAckMsg();//
		records.switchToCaseUpdate();

	}

	// Automated by:-Dinesh , Date :-17/12/2021 , Quarter:-4 , Sprint:-5 ,
	// Module:-Records .

	@Test(groups = { "2022DefectTestcasesRecordsModule" })
	public void VerifyTheVictimOffenderRelationshipPursuitUseOfForceIsEnabledInCaseNameScreen_286589(
			ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "286589");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.selectAtType();
		records.reportManager.Saveandclose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickPopupCancelButton();
		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.SelectAtActivity();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.caseNames.VerifyAtActivityInGrid(0);
		records.switchToCaseNames();
		records.caseNames.verifyVictimOffenderButtonEnabled();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	// Automated by:-Dinesh , Date :-21/12/2021 , Quarter:-4 , Sprint:-6 ,
	// Module:-Records .

	@Test(groups = { "2022DefectTestcasesRecordsModule" })
	public void VerifyCitationLocationFromCallEntryScreen_288594(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "288594");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.TabStackedDateTime();
		records.callEntry.TabFinishedDateTime();
		records.callEntry.EnterAtCADDisposition();
		records.callEntry.EnterAtCallCompletionLocation();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.ClickCitationIcon();
		trafficWI.switchToCitationEntry();
		trafficWI.citationEntry.tabAtCallNo();
		trafficWI.citationEntry.switchToViolationsTab();
		trafficWI.citationEntry.violationsTab.verifyAtLocation();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	// Automated by:-Dinesh , Date :-28/12/2021 , Quarter:-4 , Sprint:-6 ,
	// Module:-Records .

	@Test(groups = { "" })
	public void VerifyTheCitationEntryLocationFieldShouldBringsFromTheCallEntryScreen_289948(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "289948");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.EnterInitialCFSAsCFS201();
		records.callEntry.enterReceivedSourceAs9();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.TabStackedDateTime();
		records.callEntry.TabFinishedDateTime();
		records.callEntry.enterCADDispositionAsI();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.selectReportDueAsIncidentReport();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.ClickCitationIcon();
		traffic.switchToCitationEntry();
		traffic.citationEntry.verifyAtAddress();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	// Automated by KIRAN :- Date :-27/12/2021 Quarter:-4 Sprint:-6 Module:-Names
	@Test(priority = 1)
	public void VerifyTheB_TypeNameIsAllowedDuplicatRrecordsWhenSysPara_615SetAsFalseInReportEntry_289863(
			ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "289863");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterToDateAsCurrentDate();
		records.caseSearch.clickSearch();
		records.caseSearch.ClickRowAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickNameSearchButton();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.ClickAddNew();
		names.switchToNameEntry();
		names.nameEntry.EnterNameIDAsB();
		names.nameEntry.EnterAtLastName();
		names.nameEntry.EnterAtAddress();
		names.nameEntry.SaveWithConfirmMessage();
		names.nameEntry.VerifyAdditionSuccessfulStatusMessage();
		names.nameEntry.closeTheScreen();
		records.switchToCaseNames();
		records.caseNames.clickRefreshIcon();
		records.caseNames.ClickNameSearchButton();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.ClickAddNew();
		names.switchToNameEntry();

		names.nameEntry.EnterNameIDAsB();
		names.nameEntry.EnterAtLastName();
		names.nameEntry.EnterAtAddress();
		names.nameEntry.ClickSaveButton();
		names.nameEntry.verify6055DuplcationOFBTypeName();
		names.switchToNameEntry();
		names.nameEntry.closeTheScreen();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		objectIdentification.windowHandle.switchToMainWindow();

	}

	// Automated by KIRAN :- Date :-27/12/2021 Quarter:-4 Sprint:-6 Module:-Names
	@Test(priority = 2)
	public void VerifyTheB_TypeNameIsAllowedDuplicatRrecordsWhenSysPara_615SetAsFalseInReportEntry_289863A(
			ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "289863A");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.enterAtParameterID();
		settings.sysParameter.clickSearchButton();
		settings.sysParameter.setSystemparameter615AsTrue();
		settings.sysParameter.saveScreen();
		// settings.sysParameter.verifyUpdateSuccessfulAckMessage();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterToDateAsCurrentDate();
		records.caseSearch.clickSearch();
		records.caseSearch.ClickRowAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickNameSearchButton();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.ClickAddNew();
		names.switchToNameEntry();
		names.nameEntry.EnterNameIDAsB();
		names.nameEntry.EnterAtLastName();
		names.nameEntry.EnterAtAddress();
		names.nameEntry.SaveWithConfirmMessage();
		names.nameEntry.VerifyAdditionSuccessfulStatusMessage();
		names.nameEntry.closeTheScreen();
		records.switchToCaseNames();
		records.caseNames.clickRefreshIcon();
		records.caseNames.ClickNameSearchButton();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.ClickAddNew();
		names.switchToNameEntry();
		names.nameEntry.EnterNameIDAsB();
		names.nameEntry.EnterAtLastName();
		names.nameEntry.EnterAtAddress();
		names.nameEntry.ClickSaveButton();
		names.nameEntry.verify6134A_B_TypeNameRecordAlreadyExistsForThisName();
		names.nameEntry.VerifyAdditionSuccessfulStatusMessage();
		names.nameEntry.closeTheScreen();
		records.switchToCaseNames();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.enterAtParameterID();
		settings.sysParameter.clickSearchButton();
		settings.sysParameter.setSystemparameter615AsFalse();
		settings.sysParameter.saveScreen();
		settings.sysParameter.verifyUpdateSuccessfulAckMessage();
	}

	@Test // Automated by Stalin // Date :11/03/2021 //Quarter:Q4 // Sprint:03
			// //Module:Records
	public void VerifytheNamestabglobalsaveworkinginCaseupdatescreen_274787(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "274787");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.ClickAddNew();
		records.switchToWalkInEntry();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.enterAtNameID();
		records.walkInEntry.selectActivityAsVictim();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.SelectNameByNameID();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.SelectRowByAtName();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
	}

	// Automated by Stalin // Date :11/05/2021 //Quarter:Q4 // Sprint:03
	// //Module:Records
	@Test
	public void VerifytheQAformdetailsaresavedinthereport_278651(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "278651");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.ClickQaFormButton();
		records.switchToQuestionnarie();
		records.questionnarie.selectAtSelectForm();
		records.switchToQuestionDataEntry();
		records.questionDataEntry.TabOutPF();
		records.questionDataEntry.clickYesRadioButton();
		records.questionDataEntry.SaveNClose();
		records.switchToQuestionnarie();
		records.questionnarie.ClickRefreshButton();
		records.questionnarie.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickQaFormButton();
		records.switchToQuestionnarie();
		records.questionnarie.VerifySingleQAFormInGrid();
		records.questionnarie.verifyAtPFNoInGrid();
		records.questionnarie.CloseTheScreen();
		records.switchToReportStatus();
		objectIdentification.readPDF.DownloadReports();
		Playback.pageLoadThreadWait();
		objectIdentification.readPDF.SaveAsPDFfileToLocation("278651");
		String FormName = objectIdentification.readPDF.ReadPDF("278651");
		records.reportStatus.verifyAtQaFormNameInPDFReport(FormName);
		records.switchToReportStatus();

	}

	// Automated by Stalin // Date :11/02/2021 //Quarter:Q4 // Sprint:03
	// //Module:Records
	@Test
	public void VerifythedifferentQAFormisaddedtosamePFinthereport_276775(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "276775");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.enterAtNameID();
		records.walkInEntry.selectActivityAsVictim();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.VerifyAtType();
		records.caseUpdate.reportingTab.verifyIncidentReportStatusAsReportDue();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.VerifyPFNotRelatedToConfirmPopupMessage(); // Updated
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.ClickQaFormButton();
		records.switchToQuestionnarie();
		records.questionnarie.SelectFormAsTestMultiple();
		records.switchToQuestionDataEntry();
		records.questionDataEntry.TabOutPF();
		records.questionDataEntry.SaveNClose();
		records.switchToQuestionnarie();
		records.questionnarie.selectAtSelectForm();
		records.switchToQuestionDataEntry();
		records.questionDataEntry.TabOutPF();
		records.questionDataEntry.clickYesRadioButton();
		records.questionDataEntry.SaveNClose();
		records.switchToQuestionnarie();
		records.questionnarie.ClickRefreshButton();
		records.questionnarie.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickQaFormButton();
		records.switchToQuestionnarie();
		records.questionnarie.VerifyDoubleQAFormInGrid();
		records.questionnarie.verifyAtPFNoInGrid();
		records.questionnarie.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		objectIdentification.readPDF.DownloadReports();
		Playback.pageLoadThreadWait();
		objectIdentification.readPDF.SaveAsPDFfileToLocation("276775");
		String FormName = objectIdentification.readPDF.ReadPDF("276775");
		records.reportStatus.verifyAtQaFormNameInPDFReport(FormName);
		records.switchToReportStatus();

	}

	// Automated by Mani // Date :11/02/2021 //Quarter:Q4 // Sprint:03
	// //Module:Records
	@Test
	public void VerifyTheNewvictimScreenIsdisplayedWhenSyspara2001NIBRS_286602(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "286602");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		// settings.sysParameter.enterAtParameterID();
		settings.sysParameter.setSystemParameter2001AsNIBRS();
		settings.sysParameter.saveScreen();
		settings.switchToSystemParamter();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		// records.switchToCaseNames();
		// records.caseNames.ClickPopupCancelButton();
		records.switchToCaseNames();
		records.caseNames.clickOnVitimIcon(0);
		records.switchToVictimOffender();
	}

	// Automated by Mani // Date :11/02/2021 //Quarter:Q4 // Sprint:03
	// //Module:Records
	@Test
	public void VerifyNewvictimScreenIsDisplayedWhenSysPara2001UCRAndNIBRS_286603(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "286603");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		// settings.sysParameter.enterAtParameterID();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		settings.sysParameter.saveScreen();
		settings.switchToSystemParamter();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.selectRowByAtType();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.ClickVictimOffenderIcon(0);
		records.switchToVictimOffender();

	}

	// Automated by:-Abinaya , Date :-12/13/2021 , Quarter:-4 , Sprint:-5 , Module:-
	// Records.
	@Test(groups = { "2022DefectTestCasesRecords" })
	public void VerifyTheUserIsAbleToUseTheNewSignatureFunctionalityInReportManagerScreen2511_271632(
			ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "271632");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter704AsTrue();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.caseSearch.clickSearch();
		records.caseSearch.selectRowByAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();
		records.switchToACD();
		records.aCD.EnterAtCFS();
		records.aCD.clickAddButton();
		records.switchToFTC();
		records.fTC.selectAtAttemptedOrCompleted();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.selectAtPropertyLoss();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.saveNClose();
		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectDomesticViolanceAsNo();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SaveNClose();
		records.switchToReportStatus();
		records.reportStatus.clickReportDetails();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.selectActionAsSendForApproval();
		records.reportManager.updateStatusTab.ClickSignReportCheckBox();
		settings.switchToPhoenixAuthenticatorWindow();
		settings.phoenixAuthenticatorWindow.enterAtPassword();
		settings.phoenixAuthenticatorWindow.clickAcceptButton();
		records.switchToReportManager();
		records.reportManager.switchToUpdateStatusTab();
		records.reportManager.updateStatusTab.VerifyPFSignImageDisplayed();
		records.reportManager.updateStatusTab.ClickNotarySignCheckBox();
		settings.switchToPhoenixAuthenticatorWindow();
		settings.phoenixAuthenticatorWindow.enterAtUserName();
		settings.phoenixAuthenticatorWindow.enterAtPassword();
		settings.phoenixAuthenticatorWindow.clickAcceptButton();
		home.switchToSignatureScreen();
		home.signatureScreen.clickDrawButton();
		home.signatureScreen.drawSign();
		home.signatureScreen.clickApplyButton();
		records.switchToReportManager();
		records.reportManager.updateStatusTab.VerifyNotarySignImageDisplayed();
	}

	@Test(groups = "incidentreportScripts", priority = 1)
	public void IncidentReportCallCreation_281602(ITestContext testContext) {
		testContext.setAttribute("testID", "281602");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		loader.logout();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.setCaseYearToJSONFile("281602");
		records.caseUpdate.setCaseNumberToJSONFile("281602");
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.verifyIncidentReportStatusAsReportDue();

	}

	@Test(groups = "incidentreportScripts", priority = 2)
	public void IncidentReportVerifyStatusAsReportDue_101391(ITestContext testContext) {
		testContext.setAttribute("testID", "101391");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsReportDue();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsReportDue();

	}

	@Test(groups = "incidentreportScripts", priority = 3)
	public void IncidentReportStatusChangeToOnHold_101392(ITestContext testContext) {
		testContext.setAttribute("testID", "101392");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsReportDue();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsReportDue();
		home.myHome.myReportsTab.VerifyAtCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowStatusAsReportDueByCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");
		records.switchToReportManager();
		records.reportManager.verifyAtReportedByPF();
		records.reportManager.VerifyUnitOfficerInfoIcon();
		records.reportManager.ClickUnitOfficerIcon();
		personnel.switchToPersonnelEntry();
		personnel.personnelEntry.verifyAtPFCode();
		personnel.personnelEntry.close();
		records.switchToReportManager();
		records.reportManager.tabDateAndTime();
		records.reportManager.VerifyCurrentDate();
		records.reportManager.save();

		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickReportDetails();

		records.switchToReportManager();
		records.reportManager.VerifyReportedPFSearchButtonDisabled();
		records.reportManager.VerifyUnitOfficerInfoIcon();
		records.reportManager.VerifyCaseInfoIconClickable();
		records.reportManager.VerifyTypeAsIncidentReportDisabled();
		records.reportManager.VerifyStatusOfReportDataMenubarAsOnHold();
		records.reportManager.VerifyStatusAsOnHold();

	}

	@Test(groups = "incidentreportScripts", priority = 4)
	public void IncidentReportEnteringChargeACDandFTC_101393(ITestContext testContext) {
		testContext.setAttribute("testID", "101393");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.VerifyAtCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");

		records.switchToReportStatus();
		records.reportStatus.clickCaseDataButton();

		records.switchToACD();
		records.aCD.enterAtCharge();
		records.aCD.clickAddButton();

		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.enterAtCharge1();
		records.aCD.clickAddButton();

		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectNIBRSAs90ZAllOtherOffenses();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.saveNClose();

		records.switchToACD();
		records.aCD.TaboutOccuredAT();
		records.aCD.SelectPoliceForceUsedAsNone();
		records.aCD.SelectDomesticViolation();
		records.aCD.Save();
		records.switchToACD();
		records.aCD.VerifyAtChargeInGrid(1);

	}

	@Test(groups = "incidentreportScripts", priority = 5)
	public void IncidentReportCaseNamesAdding_101394(ITestContext testContext) {
		testContext.setAttribute("testID", "101394");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.VerifyAtCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowAtOfficerByCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowAtUnitByCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");

		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();

		records.switchToCaseNames();
		records.caseNames.enterAtNameID();
		records.caseNames.selectActivityAsVictim();
		records.caseNames.EnterComments();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		Playback.setFocus();
		records.caseNames.VerifyUpdateSuccessfulMessage();
		records.caseNames.VerifyAddedNamesRowCount(1);
		records.caseNames.EnterAtNameID1();
		records.caseNames.SelectActivityAsArrested();
		records.caseNames.EnterComments();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		Playback.setFocus();
		records.caseNames.VerifyUpdateSuccessfulMessage();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
	}

	@Test(groups = "incidentreportScripts", priority = 6)
	public void IncidentReportCaseNamesAddingJuvinelName_101395(ITestContext testContext) {
		testContext.setAttribute("testID", "101395");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.VerifyAtCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");

		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();

		records.switchToCaseNames();
		// records.caseNames.ClickPopupCancelButton();
		records.caseNames.EnterJuvenileLastName();
		records.caseNames.SelectJuvenileName();
		records.switchToCaseNames();
		records.caseNames.SelectActivityAsComplainant();
		records.caseNames.clickAddButton();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.VerifyAddedNamesRowCount(3);
		Playback.setFocus();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
	}

	@Test(groups = "incidentreportScripts", priority = 7)
	public void IncidentReportCaseNamesVerifyingVOicons_101397(ITestContext testContext) {
		testContext.setAttribute("testID", "101397");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.VerifyAtCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");

		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();

		records.switchToCaseNames();
		records.caseNames.VerfiyAtNameInGrid(0);

		records.caseNames.VerifyVictimOffenderIcon(0);
		records.caseNames.VerifyDomesticViolenceIcon(0);
		records.caseNames.Save();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();

	}

	// ISSUE IN THE SCRI_PT NEED TO ANALYSE
	@Test(groups = "incidentreportScripts", priority = 8)
	public void IncidentReportCaseNamesMapVictimOffender_101398(ITestContext testContext) {
		testContext.setAttribute("testID", "101398");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.verifyVictimOffenderButtonAsGrayColor();
		records.caseNames.ClickAtNameInGrid();
		records.caseNames.verifyVictimOffenderButtonAsRedColor();
		records.caseNames.clickAddButton();
		records.caseNames.ClickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.VerfiyAtLastName();
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.SelectDomesticViolation();
		records.nameVictim.ClickSaveButton();
		records.nameVictim.VerifyVictimNotConnectedCFSCodeAckMessage();
		records.switchToNameVictim();
		records.nameVictim.clickAddButton();
		records.nameVictim.VerifyRedOffenderIcon(0);
		records.nameVictim.ClickOffenderIconUsingDescription();
		records.switchToVictimOffender();
		records.victimOffender.SelectOffender();
		records.victimOffender.SelectRelationshipAsRelationshipUnknown();
		records.victimOffender.ClickSaveButton();
		records.victimOffender.VerifyVictimOffenderRelationNotProvidedAckMessage();
		records.switchToVictimOffender();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();

		records.switchToNameVictim();
		records.nameVictim.Save();
		records.nameVictim.VerifyGreenOffenderIcon(0);
		records.nameVictim.saveNClose();

		records.switchToCaseNames();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.caseNames.ClickAtNameInGrid();
		records.caseNames.verifyVictimOffenderButtonAsGreenColor();

	}

	@Test(groups = "incidentreportScripts", priority = 9)
	public void IncidentReportCaseNamesDVEntry_101399(ITestContext testContext) {
		testContext.setAttribute("testID", "101399");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.VerifyAtCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");

		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();

		records.switchToCaseNames();
		records.caseNames.verifyDomesticViolenceButtonAsGrayColor();
		records.caseNames.ClickDomesticViolenceIcon(0);

		records.switchToDVEntry();
		records.dVEntry.VerifyAtVictimLastName();
		records.dVEntry.ClickNameInfoIcon();
		names.switchToNameEntry();
		names.nameEntry.VerifyAtLastName();
		names.nameEntry.closeTheScreen();
		records.switchToDVEntry();
		records.dVEntry.SelectAtOffender();
		records.dVEntry.SelectArrestedFor();
		records.dVEntry.SaveScreen();
		records.dVEntry.VerifyAdditionSuccessfulMessage();
		records.dVEntry.SaveAndClose();

		records.switchToCaseNames();
		records.caseNames.Save();
		records.switchToCaseNames();
		records.switchToCaseNames();
		records.caseNames.ClickAtNameInGrid();
		records.caseNames.verifyVictimOffenderButtonAsGreenColor();
		Playback.setFocus();
		records.caseNames.VerifyGreenDomesticViolenceIcon(0);
		records.caseNames.CloseTheScreen();

		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();

	}

	@Test(groups = "incidentreportScripts", priority = 10)
	public void IncidentReportCaseNamesLEOKAFunctionality_101400(ITestContext testContext) {
		testContext.setAttribute("testID", "101400");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.VerifyAtCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");

		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();

		records.switchToCaseNames();
		records.caseNames.EnterAtOfficerNameAndTabOut();
		records.caseNames.SelectOfficerName();

		records.switchToCaseNames();
		records.caseNames.SelectActivityAsPoliceOfficer();
		records.caseNames.ClickLEOKACheckbox();
		records.caseNames.EnterComments();
		records.caseNames.clickAddButton();

		records.switchToLeoka();
		records.leoka.ClickOfficerKilledCheckbox();
		records.leoka.VerifyGrayOutLeokaFields();
		records.leoka.ClickFeloniousActRadioButton();
		records.leoka.SaveNClose();

		records.switchToCaseNames();
		records.caseNames.Save();

		records.switchToCaseNames();
		Playback.setFocus();
		records.caseNames.VerifyLeokaIcon(0);
		records.caseNames.ClickLeokaIcon(0);

		records.switchToLeoka();
		records.leoka.SaveNClose();

		records.switchToCaseNames();
		records.caseNames.VerifyLeokaIcon(0);
		records.caseNames.CloseTheScreen();

		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNoUsingJsonReadFile("281602");
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyNameLeokaUsingName();
		records.switchToCaseUpdate();

	}

	@Test(groups = "incidentreportScripts", priority = 11)
	public void IncidentReportCaseVehicleAdd_101403(ITestContext testContext) {
		testContext.setAttribute("testID", "101403");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.VerifyAtCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");

		records.switchToReportStatus();
		records.reportStatus.ClickVehicleButton();

		records.switchToCaseVehicle();
		records.caseVehicle.EnterVehicleAtPlateCheckVehicle();
		vehicle.vehicleBoatSearchHelpWindow.selectVehicle();

		records.switchToCaseVehicle();
		records.caseVehicle.SelectActivityAsPlateCheck();
		records.caseVehicle.SelectInsuranceCompany();
		records.caseVehicle.ClickAddButton();
		records.caseVehicle.Save();

		records.switchToCaseVehicle();
		Playback.setFocus();
		records.caseVehicle.EnterVehicleAtFIVehicle();
		vehicle.vehicleBoatSearchHelpWindow.selectVehicle();

		records.switchToCaseVehicle();
		records.caseVehicle.SelectActivityAsFieldInterview();
		records.caseVehicle.SelectInsuranceCompany();
		records.caseVehicle.ClickAddButton();
		records.caseVehicle.Save();
		records.switchToCaseVehicle();
		records.caseVehicle.VerifyActivityAsPlateCheckinGrid(0);
		records.caseVehicle.VerifyActivityAsFieldInterviewinGrid(1);
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
	}

	@Test(groups = "incidentreportScripts", priority = 12)
	public void IncidentReportPropertyAdd_101406(ITestContext testContext) {
		testContext.setAttribute("testID", "101406");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		String propertyYear = null;
		String propertyNumber = null;

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.VerifyAtCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");

		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();

		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.clickAddNewPropertyReport();

		property.switchToPropertyEntry();
		property.propertyEntry.VerifyAtCaseNoUsingJsonReadFile("281602");
		property.propertyEntry.VerifyOfficerDetails();
		property.propertyEntry.propertyEntryMainTab.SelectReasonAsEvidence();
		property.propertyEntry.propertyEntryMainTab.selectPropertyAsFirearms();
		property.propertyEntry.propertyEntryMainTab.VerifyPropertyTypeAsGun();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.selectGunTypeAndTab();
		property.propertyEntry.propertyEntryMainTab.EnterSerial();
		property.propertyEntry.propertyEntryMainTab.SelectOwnerName();

		property.switchToPropertyEntry();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.tabOutQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();

		property.propertyEntry.recoveredTab.SelectDispositionAsSentToLab();
		// property.propertyEntry.recoveredTab.SelectInitialStorageLocation();
		// property.propertyEntry.recoveredTab.VerifyEvidenceLockerUseConfirmMessage();
		property.propertyEntry.SaveTheScreen();
		property.propertyEntry.GetThePropertyYearAndNumber(propertyYear, propertyNumber);

		property.propertyEntry.ClickAttachmentTab();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.SaveNClose();

		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.VerifyPropertyYearNumber(Playback.getTestContextAttribute("propertyYear"),
				Playback.getTestContextAttribute("propertyNumber"));
		property.propertyEntry.closeTheScreen();

		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();

	}

	@Test(groups = "incidentreportScripts", priority = 13)
	public void IncidentReportPropertyAttach_101407(ITestContext testContext) {
		testContext.setAttribute("testID", "101407");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");

		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();

		records.switchToReportManager();
		records.reportManager.tabReportedbyPF();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();

		records.switchToReportStatus();
		records.reportStatus.clickPropertyButton();

		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.ClickAttachPropertyReport();

		property.switchToAttachPropertyReport();
		property.attachPropertyPopup.ClickCheckboxOnGrid();
		property.attachPropertyPopup.ClickAttachPropertyReportButton();

		property.switchToPropertyEditEntryPopup();
		property.propertyEditEntry.verifyPropertyListedInGrid();
		property.propertyEntry.closeTheScreen();

		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();

	}

	@Test(groups = "incidentreportScripts", priority = 14)
	public void IncidentReportQAForm_101408(ITestContext testContext) {
		testContext.setAttribute("testID", "101408");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");
		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();
		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.VerifyAtCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");
		records.switchToReportStatus();
		records.reportStatus.ClickQaFormButton();
		records.switchToQuestionnarie();
		records.questionnarie.SelectFormAsTest();
		records.questionnarie.ClickFillFormButton();
		records.switchToQuestionDataEntry();
		records.questionDataEntry.TabOutPF();
		records.questionDataEntry.FillTheQAForm();
		records.questionDataEntry.SaveNClose();
		records.switchToQuestionnarie();
		records.questionnarie.ClickRefreshButton();
		records.questionnarie.VerifySingleQAFormInGrid();
		records.questionnarie.SelectFormAsTest();
		records.questionnarie.ClickFillFormButton();
		records.switchToQuestionDataEntry();
		records.questionDataEntry.TabOutPF();
		records.questionDataEntry.FillTheQAForm();
		records.questionDataEntry.SaveNClose();
		records.switchToQuestionnarie();
		records.questionnarie.ClickRefreshButton();
		Playback.setFocus();
		records.questionnarie.ClickRefreshButton();
		Playback.setFocus();
		records.questionnarie.VerifyDoubleQAFormInGrid();
		records.questionnarie.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();

	}

	@Test(groups = "incidentreportScripts", priority = 15)
	public void IncidentReportSuspectEntry_101396(ITestContext testContext) {
		testContext.setAttribute("testID", "101396");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.VerifyAtCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");

		records.switchToReportStatus();
		records.reportStatus.ClickSuspectButton();
		records.switchToCaseSuspect();
		records.caseSuspect.ClickAddSuspectButton();
		names.switchToSuspectEntry();
		names.suspectEntry.EnterLastNameFirstName();
		names.suspectEntry.Save();
		names.switchToSuspectEntry();
		names.suspectEntry.verifyAdditionSuccesfulStatusMsg();
		names.suspectEntry.SaveAndClose();
		records.switchToCaseSuspect();
		records.caseSuspect.VerifyNameExistInGrid(1);

	}

	@Test(groups = "incidentreportScripts", priority = 16)
	public void IncidentReportSendMailAndReportHistory_101396(ITestContext testContext) {
		testContext.setAttribute("testID", "101396");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.VerifyAtCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");
		records.switchToReportStatus();
		records.reportStatus.ClickSendEmailButton();
		records.sendEmail.enterAtToEmailaddress();
		records.sendEmail.enterAtMassage();
		records.sendEmail.clickOnSendMail();
		records.reportStatus.ClickRefreshButton();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.clickReportHistory();
		records.reportStatus.verifyReportCommentsScreenStatusAsOnHold(0);
		records.reportStatus.verifyReportCommentsScreenStatusAsReportDue(1);

	}
	// Automated by:- Mahesha , Date :- 01/07/2022 ,Module:- Records

	@Test(groups = "incidentreportScripts", priority = 17)
	public void IncidentReportUOFEntry_159622(ITestContext testContext) {
		testContext.setAttribute("testID", "159622");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.VerifyAtCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");

		records.switchToReportStatus();
		records.reportStatus.ClickUseOfForceButton();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.VerifyAtCaseNoUsingJsonReadFile("281602");
		records.uOFSearchHelpWindow.ClickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.VerifyRelatedCaseNoUsingJsonReadFile("281602");
		records.uOFEntry.VerifyAtOfficerPFNo();
		records.uOFEntry.EnterAtLastName();
		records.uOFEntry.EnterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToUOFEntry();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.selectLocationType();
		records.uOFEntry.incidentSubjectInformationTab.selectMedicalAssistanceRequiredAsNo();
		records.uOFEntry.ClickSave();

		records.uOFEntry.VerifyRequiredEntriesTypeOfForceAcknowledgemessage();
		records.switchToUOFEntry();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.SelectListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.VerifyUOFNoGenerated();
		records.uOFEntry.verifyAdditionSuccessfulStatusMsg();
		records.uOFEntry.SaveAndClose();
		records.switchToReportStatus();
		records.reportStatus.clickNamesButton();
		records.switchToCaseNames();
		records.caseNames.VerifyPopupAtSubjectName(0);
		records.caseNames.ClickPopupCopyButton();
		records.caseNames.CloseTheScreen();
		records.switchToReportStatus();
		records.reportStatus.ClickUseOfForceButton();
		records.switchToUOFSearchHelpWindow();
		records.uOFSearchHelpWindow.VerifyAtCaseNoUsingJsonReadFile("281602");
		records.uOFSearchHelpWindow.VerifyAtSubjectName(0);

	}

	@Test(groups = "incidentreportScripts", priority = 18)
	public void IncidentSummaryAndNarrative_159624(ITestContext testContext) {
		testContext.setAttribute("testID", "159624");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.VerifyAtCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");

		records.switchToReportStatus();
		records.reportStatus.ClickSummaryButton();
		home.switchToTextMgmtScreen();
		home.textMgmt.EnterSummaryRichTextInIRReport();
		home.textMgmt.SaveScreen();
		home.switchToTextMgmtScreen();
		home.textMgmt.verifyAdditionSucessfulStatusMsg();
		home.switchToTextMgmtScreen();
		home.textMgmt.Close();
		records.switchToReportStatus();
		records.reportStatus.clickNarrativeButton();
		home.switchToReportStatusTextMgmtScreen();
		home.textMgmt.verifyAutoSavingTextDisplayed();
		home.textMgmt.SelectTemplate();
		home.textMgmt.ClickLoadButton();
		home.textMgmt.EnterNarrativeRichTextInReport();
		home.textMgmt.SaveScreen();
		home.switchToTextMgmtScreen();
		home.textMgmt.verifyAdditionSucessfulStatusMsg();
	}

	@Test(groups = "incidentreportScripts", priority = 19)
	public void IncidentReportArrestAdd_159606(ITestContext testContext) {
		testContext.setAttribute("testID", "159606");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Home");
		loader.navigateToScreen("My Home");

		home.switchToMyHomeScreen();
		home.myHome.SwitchToMyReportsTab();

		home.myHome.myReportsTab.SelectStatusAsOnHold();
		home.myHome.myReportsTab.SelectItemTypeAsReportEntry();
		home.myHome.myReportsTab.ClickSearchButton();
		home.myHome.myReportsTab.VerifyGridRowStatusAsOnHold();
		home.myHome.myReportsTab.VerifyAtCaseNoUsingJsonReadFile("281602");
		home.myHome.myReportsTab.VerifyGridRowTypeAsIncidentReportByCaseNoUsingJSONReadFile("281602");
		home.myHome.myReportsTab.selectAtCaseNoUsingJsonReadFile("281602");

		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestEntry();
		names.arrestEntry.closeCallActivitiesPopupIfExist();
		names.arrestEntry.VerifyPopupAtCharge(0);
		names.arrestEntry.ClickPopupGridCheckboxUsingAtCharge();
		names.arrestEntry.ClickPopupCopyButton();
		names.arrestEntry.enterAtNameID();
		names.arrestEntry.switchToArrestTab();
		names.arrestEntry.arrestTab.selectHowAsOnViewArrest();
		names.arrestEntry.arrestTab.VerifyAtOfficer1();
		names.arrestEntry.arrestTab.selectArmed();
		names.arrestEntry.arrestTab.EnterOffenderID();
		names.arrestEntry.arrestTab.tabTheBookingDateAndTime();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.ClickAtChargeInGrid();
		names.arrestEntry.chargeTab.EnterCountAs1();
		names.arrestEntry.chargeTab.SelectAtNIBRS();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.switchToArrestEntry();
		names.arrestEntry.Save();
		names.arrestEntry.verifyAdditionSucessfulStatusMsg();
		names.switchToArrestEntry();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.VerifyChargeNIBRSCheckboxCheckedInGrid(0);
		names.arrestEntry.chargeTab.tabTheArrestLocation();
		names.arrestEntry.chargeTab.TabTheOffenseDateAndTime();
		names.arrestEntry.chargeTab.enterAtCharge1();
		names.arrestEntry.chargeTab.selectCharge1fromCodedSearch();
		names.switchToArrestEntry();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.SelectNIBRS();
		names.arrestEntry.chargeTab.EnterCountAs2();
		names.arrestEntry.chargeTab.selectStatusAsArrestedAdult();
		names.arrestEntry.chargeTab.clickTheAddButton();
		names.switchToArrestEntry();
		names.arrestEntry.Save();
		names.switchToArrestEntry();
		names.arrestEntry.switchToChargeTab();
		names.arrestEntry.chargeTab.VerifyChargeNIBRSCheckboxCheckedInGrid(0);
		names.arrestEntry.chargeTab.VerifyChargeNIBRSCheckboxUnCheckedInGrid(1);
		names.arrestEntry.Save();
		names.switchToArrestEntry();
		names.arrestEntry.verifyUpdateSucessfulStatusMsg();

		records.switchToReportStatus();
		records.reportStatus.ClickArrestButton();
		names.switchToArrestSearchHelpWindow();
		names.arrestSearchHelpWindow.verifyNameByLastNameAndFirstName();
	}

// Automated by TesterName :- Mani Date :-01/07/2022 Sprint:-1 Quarter:-1
	// Module:-
	@Test(groups = { "DirectReportSuspectAndProfileSearchFunctional" }, priority = 1)
	public void DirectReportEntryScreenFunctionality_290842a(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "290842");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter743AsFalse();
		settings.switchToSystemParamter();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Direct Report Entry");
		records.switchToDirectReportEntry();
		records.directReportEntry.tabOutReportedDatetime();
		records.directReportEntry.clickSave();
		records.directReportEntry.VerifyRequiredEntriesAcknowledgeMessage();
		records.switchToDirectReportEntry();
		records.directReportEntry.enterAtLocation();
		records.directReportEntry.Save();
		records.directReportEntry.verifyAdditionSuccessfulAcknowledgeMessage();
		records.switchToDirectReportEntry();
		String caseNo1 = records.directReportEntry.readCaseNo();
		records.switchToReportManager();
		records.reportManager.clearReportedPF();
		records.reportManager.enterAtReportedByPF1();
		records.reportManager.VerifyPFNotRelatedToConfirmPopupMessage();
		String CaseNo2 = records.reportManager.readCaseNo();
		records.reportManager.VerifyCurrentDate();
		records.reportManager.verifyCaseNoIsEqual(caseNo1, CaseNo2);
		records.reportManager.selectAtType();
		records.reportManager.VerifyAtType();
		records.reportManager.clearReportedPF();
		records.reportManager.enterAtReportedByPF1();
		records.reportManager.VerifyPFNotRelatedToConfirmPopupMessage();
		records.reportManager.verifyAtReportedByPF();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.verifyLabelStatusOfIncidentReportAsOnHold();
		records.reportStatus.close();
		records.switchToDirectReportEntry();

	}

	@Test(groups = { "DirectReportSuspectAndProfileSearchFunctional" }, priority = 2)
	public void DirectReportEntryScreenFunctionalitySysParameterAsTrue_290842b(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "290842b");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter743AsTrue();
		settings.switchToSystemParamter();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Direct Report Entry");
		popup.acknowledge.sysParameterAcknowledgeOk();
		records.switchToDirectReportEntry();
		records.directReportEntry.VerifyCaseNoFieldDisabled();
		records.directReportEntry.verifyLocationFieldDisabled();
		records.directReportEntry.verifyReportedDatetimeDisabled();
	}

	// Automated by TesterName :- Mani Date :-01/10/2022 Sprint:-1 Quarter:-1
	// Module:-Records
	// RecordsModuleProfileSearchScreenFunctionality - group name
	@Test(groups = { "DirectReportSuspectAndProfileSearchFunctional" })
	public void vehicleProfileFunctionality_273481(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273481");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Profile Search");
		records.switchToProfileSearch();
		records.profileSearch.ClickAddNew();
		records.switchToVehicleProfileEntry();
		records.vehicleProfile.EnterAtCallNo();
		records.vehicleProfile.TabDateTime();
		records.vehicleProfile.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.verifyAtCallNo();
		records.callEntry.closeScreen();
		records.switchToVehicleProfileEntry();
		records.vehicleProfile.EnterAtOfficer();
		records.vehicleProfile.EnterAtPlateNo();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.clickSelectButton();
		records.switchToVehicleProfileEntry();
		records.vehicleProfile.verifyPlateTypeIsDisabled();
		records.vehicleProfile.VerifyReasonForSearchCheckboxDisabled();
		records.vehicleProfile.VerifyResultOfSearchCheckboxDisabled();
		records.vehicleProfile.VerifyScopeOfSearchCheckboxDisabled();
		records.vehicleProfile.enterAtOptionalRaceInfo();
		records.vehicleProfile.SelectDriverGender();
		records.vehicleProfile.EnterAtTotalNoOfOccupants();
		records.vehicleProfile.SelectAssignmentStatus();
		records.vehicleProfile.SelectAtReasonForStop();
		records.vehicleProfile.selectResidency();
		records.vehicleProfile.enterAtDriverYearOfBirth();
		records.vehicleProfile.selectSpeedDeterminedBy();
		records.vehicleProfile.SelectResultOfStop();
		records.vehicleProfile.SelectDurationOfStop();
		records.vehicleProfile.SelectRoadClassification();
		records.vehicleProfile.enterAtCitationNo();
		records.vehicleProfile.enterAtCustom3();
		records.vehicleProfile.clickTowLabel();
		settings.switchToRepositoryEntry();
		settings.repositoryEntry.selectFieldUsageAsMandatory();
		settings.repositoryEntry.saveNClose();
		records.switchToVehicleProfileEntry();
		records.vehicleProfile.SelectSearchAsResultStopAsYes();
		records.vehicleProfile.ClickDrugsDrugParaphernaliaCheckbox();
		records.vehicleProfile.ClickInventoryCheckbox();
		records.vehicleProfile.ClickVehicleCheckbox();
		records.vehicleProfile.ClickReasonableSuspicionCheckbox();
		records.vehicleProfile.verifyTowLabelAsRedColor();
		records.vehicleProfile.clickSaveButton();
		records.vehicleProfile.verifyRequiredEntriesMissingTowAcknowledgeMessage();
		records.switchToVehicleProfileEntry();
		records.vehicleProfile.SelectAtTow();
		records.vehicleProfile.Save();
		records.switchToVehicleProfileEntry();
		// records.vehicleProfile.verifyAdditionSuccessfulMessageInFooterStatus();
		// //Validation Failed in Automation DB So hiding this line
		records.vehicleProfile.VerifyAtTow();
		records.vehicleProfile.VerifyAtSelectReasonForStop();
		String profileNo = records.vehicleProfile.readProfileNo();
		records.switchToProfileSearch();
		records.profileSearch.ClickBack();
		records.profileSearch.enterAtProfileNo(profileNo);
		records.switchToProfileSearch();
		records.profileSearch.ClickSearch();
		records.profileSearch.VerifyProfileNo(profileNo, 0);
		records.profileSearch.VerifyAtCallNo(0);
	}

	// Automated by TesterName :- Mani Date :- Sprint:- Quarter:- Module:-
	@Test(groups = { "DirectReportSuspectAndProfileSearchFunctional" })
	public void suspectSearchScreenFunctionality_243236(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "243236");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");

		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.enterAtLocation();

		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();

		records.switchToCallEntry();

		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtLastName();
		records.callEntry.callEntryNamesTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToCallEntry();

		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.selectActivityAsArrested();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.clickSaveNamesTab();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();

		records.callEntry.switchToSuspectsTab();
		records.callEntry.callEntrySuspectsTab.clickAddSuspects();
		names.switchToSuspectEntry();
		names.suspectEntry.EnterAtLastName1FirstName1();
		names.suspectEntry.EnterAge();
		names.suspectEntry.enterAtAddress();
		names.suspectEntry.EnterAtWeight();
		names.suspectEntry.EnterAtHeight();
		names.suspectEntry.SelectEyes();
		names.suspectEntry.SaveAndClose();
		records.switchToCallEntry();
		records.callEntry.switchToSuspectsTab();
		records.callEntry.callEntrySuspectsTab.clickRefresh();
		records.callEntry.callEntrySuspectsTab.VerifyAtName1InGrid(0);
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.verifySuspectsTabBlueColor();
		records.caseUpdate.SaveNClose();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.verifySuspectTabIsBlueColor();
		records.callEntry.saveNClose();

		loader.navigateToScreen("Suspect Search");
		records.switchToSuspectSearch();
		records.suspectSearch.ClickSearchButton();
		records.suspectSearch.SelectRowByAtName();
		names.switchToSuspectEntry();
		names.suspectEntry.verifyAtSuspectName();
		names.suspectEntry.VerifyAtHeightandWeight();
		names.suspectEntry.VerifyAtAddress();
		names.suspectEntry.clickCallNoInfoIcon();
		records.switchToCallEntry();
		records.callEntry.verifySuspectTabIsBlueColor();
		records.callEntry.switchToSuspectsTab();
		records.callEntry.callEntrySuspectsTab.VerifyAtName1InGrid(0);
		records.callEntry.closeScreen();
		names.switchToSuspectEntry();
		names.suspectEntry.clickCaseNoInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.verifySuspectsTabBlueColor();

	}

	// reworked by:-Dinesh , Date :-01/10/2022 , Quarter:-1 , Sprint:-1 , Module:-
	// Records.
	@Test(groups = { "RecordRequestCompleteFunctionality" }, priority = 1)
	public void createTwoRecordRequestForOneCase_253686(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253686");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		String readCaseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.closeTheScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToScreen("Records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickAddNewButton();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.tabOutReceivedDate();
		records.openRecordsRequestEntry.selectAtRequestType();
		records.openRecordsRequestEntry.enterCaseNoByActiveData(readCaseNo);
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.Save();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.verifyReceivedDate();
		records.openRecordsRequestEntry.verifyAtRequestedType();
		records.openRecordsRequestEntry.verifyAtCaseNo(readCaseNo);
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtFirstName();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtRequestedByAddress();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtRequestedByCSZ();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtRequestedByPincode();
		records.openRecordsRequestEntry.Close();
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickAddNewButton();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.tabOutReceivedDate();
		records.openRecordsRequestEntry.selectAtRequestType();
		records.openRecordsRequestEntry.enterCaseNoByActiveData(readCaseNo);
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.Save();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.verifyReceivedDate();
		records.openRecordsRequestEntry.verifyAtRequestedType();
		records.openRecordsRequestEntry.verifyAtCaseNo(readCaseNo);
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtFirstName();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtRequestedByAddress();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtRequestedByCSZ();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtRequestedByPincode();
		records.openRecordsRequestEntry.Close();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterCaseNoByActiveData(readCaseNo);
		records.caseSearch.clickSearch();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToCaseUpdateRequestTab();
		records.caseUpdate.caseUpdateRequestTab.verifyAtRequestedByInGrid(0);
		records.caseUpdate.caseUpdateRequestTab.verifyAtRequestedByInGrid(1);

	}

	// Automated by:- Dinesh , Date :-01/10/2022 , Quarter:-1 , Sprint:-1 ,
	// Module:-Records .

	@Test(groups = { "RecordRequestCompleteFunctionality" }, priority = 2)
	public void addNewRecordRequestAndSearch_291024(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "291024");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickAddNewButton();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.tabOutReceivedDate();
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.Save();
		records.switchToOpenRecordsRequestEntry();
		String readRequestNo = records.openRecordsRequestEntry.readRequestNo();
		System.out.println(readRequestNo);
		records.openRecordsRequestEntry.verifyReceivedDate();
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtFirstName();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtRequestedByAddress();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtRequestedByCSZ();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtRequestedByPincode();
		records.openRecordsRequestEntry.Close();
		// Record Request Search screen
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickBackButton();
		records.openRecordsRequest.enterRequestByActiveData(readRequestNo);
		records.openRecordsRequest.clickSearchButton();
		records.openRecordsRequest.selectAtRequestByInGrid();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.verifyRequestNo(readRequestNo);
		records.openRecordsRequestEntry.verifyReceivedDate();
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtFirstName();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtRequestedByAddress();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtRequestedByCSZ();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtRequestedByPincode();
	}

	// Automated by:-Dinesh , Date :-01/11/2022 , Quarter:-Q1 , Sprint:-1 ,
	// Module:-Records .

	@Test(groups = { "RecordRequestCompleteFunctionality" }, priority = 3)
	public void searchRecordRequestByRequestNoAndName_291077(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "291077");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.enterAtRequestNo();
		records.openRecordsRequest.clickSearchButton();
		records.openRecordsRequest.selectAtRequestNoInGrid();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.verifyAtRequestNo();
		records.openRecordsRequestEntry.Close();
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickBackButton();
		records.openRecordsRequest.enterAtLastName();
		records.openRecordsRequest.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickSearchButton();
		records.openRecordsRequest.selectAtRequestByInGrid();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtFirstName();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtRequestedByAddress();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtRequestedByCSZ();
		records.openRecordsRequestEntry.requestDetailsTab.verifyAtRequestedByPincode();

	}

	// Automated by:-Dinesh , Date :-01/12/2022 , Quarter:-Q1 , Sprint:-1 ,
	// Module:-Records .

	@Test(groups = { "RecordRequestCompleteFunctionality" }, priority = 4)
	public void RecordRequestEntryActivityHistoryTabFunctionality_291183(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "291183");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.enterAtLastName();
		records.openRecordsRequest.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickSearchButton();
		records.openRecordsRequest.selectAtRequestByInGrid();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.SwitchToActivityHistoryTab();
		records.openRecordsRequestEntry.activityHistoryTab.TabOutUpdateDate();
		records.openRecordsRequestEntry.activityHistoryTab.TabOutUpdatedByCode();
		records.openRecordsRequestEntry.activityHistoryTab.EnterAtDuration();
		records.openRecordsRequestEntry.activityHistoryTab.EnterAtMinDuration();
		records.openRecordsRequestEntry.activityHistoryTab.EnterComments();
		records.openRecordsRequestEntry.activityHistoryTab.ClickAddButton();
		records.openRecordsRequestEntry.activityHistoryTab.verifyUpdatedDate();
		records.openRecordsRequestEntry.activityHistoryTab.verifyUpdatedBy();
		records.openRecordsRequestEntry.activityHistoryTab.VerifyAddedCommentsInGrid();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.Save();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.SwitchToActivityHistoryTab();
		records.openRecordsRequestEntry.activityHistoryTab.verifyUpdatedDate();
		records.openRecordsRequestEntry.activityHistoryTab.verifyUpdatedBy();
		records.openRecordsRequestEntry.activityHistoryTab.VerifyAddedCommentsInGrid();
		// System comments Functionality
		records.openRecordsRequestEntry.activityHistoryTab.ClickShowSystemCommentsCheckbox();
		records.openRecordsRequestEntry.activityHistoryTab.verifyTopSystemComment();
		records.openRecordsRequestEntry.activityHistoryTab.verifyUpdatedBy();
		records.openRecordsRequestEntry.activityHistoryTab.VerifyAddedCommentsInGrid1();

	}

	// Automated by:-Dinesh , Date :-01/13/2022 , Quarter:-Q1 , Sprint:-1 ,
	// Module:-Records .

	@Test(groups = { "RecordRequestCompleteFunctionality" }, priority = 5)
	public void RecordRequestEntryFeesTabFunctionality_291329(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "291329");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.enterAtLastName();
		records.openRecordsRequest.enterAtFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.selectNameByLastNameAndFirstName();
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.clickSearchButton();
		records.openRecordsRequest.selectAtRequestByInGrid();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.SwitchToFeesTab();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.selectAtItemCode();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.EnterAtQty();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.EnterAtRate();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.EnterAtAmount();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.EnterAtCondition();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.ClickPrintConditions();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.ClickAddButton();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.verifyAtItemCodeInGrid();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.verifyAtConditionsInGrid();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.Save();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.SwitchToFeesTab();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.verifyAtItemCodeInGrid1();
		records.openRecordsRequestEntry.openRecordRequestFeesTab.verifyAtConditionsInGrid();
	}

	// Automated by:-Dinesh , Date :-01/18/2021 , Quarter:-1 , Sprint:-2 ,
	// Module:-Records .

	@Test(groups = { "UnitHistorySearchFunctionality" })
	public void UnitHistorySearchFunctionality_291425(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "291425");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
//					records.callSearch.clickSearchButton();
//					records.callSearch.ClickAtCallNoInGrid();
		records.switchToCallEntry();
		records.callEntry.switchToUnitsTab();
		List<String> readUnitGridEntry = records.callEntry.callEntryUnitsTab.readUnitGridEntry();
		records.callEntry.closeScreen();
		// Unit History Search
		loader.navigateToScreen("Unit History Search");
		records.switchToUnitHistorySearch();
		records.unitHistorySearch.clearActionFromDateAndTime();
		records.unitHistorySearch.enterAtOfficerNo();
		records.unitHistorySearch.enterAtUnitName();
		records.unitHistorySearch.clickSearchButton();
		records.unitHistorySearch.clickExpandButton();
		records.unitHistorySearch.verifyActionDateAndTimeFromGrid(readUnitGridEntry);
		records.unitHistorySearch.verifyUserCCFromGrid(readUnitGridEntry);
		records.unitHistorySearch.verifyDispositionFromGrid(readUnitGridEntry);

	}

	// Updated by:-Abinaya , Date :-01/07/2022 , Quarter:-1 , Sprint:-1 , Module:-
	// Records.
	@Test(groups = { "CaseUpdateIcons" })
	public void CaseUpdateRecordLevelPermissionALCIcon_149397(ITestContext testContext) {
		testContext.setAttribute("testID", "149397");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickALCIcon();
		home.switchToALCScreen();
		home.aLCScreen.ClickPFTab();
		home.aLCScreen.aLCPFTab.SelectAtAction();
		home.aLCScreen.aLCPFTab.EnterAtPFCode();
		home.aLCScreen.aLCPFTab.ClickAddButton();
		home.aLCScreen.aLCPFTab.VerifyAtActionInGrid(0);
		home.aLCScreen.aLCPFTab.selectAtActionInGrid();
		home.aLCScreen.aLCPFTab.SelectAtAction1();
		home.aLCScreen.aLCPFTab.ClickUpdateButton();
		home.switchToALCScreen();
		home.aLCScreen.SaveScreen();
		home.aLCScreen.VerifySuccessfulStatusMessage();
		home.aLCScreen.clickResetButton();
		home.aLCScreen.ClickPFTab();
		home.aLCScreen.aLCPFTab.VerifyActionAsDenyInGrid(0);
		home.switchToALCScreen();
		home.aLCScreen.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.logout();

		// Verify ALCIcon PF tab as "DENY"
		objectIdentification.windowHandle.switchToWindowUsingURL("Police");
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.caseSearch.Verify13AccessRestrictedByAUTOAckMsg();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.logout();

		objectIdentification.windowHandle.switchToWindowUsingURL("Police");
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickALCIcon();
		home.switchToALCScreen();
		home.aLCScreen.ClickPFTab();
		home.aLCScreen.aLCPFTab.deleteAtAction1();
		home.switchToALCScreen();
		home.aLCScreen.SaveScreen();
		home.aLCScreen.ClickGroupTab();
		home.aLCScreen.aLCGroupTab.selectActionAsDeny();
		home.aLCScreen.aLCGroupTab.selectAtDivision();
		home.aLCScreen.aLCGroupTab.selectAtSection();
		home.aLCScreen.aLCGroupTab.selectAtSquad();
		home.aLCScreen.aLCGroupTab.selectAtTitle();
		home.aLCScreen.aLCGroupTab.ClickAdd();
		home.switchToALCScreen();
		home.aLCScreen.SaveScreen();
		home.switchToALCScreen();
		home.aLCScreen.VerifySuccessfulStatusMessage();
		home.aLCScreen.clickResetButton();
		home.aLCScreen.ClickGroupTab();
		home.aLCScreen.aLCGroupTab.verifyActionAsDenyInGrid(0);
		home.switchToALCScreen();
		home.aLCScreen.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.logout();

		// Verify ALCICon Group tab as "DENY"
		objectIdentification.windowHandle.switchToWindowUsingURL("Police");
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.caseSearch.Verify13AccessRestrictedByAUTOAckMsg();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.logout();

		// Verify Tab color of the screen due to ALC Icon
		objectIdentification.windowHandle.switchToWindowUsingURL("Police");
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyReportingTabInBlueColor();
		records.caseUpdate.ClickALCIcon();
		records.switchToAccessListControl();
		records.aLCScreen.SaveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyReportingTabInBlueColor();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		records.switchToCaseSearch();
		records.caseSearch.ClickReset();
		records.caseSearch.enterAtCaseNo();
		records.caseSearch.enterToDateAsCurrentDate();
		records.caseSearch.clickSearch();
		records.caseSearch.ClickPrint();
		home.switchToSelectReport();
		home.selectReport.VerifyRecordCount("1");

	}

	// Updated by:-Abinaya , Date :-01/10/2022 , Quarter:-1 , Sprint:-1 , Module:-
	// Records.

	@Test(groups = { "CaseUpdateIcons" })
	public void CaseUpdateNotificationIcon_290922(ITestContext testContext) {
		testContext.setAttribute("testID", "290922");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickNotificationIcon();
		home.switchToNotificationScreen();
		home.notification.EnterStartDateAsCurrentDate();
		home.notification.EnterExpireDateAsFutureDate();
		home.notification.ClickPFRadioButton();
		home.notification.verifyPFfieldIsDisplayed();
		home.notification.EnterAtPFCode();
		home.notification.selectAtReportingPeriod();
		home.notification.selectAtNotifyEvent();
		home.notification.enterAtReason();
		home.notification.clickAddButton();
		home.notification.SaveScreen();
		home.switchToNotificationScreen();

		home.notification.CloseScreen(); // Added due to DB sync issue in Automation DB
		records.switchToCaseUpdate();
		records.caseUpdate.ClickNotificationIcon();
		home.switchToNotificationScreen();
		home.notification.SaveScreen(); // Added due to DB sync issue in Automation DB

		home.notification.VerifySuccessfulBottomMessage();
		home.notification.verifyAtNotificationListDetailsInGrid(0);
		home.notification.VerifyAtPeriod(0);
		home.notification.VerifyAtNotifyEvent(0);
		home.notification.VerifyStartDateAsCurrentDate(0);
		home.notification.VerifyExpireDateAsFutureDate(0);
		home.notification.verifyAtRequestedByInGrid();
		home.switchToNotificationScreen();
		// home.notification.verifyAtReasonInGrid();
		home.notification.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();

		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickNotificationIcon();
		home.switchToNotificationScreen();
		home.notification.clickResetButton();
		home.notification.verifyAtRequestPFCode();
		home.notification.selectAtGridRowByNotifyEvent();
		home.notification.verifyPFIsSelected();
		home.notification.verifyAtPFCode();
		home.notification.verifyAtReportingPeriod();
		home.notification.selectAtReportingPeriod1();
		home.notification.verifyAtNotifyEvent();
		home.notification.verifyAtReason();
		home.notification.clickAddButton();
		home.notification.SaveScreen();
		home.notification.VerifySuccessfulBottomMessage();
		home.notification.VerifyAtPeriod1(0);

	}

	// Updated by:-Abinaya , Date :-01/11/2022 , Quarter:-1 , Sprint:-1 , Module:-
	// Records.

	@Test(groups = { "CaseUpdateIcons" })
	public void CaseUpdateK9ReportIcon_275254(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "275254");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickk9ReportIcon();
		k9.switchToReportEntry();
		k9.reportEntry.selectAtK9Handler();
		k9.reportEntry.verifyCallInfoIconIsDisplayed();
		k9.reportEntry.verifyAddressInfoIconIsDisplayed();
		k9.reportEntry.selectAtTypeOfIncident();
		k9.reportEntry.clickAllTabsBeforeSave();
		// k9.reportEntry.detectionTab.selectDetectionTypeAsCheckAll();
		k9.switchToReportEntry();
		k9.reportEntry.saveScreen();
		k9.switchToReportEntry();
		k9.reportEntry.VerifyAdditionSuccessfulMessage();
		k9.reportEntry.clickOnDetectionTab();
		k9.reportEntry.detectionTab.verifyDetectionTypeDefaultSelectedAsOthers();
		k9.switchToReportEntry();
		k9.reportEntry.verifyAtCallNo();
		k9.reportEntry.verifyAtDateTimeAsReportedDateTime();
		k9.reportEntry.verifyAtK9Handler();
		k9.reportEntry.verifyAtTypeOfIncident();
		k9.reportEntry.close();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyK9ReportIconRedColour();
		records.caseUpdate.clickk9ReportIcon();
		k9.switchToK9Reports();
		k9.k9Reports.verifyAtCaseNoInGrid();
		k9.k9Reports.verifyAtApprovalStatusInGrid();
		k9.k9Reports.clickAtCaseNoInGrid();
		k9.switchToReportEntry();
		k9.reportEntry.clickAllTabs();
		k9.reportEntry.clickResetButton();
		k9.reportEntry.verifyAtCallNo();
		k9.reportEntry.verifyAtDateTimeAsReportedDateTime();
		k9.reportEntry.verifyAtK9Handler();
		k9.reportEntry.verifyAtTypeOfIncident();
		k9.reportEntry.clickOnDetectionTab();
		k9.reportEntry.detectionTab.verifyDetectionTypeDefaultSelectedAsOthers();

	}

	// Updated by:-Abinaya , Date :-01/12/2022 , Quarter:-1 , Sprint:-1 , Module:-
	// Records.

	@Test(groups = { "CaseUpdateIcons" })

	public void CaseUpdateCrashIcon_255341(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "255341");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		String date = records.caseUpdate.readReportedDate();
		String time = records.caseUpdate.readReportedTime();
		records.caseUpdate.ClickCrashIcon();
		trafficWI.switchToCrashEntry();
		trafficWI.crashEntry.enterAtOfficer();
		trafficWI.crashEntry.clickAllTabBeforeSave();
		trafficWI.crashEntry.saveScreen();
		trafficWI.switchToCrashEntry();
		trafficWI.crashEntry.verifyAtJuris();
		trafficWI.crashEntry.verifyAtCaseNo();
		trafficWI.crashEntry.verifyAtCallNo();
		trafficWI.crashEntry.verifyAtLocation();
		trafficWI.crashEntry.verifyAtKSOfficer();
		trafficWI.crashEntry.verifyReportedDateAndTime(date, time);
		String traCSRefNo = trafficWI.crashEntry.readTraCSRefNo();
		trafficWI.crashEntry.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyCrashIconColorChange();
		records.caseUpdate.ClickCrashIcon();
		trafficWI.switchToCrashSearchHelpWindow();
		trafficWI.crashSearchHelpWindow.verifyBackButtonDisabled();
		trafficWI.crashSearchHelpWindow.verifyResetButtonDisabled();
		trafficWI.crashSearchHelpWindow.verifyAddNewButtonEnabled();
		trafficWI.crashSearchHelpWindow.verifyAtCaseNo(0);
		trafficWI.crashSearchHelpWindow.verifyAtApprovalStatusInGrid();
		trafficWI.crashSearchHelpWindow.clickAtCaseNoInGrid();
		trafficWI.switchToCrashEntry();
		trafficWI.crashEntry.clickResetButton();
		trafficWI.crashEntry.verifyAtJuris();
		trafficWI.crashEntry.verifyTracsRefNo(traCSRefNo);
		trafficWI.crashEntry.verifyAtCaseNo();
		trafficWI.crashEntry.verifyAtCallNo();
		trafficWI.crashEntry.verifyAtLocation();
		trafficWI.crashEntry.verifyAtKSOfficer();
		trafficWI.crashEntry.verifyReportedDateAndTime(date, time);

	}

	// Updated by:-Abinaya , Date :-01/12/2022 , Quarter:-1 , Sprint:-1 , Module:-
	// Records.
	@Test(groups = { "CaseUpdateIcons" })
	public void CaseUpdateSummonsOrCitationIcon_207328(ITestContext testContext) {
		testContext.setAttribute("testID", "207328");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		// RecordsScripts.RecordsTestContext = TrafficWITestContext;
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickCitationIcon();
		trafficWI.switchToCitationEntry();
		trafficWI.citationEntry.verifyAtCaseNo();
		trafficWI.citationEntry.verifyAtCallNo();
		trafficWI.citationEntry.selectAtCEType();
		trafficWI.citationEntry.enterDate();
		trafficWI.citationEntry.enterTime();
		trafficWI.citationEntry.enterAtNameID();
		trafficWI.citationEntry.switchToViolationsTab();
		trafficWI.citationEntry.violationsTab.enterAtLocation();
		trafficWI.citationEntry.violationsTab.tabOutOfficer();
		trafficWI.citationEntry.violationsTab.enterAtCharge();
		trafficWI.switchToCitationArrest();
		trafficWI.citationArrest.selectArmed();
		trafficWI.citationArrest.saveCloseScren();
		trafficWI.switchToCitationEntry();
		trafficWI.citationEntry.switchToViolationsTab();
		trafficWI.citationEntry.violationsTab.verifyAtNIBRSWI();
		trafficWI.citationEntry.violationsTab.clickAddButton();
		trafficWI.citationEntry.violationsTab.verifyViolationAddedGrid();
		trafficWI.citationEntry.save();
		// trafficWI.citationEntry.Yes();
		trafficWI.switchToCitationEntry();
//			        trafficWI.citationEntry.getCitationNo(Playback.getTestContextAttribute("citationNo"));
//			        trafficWI.citationEntry.getCENo(Playback.getTestContextAttribute("CENo"));
		String CENo = trafficWI.citationEntry.readCENo();
		// String citationNo=null;
		// trafficWI.citationEntry.getCitationNo(citationNo);
		trafficWI.citationEntry.verifyAtCaseNo();
		trafficWI.citationEntry.verifyAtCallNo();
		trafficWI.citationEntry.verifyAtCEType();
		trafficWI.citationEntry.closeCitationEntryScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyCitationIconColorChange();
		records.caseUpdate.ClickCitationIcon();
		trafficWI.switchToCitationSearchHelpWindow();
		trafficWI.citationSearchHelpWindow.verifyAtCallNo(0);
		// trafficWI.citationSearchHelpWindow.verifyCitationNoUsingCallNo(citationNo);
		// //issue reported
		trafficWI.citationSearchHelpWindow.verifyCENoUsingCallNo(CENo);
		trafficWI.citationSearchHelpWindow.clickAtCETypeInGrid();
		trafficWI.switchToCitationEntry();
		trafficWI.citationEntry.clickResetButton();
		trafficWI.citationEntry.verifyAtCaseNo();
		trafficWI.citationEntry.verifyAtCallNo();
		trafficWI.citationEntry.verifyAtCEType();
		trafficWI.citationEntry.verifyCENo(CENo);
		// trafficWI.citationEntry.verifyCitationNo(citationNo);
		trafficWI.citationEntry.verifyCurrentDate();
		trafficWI.citationEntry.switchToNonTrafficAllTabs();
		trafficWI.citationEntry.saveandCloseTheScreen();
		trafficWI.switchToCitationSearchHelpWindow();

	}

	// Updated by:-Abinaya , Date :-01/13/2022 , Quarter:-1 , Sprint:-1 , Module:-
	// Records.

	@Test(groups = { "CaseUpdateIcons" })
	public void CaseUpdateCoronerIcon_268953(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "268953");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCoronerIcon();
		coroner.switchToCoronerCaseEntry();
		coroner.coronerCaseEntry.verifyAtRMSCaseNo();
		coroner.coronerCaseEntry.enterAtLastName();
		coroner.coronerCaseEntry.enterAtFirstName();
		names.nameSearchHelpWindow.SelectNameByNameID();
		coroner.switchToCoronerCaseEntry();
		coroner.coronerCaseEntry.verifyAtSex();
		coroner.coronerCaseEntry.verifyAtAge();
		coroner.coronerCaseEntry.verifyAtAddress();
		coroner.coronerCaseEntry.clickOnMainTab();
		coroner.coronerCaseEntry.coronerCaseEntryMainTab.enterAtInvestigator();
		coroner.coronerCaseEntry.coronerCaseEntryMainTab.enterDateAssignedAsCurrentDate();
		coroner.coronerCaseEntry.coronerCaseEntryMainTab.verifyNextReviewDateAs7DaysAfterAssign();
		coroner.coronerCaseEntry.coronerCaseEntryMainTab.enterAtLocationOfDeath();
		coroner.coronerCaseEntry.coronerCaseEntryMainTab.selectAtCauseOfDeath();
		coroner.coronerCaseEntry.coronerCaseEntryMainTab.selectAtLocalMortuary();
		coroner.coronerCaseEntry.coronerCaseEntryMainTab.selectAtSubstanceInvolved();
		coroner.coronerCaseEntry.coronerCaseEntryMainTab.selectMannerOfDeath();
		coroner.coronerCaseEntry.coronerCaseEntryMainTab.enterRemarks();
		coroner.coronerCaseEntry.save();
		coroner.switchToCoronerCaseEntry();
		coroner.coronerCaseEntry.verifyInvestNoGenerated();
		coroner.coronerCaseEntry.clickOnAllTheTabs();
		coroner.coronerCaseEntry.verifyPropertyTabEnabled();
		String InvestNo = coroner.coronerCaseEntry.readInvestNo();
		coroner.coronerCaseEntry.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyCoronerIconInBlueColour();
		records.caseUpdate.clickCoronerIcon();
		coroner.switchToCoronerSearchHelpWindow();
		coroner.coronerCaseSearch.verifyAtCaseStatus(0);
		coroner.coronerCaseSearch.selectGridRowByName();
		coroner.switchToCoronerCaseEntry();
		coroner.coronerCaseEntry.clickResetButton();
		coroner.coronerCaseEntry.verifyInvestNo(InvestNo);
		coroner.coronerCaseEntry.verifyAtRMSCaseNo();
		coroner.coronerCaseEntry.verifyAtName();
		coroner.coronerCaseEntry.verifyAtSex();
		coroner.coronerCaseEntry.verifyAtAge();
		coroner.coronerCaseEntry.verifyAtAddress();
		coroner.coronerCaseEntry.clickOnAllTheTabs();
		coroner.coronerCaseEntry.saveNClose();
		coroner.switchToCoronerSearchHelpWindow();

	}

	// Updated by:-Abinaya , Date :-01/17/2022 , Quarter:-1 , Sprint:-1 , Module:-
	// Records.

	@Test(groups = { "CaseUpdateIcons" })
	public void CaseUpdateCMIcon_135716(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "135716");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickCMIcon();
		cm.switchToCaseFolder();
		cm.caseFolder.verifyAtCaseNo();
		cm.caseFolder.clickAssignmentTab();
		cm.caseFolder.caseFolderAssignmentTab.selectAtDivision();
		cm.caseFolder.caseFolderAssignmentTab.selectAtSection();
		cm.caseFolder.caseFolderAssignmentTab.tabOutSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.verifyAtSupervisorPFCode();
		cm.caseFolder.caseFolderAssignmentTab.enterAtPrimeInvestigator();
		cm.caseFolder.caseFolderAssignmentTab.tabOutDateAssignedTime();
		// cm.caseFolder.clickSaveButton();
		// cM.caseFolder.caseFolderAssignmentTab.verifyNextReviewDateAcknowledgeMessage();
		// //next review date acknowledge message not showing
		// cm.caseFolder.caseFolderAssignmentTab.tabOutNextReviewDate();
		// cm.caseFolder.caseFolderAssignmentTab.verifyNextReviewDateAs14DayFutureFromCurrentDate();
		// // After Tabout DateAssigned review date bind by default
		cm.caseFolder.save();
		cm.switchToCaseFolder();
		String investNo = cm.caseFolder.readInvestNo();
		cm.caseFolder.verifyCaseStatusColorAsRed();
		cm.caseFolder.saveNclose();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickCMIcon();
		cm.switchToCaseFolder();
		cm.caseFolder.clickResetButton();
		cm.caseFolder.verifyAtjuris();
		cm.caseFolder.verifyAtCaseNo();
		cm.caseFolder.verifyInvestNo(investNo);
		cm.caseFolder.verifyAssignedDate();
		cm.caseFolder.clickAssignmentTab();
		cm.caseFolder.caseFolderAssignmentTab.verifyAtSupervisorPFCode();
		cm.caseFolder.caseFolderAssignmentTab.verifyAtDivision();
		cm.caseFolder.caseFolderAssignmentTab.verifyAtSection();
		cm.caseFolder.caseFolderAssignmentTab.verifyAtCaseStatus();
		cm.switchToCaseFolder();
		cm.caseFolder.saveNclose();
		records.switchToCaseUpdate();

	}

	// Updated by:-Abinaya , Date :-01/19/2022 , Quarter:-1 , Sprint:-2 , Module:-
	// Records.
	@Test(groups = { "CallEntryIcons" })
	public void CallEntryRecordLevelPermissionALCIcon_149387(ITestContext testContext) {
		testContext.setAttribute("testID", "149387");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.ClickALCIcon();
		home.switchToALCScreen();
		home.aLCScreen.ClickPFTab();
		home.aLCScreen.aLCPFTab.SelectAtAction();
		home.aLCScreen.aLCPFTab.EnterAtPFCode();
		home.aLCScreen.aLCPFTab.ClickAddButton();
		home.aLCScreen.aLCPFTab.VerifyAtActionInGrid(0);
		home.aLCScreen.aLCPFTab.selectAtActionInGrid();
		home.aLCScreen.aLCPFTab.SelectAtAction1();
		home.aLCScreen.aLCPFTab.ClickUpdateButton();
		home.switchToALCScreen();
		home.aLCScreen.SaveScreen();
		home.aLCScreen.CloseScreen();
		records.switchToCallEntry();
		records.callEntry.closeScreen();
		loader.logout();

		// Verify ALCIcon PF as "DENY"
		objectIdentification.windowHandle.switchToWindowUsingURL("Police");
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.callSearch.verify13AccessRestrictedByAUTOAckMsg();
//					records.callSearch.ClickResetButton();
//					records.callSearch.EnterToDateAsCurrentDate();
//					records.callSearch.clickSearchButton();
//					records.callSearch.ClickPrintIcon();
//					home.switchToSelectReport();
//					home.selectReport.VerifyRecordCountCallSearch();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.logout();

		objectIdentification.windowHandle.switchToWindowUsingURL("Police");
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.ClickALCIcon();
		home.switchToALCScreen();
		home.aLCScreen.ClickPFTab();
		home.aLCScreen.aLCPFTab.deleteAtAction1();
		home.switchToALCScreen();
		home.aLCScreen.SaveScreen();
		home.aLCScreen.ClickGroupTab();
		home.aLCScreen.aLCGroupTab.selectActionAsDeny();
		home.aLCScreen.aLCGroupTab.selectAtDivision();
		home.aLCScreen.aLCGroupTab.selectAtSection();
		home.aLCScreen.aLCGroupTab.selectAtSquad();
		home.aLCScreen.aLCGroupTab.selectAtTitle();
		home.aLCScreen.aLCGroupTab.ClickAdd();
		home.switchToALCScreen();
		home.aLCScreen.SaveScreen();
		home.switchToALCScreen();
		home.aLCScreen.VerifySuccessfulStatusMessage();
		home.aLCScreen.clickResetButton();
		home.aLCScreen.ClickGroupTab();
		home.aLCScreen.aLCGroupTab.verifyActionAsDenyInGrid(0);
		home.switchToALCScreen();
		home.aLCScreen.CloseScreen();
		records.switchToCallEntry();
		records.callEntry.closeScreen();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.logout();

		// Verify ALCICon Group tab as "DENY"
		objectIdentification.windowHandle.switchToWindowUsingURL("Police");
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.callSearch.verify13AccessRestrictedByAUTOAckMsg();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.logout();

		// Verify Tab color of the screen due to ALC Icon
		objectIdentification.windowHandle.switchToWindowUsingURL("Police");
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.verifyCallEntryEditTabColourAsBlue();
		records.callEntry.ClickALCIcon();
		records.switchToAccessListControl();
		records.aLCScreen.SaveNClose();
		records.switchToCallEntry();
		records.callEntry.verifyCallEntryEditTabColourAsBlue();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		records.switchToCallSearch();
		records.callSearch.ClickResetButton();
		records.callSearch.enterAtCallNo();
		records.callSearch.EnterToDateAsCurrentDate();
		records.callSearch.clickSearchButton();
		records.callSearch.ClickPrintButton();
		home.switchToSelectReport();
		home.selectReport.VerifyRecordCount("1");

	}

	// Updated by:-Abinaya , Date :-01/12/2022 , Quarter:-1 , Sprint:-2, Module:-
	// Records.

	@Test(groups = { "CallEntryIcons" })
	public void CallEntryCrashIcon_291508(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "291508");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		String date = records.callEntry.readReportedDate();
		String time = records.callEntry.readReportedTime();
		records.callEntry.clickCrashIcon();
		trafficWI.switchToCrashEntry();
		trafficWI.crashEntry.enterAtOfficer();
		trafficWI.crashEntry.clickAllTabBeforeSave();
		trafficWI.crashEntry.saveScreen();
		trafficWI.switchToCrashEntry();
		trafficWI.crashEntry.verifyAtJuris();
		trafficWI.crashEntry.verifyAtCaseNo();
		trafficWI.crashEntry.verifyAtCallNo();
		trafficWI.crashEntry.verifyAtLocation();
		trafficWI.crashEntry.verifyAtKSOfficer();
		trafficWI.crashEntry.verifyReportedDateAndTime(date, time);
		String traCSRefNo = trafficWI.crashEntry.readTraCSRefNo();
		trafficWI.crashEntry.saveNClose();
		records.switchToCallEntry();
		records.callEntry.verifyCrashIconColorChange();
		records.callEntry.clickCrashIcon();
		trafficWI.switchToCrashSearchHelpWindow();
		trafficWI.crashSearchHelpWindow.verifyBackButtonDisabled();
		trafficWI.crashSearchHelpWindow.verifyResetButtonDisabled();
		trafficWI.crashSearchHelpWindow.verifyAddNewButtonEnabled();
		trafficWI.crashSearchHelpWindow.verifyAtCaseNo(0);
		trafficWI.crashSearchHelpWindow.verifyAtApprovalStatusInGrid();
		trafficWI.crashSearchHelpWindow.clickAtCaseNoInGrid();
		trafficWI.switchToCrashEntry();
		trafficWI.crashEntry.clickResetButton();
		trafficWI.crashEntry.verifyAtJuris();
		trafficWI.crashEntry.verifyTracsRefNo(traCSRefNo);
		trafficWI.crashEntry.verifyAtCaseNo();
		trafficWI.crashEntry.verifyAtCallNo();
		trafficWI.crashEntry.verifyAtLocation();
		trafficWI.crashEntry.verifyAtKSOfficer();
		trafficWI.crashEntry.verifyReportedDateAndTime(date, time);
		trafficWI.crashEntry.switchToAllTab();
		trafficWI.crashEntry.saveNClose();
		trafficWI.switchToCrashSearchHelpWindow();
		trafficWI.crashSearchHelpWindow.closeTheScreen();
		records.switchToCallEntry();

	}

	// Updated by:-Abinaya , Date :-01/19/2022 , Quarter:-1 , Sprint:-2 , Module:-
	// Records.
	// Automated by:-Dinesh , Date :-21/12/2021 , Quarter:-4 , Sprint:-6 ,
	// Module:-Records
	@Test(groups = { "CallEntryIcons" })
	public void CallEntrySummonsOrCitationIcon_288594(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "288594");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
//					loader.navigateToScreen("Call Entry");
//					records.switchToCallEntry();
//					records.callEntry.enterAtInitialCFS();
//					records.callEntry.TabReceivedSource();
//					records.callEntry.enterAtReportedLocation();
//					records.callEntry.TabReportedDateTime();
//					records.callEntry.TabStackedDateTime();
//					records.callEntry.TabFinishedDateTime();
//					records.callEntry.EnterAtCADDisposition();
//					records.callEntry.EnterAtCallCompletionLocation();
//					records.callEntry.save();
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		String date = records.callEntry.readReportedDate();
		String time = records.callEntry.readReportedTime();
		records.callEntry.ClickCitationIcon();

		trafficWI.switchToCitationSearchHelpWindow();
		trafficWI.citationSearchHelpWindow.clickAtCETypeInGrid();

		trafficWI.switchToCitationEntry();
		trafficWI.citationEntry.tabAtCallNo();
		trafficWI.citationEntry.verifyAtCaseNo();
		trafficWI.citationEntry.verifyAtCallNo();
		trafficWI.citationEntry.selectAtCEType();
		trafficWI.citationEntry.enterDate();
		trafficWI.citationEntry.enterTime();
		trafficWI.citationEntry.enterAtNameID();
		trafficWI.citationEntry.switchToViolationsTab();
		// trafficWI.citationEntry.violationsTab.enterAtLocation();
		// trafficWI.citationEntry.violationsTab.tabOutOfficer();
		trafficWI.citationEntry.violationsTab.enterAtCharge();
		trafficWI.switchToCitationArrest();
		trafficWI.citationArrest.selectArmed();
		trafficWI.citationArrest.saveCloseScren();
		trafficWI.switchToCitationEntry();
		trafficWI.citationEntry.switchToViolationsTab();
		trafficWI.citationEntry.violationsTab.verifyAtLocation();
		trafficWI.citationEntry.violationsTab.verifyAtNIBRSWI();
		trafficWI.citationEntry.violationsTab.clickAddButton();
		trafficWI.citationEntry.violationsTab.verifyViolationAddedGrid();
		trafficWI.citationEntry.save();
		// trafficWI.citationEntry.Yes();
		trafficWI.switchToCitationEntry();
		// trafficWI.citationEntry.getCitationNo(Playback.getTestContextAttribute("citationNo"));
		// trafficWI.citationEntry.getCENo(Playback.getTestContextAttribute("CENo"));
		String CENo = trafficWI.citationEntry.readCENo();
		// String citationNo=null;
		// trafficWI.citationEntry.getCitationNo(citationNo);
		trafficWI.citationEntry.verifyAtCaseNo();
		trafficWI.citationEntry.verifyAtCallNo();
		trafficWI.citationEntry.verifyAtCEType();
		trafficWI.citationEntry.closeCitationEntryScreen();
		records.switchToCallEntry();
		records.callEntry.ClickResetButton();
		records.switchToCallEntry();
		records.callEntry.VerifyCitationIconColorChange();
		records.callEntry.ClickCitationIcon();
		trafficWI.switchToCitationSearchHelpWindow();
		trafficWI.citationSearchHelpWindow.verifyAtCallNo(0);
		// trafficWI.citationSearchHelpWindow.verifyCitationNoUsingCallNo(citationNo);
		// //issue reported
		trafficWI.citationSearchHelpWindow.verifyCENoUsingCallNo(CENo);
		trafficWI.citationSearchHelpWindow.clickAtCETypeInGrid();
		trafficWI.switchToCitationEntry();
		trafficWI.citationEntry.clickResetButton();
		trafficWI.citationEntry.verifyAtCaseNo();
		trafficWI.citationEntry.verifyAtCallNo();
		trafficWI.citationEntry.verifyAtCEType();
		trafficWI.citationEntry.verifyCENo(CENo);
		// trafficWI.citationEntry.verifyCitationNo(citationNo);
		trafficWI.citationEntry.verifyReportedDateAndTime(date, time);
		trafficWI.citationEntry.switchToNonTrafficAllTabs();
		trafficWI.citationEntry.saveandCloseTheScreen();
		trafficWI.switchToCitationSearchHelpWindow();
		trafficWI.citationSearchHelpWindow.close();
		records.switchToCallEntry();

	}

	// CallEntryEditAndMainTab
	@Test(priority = 1, groups = { "CallEntryTabFunctionality" }) // Q4 Sprint 5 Automated by Mahesha
	public void CallEntryEditAndMainTab_261416(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "261416");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.verifyReportedDateBindedToCurrentDate();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.verifyStackedDateBindedToCurrentDate();
		records.callEntry.verifyStakedTimeGraterThanReportedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.verifyFinishedDateBindedToCurrentDate();
		records.callEntry.verifyFinishedTimeGreaterThanReportedTime();
		records.callEntry.verifyFinishedTimeGreaterThanStackedTime();
		records.callEntry.CallCompletionLocation();
		records.callEntry.VerifyAtLocation();
		records.callEntry.EnterAtCADDisposition();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.VerifyAdditionSuccessfulMessage();
		String readCallNo = records.callEntry.readCallNo();
		records.callEntry.VerifyAdditionSuccessfulMessage();
		records.callEntry.ClickResetButton();
		records.callEntry.clickEditTab();
		records.callEntry.verifyStackedDateAsCurrent();
		records.callEntry.verifyFinishedDateBindedToCurrentDate();
		records.callEntry.verifyAtCADCFS();
		records.callEntry.verifyAtCADDisposition();
		records.callEntry.VerifyAtCallcompletionLocation();
		records.switchToCallEntry();
		records.callEntry.clickMainTab();
		records.callEntry.callEntryMainTab.verifyAtExactLocation();
		records.callEntry.callEntryMainTab.verifyAtCADCFS();
		records.callEntry.callEntryMainTab.verifyAtCADDisposition();
		records.callEntry.callEntryMainTab.verifyAtStackedDateAsCurrentDate();
		records.callEntry.callEntryMainTab.verifyAtFinishedDateAsCurrentDate();
		records.switchToCallEntry();
		records.callEntry.closeScreen();
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterCallNoByActiveData(readCallNo);
		records.switchToCallEntry();
		records.callEntry.clickEditTab();
		records.callEntry.verifyStackedDateBindedToCurrentDate();
		records.callEntry.verifyStakedTimeGraterThanReportedTime();
		records.callEntry.verifyFinishedDateBindedToCurrentDate();
		records.callEntry.verifyFinishedTimeGreaterThanReportedTime();
		records.callEntry.VerifyAtLocation();
		records.callEntry.verifyStackedDateAsCurrent();
		records.callEntry.verifyFinishedDateBindedToCurrentDate();
		records.callEntry.verifyAtCADCFS();
		records.callEntry.verifyAtCADDisposition();
		records.callEntry.VerifyAtCallcompletionLocation();
		records.switchToCallEntry();
		records.callEntry.clickMainTab();
		records.callEntry.callEntryMainTab.verifyAtExactLocation();
		records.callEntry.callEntryMainTab.verifyAtCADCFS();
		records.callEntry.callEntryMainTab.verifyAtCADDisposition();
		records.callEntry.callEntryMainTab.verifyAtStackedDateAsCurrentDate();
		records.callEntry.callEntryMainTab.verifyAtFinishedDateAsCurrentDate();
		records.switchToCallEntry();

	}

	// Part - I (270893)
	@Test(priority = 2, groups = { "CallEntryTabFunctionality" }) // Automated by Stalin //only for 14.45 Setup
	public void CallEntryNotesTab_270893(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270893");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.EnterAtCADDisposition();
		records.callEntry.enterAtLocation1();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.VerifyAdditionSuccessfulMessage();
		records.callEntry.SwithchtoNotesTab(); // error ditected by dinesh
		records.callEntry.notesTab.TabOuttDateTime();
		records.callEntry.notesTab.VerifyCurrentDate(); // added
		records.callEntry.notesTab.clickPFLookUpIcon();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.selectAtPFCode();
		records.switchToCallEntry();
		records.callEntry.SwithchtoNotesTab();
		records.callEntry.notesTab.verifyAtPF(); // added
		records.callEntry.notesTab.verifyPFIBubbleIsDisplayed(); // added
		records.callEntry.notesTab.EnterAtNotes();
		records.callEntry.notesTab.ClickSaveNotesTabButton();
		records.callEntry.notesTab.verifyDataExistsInTabAcknowledgeMessage();
		records.switchToCallEntry();
		records.callEntry.SwithchtoNotesTab();
		records.callEntry.notesTab.ClickAddButton();
		records.switchToCallEntry();
		records.callEntry.ClickSaveButton();
		records.callEntry.Verify1051UpdateDataExistsNotesTabAckMsg();
		records.switchToCallEntry();
		records.callEntry.SwithchtoNotesTab();
		records.callEntry.notesTab.ClickAtPFInGrid();
		records.callEntry.notesTab.ClickSaveNotesTabButton();
		records.callEntry.notesTab.verifyDataExistsInTabAcknowledgeMessage();
		records.switchToCallEntry();
		records.callEntry.SwithchtoNotesTab();
		records.callEntry.notesTab.ClickAddButton();
		records.callEntry.notesTab.InternalSave();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.ClickResetButton();
		records.callEntry.SwithchtoNotesTab();
		records.callEntry.notesTab.VerifyAtPFInGrid();
		records.callEntry.notesTab.VerifyAtNotesInGrid();
		records.callEntry.notesTab.verifyAtDateByUsingNotesInGrid();
		records.callEntry.notesTab.ClickAtPFInGrid();
		records.callEntry.notesTab.VerifyCurrentDate();
		records.callEntry.notesTab.verifyAtPF();
		records.callEntry.notesTab.verifyAtNotes();
		records.callEntry.notesTab.ClickAddButton();
		records.callEntry.notesTab.clickResetButton();
		records.switchToCallEntry();
		String readCallNo = records.callEntry.readCallNo();
		records.callEntry.saveNClose();
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterCallNoByActiveData(readCallNo);
		records.switchToCallEntry();
		records.callEntry.SwithchtoNotesTab();
		records.callEntry.notesTab.VerifyAtPFInGrid();
		records.callEntry.notesTab.VerifyAtNotesInGrid();
		records.callEntry.notesTab.verifyAtDateByUsingNotesInGrid();
		records.callEntry.notesTab.ClickAtPFInGrid();
		records.callEntry.notesTab.VerifyCurrentDate();
		records.callEntry.notesTab.verifyAtPF();
		records.callEntry.notesTab.verifyAtNotes();
		records.callEntry.notesTab.ClickAddButton();
		records.switchToCallEntry();

	}

	// Part - II (270893)
	@Test(priority = 3, groups = { "CallEntryTabFunctionality" }) // Automated by Stalin //only for 14.45 Setup
	public void CallEntryNamesTab_270893B(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270893B");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.EnterAtCADDisposition();
		records.callEntry.enterAtLocation1();
		records.switchToCallEntry();
		records.callEntry.save();
		records.callEntry.VerifyAdditionSuccessfulMessage();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickSaveNamesTab();
		records.callEntry.callEntryNamesTab.verifyNoDataPresentAcknowledgeMessage();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.switchToCallEntry();
		records.callEntry.ClickSaveButton();
		records.callEntry.Verify1051UpdateDataExistsNamesTabAcknowledgeMessage();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.SelectRowByAtName();
		records.callEntry.callEntryNamesTab.clickSaveNamesTab();
		records.callEntry.callEntryNamesTab.verifyUpdatedDataExistsInTheTabAcknowledgeMessage();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.ClickNameInfoIcon();
		names.switchToNameEntry();
		names.nameEntry.VerifyAtNameTypeAndID();
		names.nameEntry.switchToMainTab();
		String birthDate = names.nameEntry.nameEntryMainTab.getBirthDate();
		names.switchToNameEntry();
		names.nameEntry.switchToPhonesTab();
		String phoneNo = names.nameEntry.phoneTab.getPhoneNoByPhoneTypeInGrid();
		names.nameEntry.closeTheScreen();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.callEntry.callEntryNamesTab.verifyUpdatedSuccessfulStatusMessage();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.ClickResetButton();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.verifyActivityAsVictimInGrid(0);
		records.callEntry.callEntryNamesTab.VerifyAtLastNameFirstNameInGrid(0);
		records.callEntry.callEntryNamesTab.verifyActiveDOBInGrid(birthDate);
		records.callEntry.callEntryNamesTab.verifyAtAddressInGrid(0);
		records.callEntry.callEntryNamesTab.verifyAtActivePhoneNo(phoneNo, 0);
		records.callEntry.callEntryNamesTab.selectGridRowByActivityAsVictim();
		records.callEntry.callEntryNamesTab.verifyAtNameID();
		records.callEntry.callEntryNamesTab.verifyAtAddress(); // Action Updated
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.save(); //
		records.switchToCallEntry();
//					records.callEntry.verifyNameTabColorAsBlue();  
		records.switchToCallEntry();
		String readCallNo = records.callEntry.readCallNo();
		records.callEntry.saveNClose();
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterCallNoByActiveData(readCallNo);
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.verifyActivityAsVictimInGrid(0);
		records.callEntry.callEntryNamesTab.VerifyAtLastNameFirstNameInGrid(0);
		records.callEntry.callEntryNamesTab.verifyActiveDOBInGrid(birthDate);
		records.callEntry.callEntryNamesTab.verifyAtAddressInGrid(0);
		records.callEntry.callEntryNamesTab.verifyAtActivePhoneNo(phoneNo, 0);
		records.callEntry.callEntryNamesTab.selectGridRowByActivityAsVictim();
		records.callEntry.callEntryNamesTab.verifyAtNameID();
		records.callEntry.callEntryNamesTab.verifyAtAddress();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.switchToCallEntry();
		records.callEntry.verifyNameTabColorAsBlue();
		records.switchToCallEntry();

	}

	// Part - III (270893)
	@Test(priority = 9, groups = { "CallEntryTabFunctionality" }) // Automated by Stalin //only for 14.45 Setup
	public void CallEntryVehicleTab_270893B(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270893");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.EnterAtCADDisposition();
		records.callEntry.enterAtLocation1();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.VerifyAdditionSuccessfulMessage();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.enterAtVehicleNumber();
		records.callEntry.vehicleTab.selectAtState();
		vehicle.switchToVehicleBoatEntry();
		String readMakeDescription = vehicle.vehicleBoatEntry.readMake();
		String readModelDescription = vehicle.vehicleBoatEntry.readModelDescription();
		String readVINNo = vehicle.vehicleBoatEntry.readVINNo();
		String readInsuranceCompany = vehicle.vehicleBoatEntry.readInsuranceCompany();
		vehicle.vehicleBoatEntry.clickSelectButton();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.enterAtNCICNo();
		records.callEntry.vehicleTab.enterAtNameID();
		records.callEntry.vehicleTab.selectAtActivity();
		records.callEntry.vehicleTab.clickVehicleTabSaveButton();
		records.callEntry.vehicleTab.verify1051UpdatedDataExistsAcknowledgeMessage();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.clickAddButton();
		records.switchToCallEntry();
		records.callEntry.ClickSaveButton();
		records.callEntry.Verify1051UpdateDataExistsVehicleTabAcknowledgeMessage();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.ClickAtActivityInGrid();
		records.callEntry.vehicleTab.clickVehicleTabSaveButton();
		records.callEntry.vehicleTab.verify1051UpdatedDataExistsAcknowledgeMessage();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.clickAddButton();
		records.callEntry.vehicleTab.InternalSave();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
//					records.callEntry.verifyVehilceTabColorAsBlue();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.VerifyAtActivityInGrid();
		records.callEntry.vehicleTab.verifyAtPlate(0);
		records.callEntry.vehicleTab.verifyActiveMakeInGrid(readMakeDescription);
		records.callEntry.vehicleTab.verifyActiveModelInGrid(readModelDescription);
		records.callEntry.vehicleTab.verifyActiveSerial(readVINNo);
		records.callEntry.vehicleTab.verifyAtNCICNoInGrid();
		records.callEntry.vehicleTab.verifyAtInsurance();
		records.callEntry.vehicleTab.verifyAtNameInGrid();
		records.callEntry.vehicleTab.ClickAtActivityInGrid();
		records.callEntry.vehicleTab.verifyAtVehicleNo();
		records.callEntry.vehicleTab.verifyAtNCICNo();
		records.callEntry.vehicleTab.verifyAtLastName();
		records.callEntry.vehicleTab.verifyAtFirstName();
		records.callEntry.vehicleTab.verifyAtActivity();
		records.callEntry.vehicleTab.verifyActiveInsuranceCompany(readInsuranceCompany);
		records.callEntry.vehicleTab.clickAddButton();
		records.callEntry.vehicleTab.InternalSave();
		records.switchToCallEntry();
		String readCallNo = records.callEntry.readCallNo();
		records.callEntry.saveNClose();
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterCallNoByActiveData(readCallNo);
		records.switchToCallEntry();
		records.callEntry.ClickResetButton();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.VerifyAtActivityInGrid();
		records.callEntry.vehicleTab.verifyAtPlate(0);
		records.callEntry.vehicleTab.verifyActiveMakeInGrid(readMakeDescription);
		records.callEntry.vehicleTab.verifyActiveModelInGrid(readModelDescription);
		records.callEntry.vehicleTab.verifyActiveSerial(readVINNo);
		records.callEntry.vehicleTab.verifyAtNCICNoInGrid();
		records.callEntry.vehicleTab.verifyAtInsurance();
		records.callEntry.vehicleTab.verifyAtNameInGrid();
		records.callEntry.vehicleTab.ClickAtActivityInGrid();
		records.callEntry.vehicleTab.verifyAtVehicleNo();
		records.callEntry.vehicleTab.verifyAtNCICNo();
		records.callEntry.vehicleTab.verifyAtLastName(); // Ui Need to Add
		records.callEntry.vehicleTab.verifyAtFirstName(); // Ui Need to Add
		records.callEntry.vehicleTab.verifyAtActivity();
		records.callEntry.vehicleTab.verifyActiveInsuranceCompany(readInsuranceCompany);
		records.callEntry.vehicleTab.clickAddButton();
		records.callEntry.vehicleTab.InternalSave();
		records.switchToCallEntry();
		records.callEntry.verifyVehilceTabColorAsBlue();
		records.switchToCallEntry();

	}

	// Part - IV (270893) //It will run in 93
	@Test(priority = 10, groups = { "CallEntryTabFunctionality" }) // Automated by Stalin
	public void CallEntryRelatedCallsTab_270893B(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "270893");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.EnterAtCADDisposition();
		records.callEntry.enterAtLocation1();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.VerifyAdditionSuccessfulMessage();
		records.switchToCallEntry();
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.EnterAtRelatedCallNo();
		records.callEntry.callEntryRelatedCallsTab.clickSaveInternalTab();
		records.callEntry.callEntryRelatedCallsTab.verifyUpdatedDataExistsAcknowledgeMessage(); // Action Updated
		records.switchToCallEntry();
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.ClickAddButton();
		records.callEntry.callEntryRelatedCallsTab.verifyNotValidCallNumberAcknowledgeMessage();
		records.switchToCallEntry();
		records.callEntry.ClickSaveButton();
		records.callEntry.Verify1051UpdateDataExistsRelatedCallsTabAcknowledgeMessage();
		records.switchToCallEntry();
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.clickPoliceCheckBox();
		records.callEntry.callEntryRelatedCallsTab.verifyRelatedCallNoInfoIconIsDisplayed();
		Set oldHandles = objectIdentification.windowHandle.collectWindowHandles();
		records.callEntry.callEntryRelatedCallsTab.clickRelatedCallNoInfoIcon();
		objectIdentification.windowHandle.switchToNewlyOpenedWindow(oldHandles);
		records.callEntry.verifyAtCallNo();
		String readReportedDate = records.callEntry.readReportedDate();
		String readReportedLocation = records.callEntry.readReportedLocation();
		String readInitialCFSDescription = records.callEntry.readInitialCFSDescription();
		Playback.driver.close();
		records.switchToCallEntry();
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.EnterAtNotes();
		records.callEntry.callEntryRelatedCallsTab.ClickAddButton();
		records.callEntry.callEntryRelatedCallsTab.SaveInternalTab();
		records.switchToCallEntry();
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.verifyUpdatedSuccessfulStatusMessage();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.verifyAtProductInGrid();
		records.callEntry.callEntryRelatedCallsTab.verifyAtJurisInGrid();
		records.callEntry.callEntryRelatedCallsTab.VerifyAtRelatedCallNo(0);
		records.callEntry.callEntryRelatedCallsTab.verifyActiveDateInGridByCallNo(readReportedDate);
		records.callEntry.callEntryRelatedCallsTab.verifyActiveLocationInGrid(readReportedLocation);
		records.callEntry.callEntryRelatedCallsTab.verifyActiveCFSInGridByCallNo(readInitialCFSDescription);
		records.callEntry.callEntryRelatedCallsTab.VerifyAtNotesUsingRelatedCallNo();
		records.callEntry.callEntryRelatedCallsTab.selectRowByAtNotes();
		records.callEntry.callEntryRelatedCallsTab.verifyAtRelatedCallNo();
		records.callEntry.callEntryRelatedCallsTab.verifyPoliceCheckBoxIsChecked();
		// records.callEntry.callEntryRelatedCallsTab.verifyActiveDateAndTime(readReportedDate);
		// //Date format changing
		records.callEntry.callEntryRelatedCallsTab.verifyActiveLocation(readReportedLocation);
		records.callEntry.callEntryRelatedCallsTab.verifyActiveCFS(readInitialCFSDescription);
		records.callEntry.callEntryRelatedCallsTab.verifyAtNotes();
		records.callEntry.callEntryRelatedCallsTab.ClickAddButton();
		records.callEntry.callEntryRelatedCallsTab.SaveInternalTab();
		records.switchToCallEntry();
		String readCallNo = records.callEntry.readCallNo();
		records.callEntry.saveNClose();
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterCallNoByActiveData(readCallNo);
		records.switchToCallEntry();
		records.callEntry.ClickResetButton();
		records.callEntry.verifyRelatedCallsTabColorAsBlue();
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.verifyAtProductInGrid();
		records.callEntry.callEntryRelatedCallsTab.verifyAtJurisInGrid();
		records.callEntry.callEntryRelatedCallsTab.VerifyAtRelatedCallNo(0);
		records.callEntry.callEntryRelatedCallsTab.verifyActiveDateInGridByCallNo(readReportedDate);
		records.callEntry.callEntryRelatedCallsTab.verifyActiveLocationInGrid(readReportedLocation);
		records.callEntry.callEntryRelatedCallsTab.verifyActiveCFSInGridByCallNo(readInitialCFSDescription);
		records.callEntry.callEntryRelatedCallsTab.VerifyAtNotesUsingRelatedCallNo();
		records.callEntry.callEntryRelatedCallsTab.selectRowByAtNotes();
		records.callEntry.callEntryRelatedCallsTab.verifyAtRelatedCallNo();
		records.callEntry.callEntryRelatedCallsTab.verifyPoliceCheckBoxIsChecked();
		// records.callEntry.callEntryRelatedCallsTab.verifyActiveDateAndTime(readReportedDate);
		// //Date format changing
		records.callEntry.callEntryRelatedCallsTab.verifyActiveLocation(readReportedLocation);
		records.callEntry.callEntryRelatedCallsTab.verifyActiveCFS(readInitialCFSDescription);
		records.callEntry.callEntryRelatedCallsTab.verifyAtNotes();
		records.callEntry.callEntryRelatedCallsTab.ClickAddButton();
		records.switchToCallEntry();

	}

	@Test(priority = 4, groups = { "CallEntryTabFunctionality" }) // Automated by Stalin
	public void CallEntrySuspectsTabFunctionality_291026(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "291026");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.EnterAtCADDisposition();
		records.callEntry.enterAtLocation1();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.VerifyAdditionSuccessfulMessage();
		records.switchToCallEntry();
		records.callEntry.switchToSuspectsTab();
		records.callEntry.callEntrySuspectsTab.clickAddSuspects();
		records.switchToCaseSuspect();
		names.switchToSuspectEntry();
		names.suspectEntry.EnterAtLastNameFirstName();
		names.suspectEntry.enterAtAddress();
		names.suspectEntry.selectAtRace();
		names.suspectEntry.selectAtSex();
		names.suspectEntry.selectAtEyes();
		names.suspectEntry.enterAtHeight();
		names.suspectEntry.enterAtHeight2();
		names.suspectEntry.enterAtWeight();
		names.suspectEntry.enterAtWeight2();
		names.suspectEntry.selectAtHair();
		names.suspectEntry.enterAtAge();
		names.suspectEntry.enterAtAge2();
		names.suspectEntry.Save();
		names.switchToSuspectEntry();
		names.suspectEntry.verifyAdditionSuccessfulMessage();
		names.suspectEntry.SaveAndClose();
		records.switchToCallEntry();
		records.callEntry.switchToSuspectsTab();
		records.callEntry.callEntrySuspectsTab.clickRefresh();
		records.callEntry.callEntrySuspectsTab.VerifyAtNameInGrid(0);
		records.callEntry.callEntrySuspectsTab.verifyRaceAsWInGrid(0);
		records.callEntry.callEntrySuspectsTab.verifyAtAgeInGrid(0);
		records.callEntry.callEntrySuspectsTab.verifyAtHeightInGrid(0);
		records.callEntry.callEntrySuspectsTab.verifyAtWeightInGrid(0);
		records.callEntry.callEntrySuspectsTab.verifyEyesAsBlueInGrid(0);
		records.callEntry.callEntrySuspectsTab.verifyHairAsBlackInGrid(0);
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		// records.callEntry.verifySuspectsTabColorAsBlue();
		String readCallNo = records.callEntry.readCallNo();
		records.callEntry.saveNClose();
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterCallNoByActiveData(readCallNo);
		records.switchToCallEntry();
		records.callEntry.ClickResetButton();
		records.callEntry.verifySuspectsTabColorAsBlue();
		records.callEntry.switchToSuspectsTab();
		records.callEntry.callEntrySuspectsTab.clickRefresh();
		records.callEntry.callEntrySuspectsTab.VerifyAtNameInGrid(0);
		records.callEntry.callEntrySuspectsTab.verifyRaceAsWInGrid(0);
		records.callEntry.callEntrySuspectsTab.verifyAtAgeInGrid(0);
		records.callEntry.callEntrySuspectsTab.verifyAtHeightInGrid(0);
		records.callEntry.callEntrySuspectsTab.verifyAtWeightInGrid(0);
		records.callEntry.callEntrySuspectsTab.verifyEyesAsBlueInGrid(0);
		records.callEntry.callEntrySuspectsTab.verifyHairAsBlackInGrid(0);
		records.switchToCallEntry();

	}

	@Test(priority = 5, groups = { "CallEntryTabFunctionality" }) // Automated by Stalin
	public void CallEntryRequestTab_291075(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "291075");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.EnterAtCADDisposition();
		records.callEntry.enterAtLocation1();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.VerifyAdditionSuccessfulMessage();
		records.switchToCallEntry();
		String readCallNo = records.callEntry.readCallNo();
		String readCaseNo = records.callEntry.readCaseNo();
		records.callEntry.closeScreen();
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterCallNoByActiveData(readCallNo);
		records.switchToCallEntry();
		records.callEntry.switchToRequestTab();
		records.callEntry.callEntryRequestTab.clickAddNew();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.verifyActiveCaseNo(readCallNo);
		records.openRecordsRequestEntry.verifyActiveCaseNo(readCaseNo);
		records.openRecordsRequestEntry.tabOutReceivedDate();
		records.openRecordsRequestEntry.EnterDueByDateAs3DaysFutureDate();
		records.openRecordsRequestEntry.selectAtRequestType();
		records.openRecordsRequestEntry.enterAtAssignedTo();
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtFirstName();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtRequestInformationDetails();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.Save();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.verifyAdditionSuccessfulMessage();
		String readRequestNo = records.openRecordsRequestEntry.readRequestNo();
		// String readReceivedDate = records.openRecordsRequestEntry.readReceivedDate();
		records.openRecordsRequestEntry.Close();
		records.switchToCallEntry();
		records.callEntry.switchToRequestTab();
		records.callEntry.callEntryRequestTab.verifyActiveRequestNoInGrid(readRequestNo, 0);
		records.callEntry.callEntryRequestTab.verifyReceivedDateAsCurrentDateInGrid(0);
		records.callEntry.callEntryRequestTab.verifyAtRequestedByInGrid(0);
		records.callEntry.callEntryRequestTab.verifyAtStatusInGrid();
		records.callEntry.callEntryRequestTab.verifyDueOrClosedDateAs3DaysFutureDate(0);
		records.callEntry.callEntryRequestTab.verifyDueOrClosedDateAsGreenColorInGrid(0);
		records.callEntry.callEntryRequestTab.verifyAtAssignedToInGrid();
		records.callEntry.callEntryRequestTab.verifyAtRequestDetails();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		// records.callEntry.verifyRequestTabAsBlueColor();
		records.callEntry.closeScreen();
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.clickBackButton(); // added
		records.callSearch.ClickResetButton();
		records.callSearch.enterCallNoByActiveData(readCallNo);
		records.switchToCallEntry();
		records.callEntry.ClickResetButton();
		records.callEntry.verifyRequestTabAsBlueColor();
		records.callEntry.switchToRequestTab();
		records.callEntry.callEntryRequestTab.verifyActiveRequestNoInGrid(readRequestNo, 0);
		records.callEntry.callEntryRequestTab.verifyReceivedDateAsCurrentDateInGrid(0);
		records.callEntry.callEntryRequestTab.verifyAtRequestedByInGrid(0);
		records.callEntry.callEntryRequestTab.verifyAtStatusInGrid();
		records.callEntry.callEntryRequestTab.verifyDueOrClosedDateAs3DaysFutureDate(0);
		records.callEntry.callEntryRequestTab.verifyDueOrClosedDateAsGreenColorInGrid(0);
		records.callEntry.callEntryRequestTab.verifyAtAssignedToInGrid();
		records.callEntry.callEntryRequestTab.verifyAtRequestDetails();
		records.switchToCallEntry();

	}

	@Test(priority = 6, groups = { "CallEntryTabFunctionality" }) // Automated by Stalin //CallEntryUnitsTab
	public void CallEntryUnitsTab_160088(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "160088");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Entry");
		records.switchToCallEntry();
		records.callEntry.enterAtInitialCFS();
		records.callEntry.TabReceivedSource();
		records.callEntry.enterAtReportedLocation();
		records.callEntry.TabReportedDateTime();
		records.callEntry.clickEditTab();
		records.callEntry.stackedDate();
		records.callEntry.stackedTime();
		records.callEntry.finishedDate();
		records.callEntry.finishedTime();
		records.callEntry.EnterAtCADDisposition();
		records.callEntry.enterAtLocation1();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.VerifyAdditionSuccessfulMessage();
		String readCallNo = records.callEntry.readCallNo();
		records.callEntry.switchToUnitsTab();
		records.callEntry.callEntryUnitsTab.ClickEditButton();
		records.switchToCaseUnits();
		records.caseUnits.verifyFinishedDateAsCurrentDate();
		records.caseUnits.verifyDispositionAsIncidentReport();
		records.caseUnits.enterAtUnit();
		records.caseUnits.EnterAtOfficer1();
		records.caseUnits.SelectCCAsDispatched();
		records.caseUnits.TabDateTime();
		records.caseUnits.selectAtDisposition();
		records.caseUnits.ClickAdd();
		records.caseUnits.SaveScreen();
		records.switchToCaseUnits();
		records.caseUnits.verifyUpdateSuccessfulMessage();
		records.caseUnits.verifyCCAsDPInGrid(0);
		records.caseUnits.verifyDateAndTimeAsCurrentDateInGrid(0);
		records.caseUnits.verifyDispositionAsAACInGrid(0);
		records.caseUnits.clickCommentsRowInGrid(0);
		records.caseUnits.verifyCommentsFieldIsDisplayed();
		records.caseUnits.verifyCCAsDispatched();
		records.caseUnits.verifyDateAsCurrentDate();
		records.caseUnits.verifyAtDisposition();
		records.caseUnits.closeScreen();
		records.switchToCallEntry();
		records.callEntry.switchToUnitsTab();
		records.callEntry.callEntryUnitsTab.clickRefreshButton(); // UI Updated
		records.callEntry.callEntryUnitsTab.verifyDateAndTimeAsCurrentDateInGrid(0);
		records.callEntry.callEntryUnitsTab.verifyAtUnitInGrid();
		records.callEntry.callEntryUnitsTab.verifyAtOfficer1InGrid();
		records.callEntry.callEntryUnitsTab.verifyCCAsDPInGrid(0);
		records.callEntry.callEntryUnitsTab.verifyDispositionAsAACInGrid(0);
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		// records.callEntry.verifyUnitsTabAsBlueColor();
		records.callEntry.closeScreen();
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterCallNoByActiveData(readCallNo);
		records.switchToCallEntry();
		records.callEntry.ClickResetButton();
		records.callEntry.verifyUnitsTabAsBlueColor();
		records.callEntry.switchToUnitsTab();
		records.callEntry.callEntryUnitsTab.clickRefreshButton();
		records.callEntry.callEntryUnitsTab.verifyDateAndTimeAsCurrentDateInGrid(0);
		records.callEntry.callEntryUnitsTab.verifyAtUnitInGrid();
		records.callEntry.callEntryUnitsTab.verifyAtOfficer1InGrid();
		records.callEntry.callEntryUnitsTab.verifyCCAsDPInGrid(0);
		records.callEntry.callEntryUnitsTab.verifyDispositionAsAACInGrid(0);
		records.switchToCallEntry();

	}

	@Test(priority = 7, groups = { "CallEntryTabFunctionality" }) // CallEntryANCATab
	public void CallEntryANCATab_248834(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "248834");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.swithchtoANCATab();
		records.callEntry.callEntryANCATab.verifyDisplayedIcons();
		records.callEntry.callEntryANCATab.clickAddnew();
		animalControl.switchToAnimalCaseEntry();
		animalControl.animalCaseEntry.enterAtLocation();
		animalControl.animalCaseEntry.tabOutReportingDateAndTime();
		animalControl.animalCaseEntry.enterAtOfficer();
		animalControl.animalCaseEntry.selectComplaintTypeAsCrueltyToAnimals();
		animalControl.animalCaseEntry.closeScreen();
		records.switchToCallEntry();
		records.callEntry.closeScreen();
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.swithchtoANCATab();
		records.caseUpdate.caseUpdateANCATab.clickAddnew();
		animalControl.switchToAnimalCaseEntry();
		animalControl.animalCaseEntry.enterAtLocation();
		animalControl.animalCaseEntry.tabOutReportingDateAndTime();
		animalControl.animalCaseEntry.enterAtOfficer();
		animalControl.animalCaseEntry.selectComplaintTypeAsCrueltyToAnimals();
		animalControl.animalCaseEntry.clickSaveButton();
		animalControl.switchToAnimalCaseEntry();
		String readACENo = animalControl.animalCaseEntry.readACENo();
		animalControl.animalCaseEntry.clickMainTab();
		animalControl.animalCaseEntry.animalCaseEntryMainTab.selectMunicipality();
		animalControl.animalCaseEntry.animalCaseEntryMainTab.enterAtCFSReportedViolation();
		animalControl.animalCaseEntry.animalCaseEntryMainTab.enterAtInitialNatureOfComplaint();
		animalControl.animalCaseEntry.animalCaseEntryMainTab.enterAtNameID();
		animalControl.animalCaseEntry.animalCaseEntryMainTab.selectAtActivity();
		animalControl.animalCaseEntry.animalCaseEntryMainTab.clickAddButton();
		animalControl.switchToAnimalCaseEntry();
		animalControl.animalCaseEntry.saveNCloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.swithchtoANCATab();
		records.caseUpdate.caseUpdateANCATab.clickRefresh();
		records.caseUpdate.caseUpdateANCATab.verifyActiveACENoInGrid(readACENo);
		records.caseUpdate.caseUpdateANCATab.verifyAtLocationInGrid(0);
		records.caseUpdate.caseUpdateANCATab.verifyAtComplaintTypeInGrid(0);
		records.caseUpdate.caseUpdateANCATab.verifyOfficerAsAutomationInGrid(0);
		records.caseUpdate.caseUpdateANCATab.verifyReportedDateAsCurrentDateInGrid(0);
		records.caseUpdate.caseUpdateANCATab.verifyCFSAsTheftInGrid(0);
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyUpdateSuccessfulMessage();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.verifyANCATabAsBlueColor();
		records.callEntry.swithchtoANCATab();
		records.callEntry.callEntryANCATab.clickRefresh();
		records.callEntry.callEntryANCATab.verifyActiveACENoInGrid(readACENo);
		records.callEntry.callEntryANCATab.verifyAtLocationInGrid(0);
		records.callEntry.callEntryANCATab.verifyAtComplaintTypeInGrid(0);
		records.callEntry.callEntryANCATab.verifyOfficerAsAutomationInGrid(0);
		records.callEntry.callEntryANCATab.verifyReportedDateAsCurrentDateInGrid(0);
		records.callEntry.callEntryANCATab.verifyCFSAsTheftInGrid(0);
		records.callEntry.callEntryANCATab.selectAtComplaintTypeInGrid();
		animalControl.switchToAnimalCaseEntry();
		animalControl.animalCaseEntry.verifyAtLocation();
		animalControl.switchToAnimalCaseEntry();

	}

	@Test(priority = 8, groups = { "CallEntryTabFunctionality" }) // CallEntryDispostionTab
	public void CallEntryDispostionTab_273500(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "273500");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.SwithchtoDispositionTab();
		records.callEntry.callEntryDispositionTab.enterAtDisposition();
		records.switchToCallEntry();
		records.callEntry.ClickSaveButton();
		records.callEntry.Verify1051UpdateDataExistsDispositionTabAckMsg();
		records.switchToCallEntry();
		records.callEntry.SwithchtoDispositionTab();
		records.callEntry.callEntryDispositionTab.clickAddButton();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		// records.callEntry.verifyUpdatedSuccessfulStatusMessage();
		records.callEntry.SwithchtoDispositionTab();
		records.callEntry.callEntryDispositionTab.verifyAtDispositionInGrid();
		records.callEntry.callEntryDispositionTab.verifyAtDescriptionInGrid();
		records.callEntry.callEntryDispositionTab.selectRowByAtDisposition();
		records.callEntry.callEntryDispositionTab.verifyAtDisposition();
		records.callEntry.callEntryDispositionTab.clickAddButton();
		records.switchToCallEntry();
		String readCallNo = records.callEntry.readCallNo();
		records.callEntry.closeScreen();
		records.switchToCallSearch();
		records.callSearch.ClickResetButton();
		records.callSearch.enterCallNoByActiveData(readCallNo);
		records.switchToCallEntry();
		records.callEntry.ClickResetButton();
		records.callEntry.verifyDispositionTabAsBlueColor();
		records.callEntry.SwithchtoDispositionTab();
		records.callEntry.callEntryDispositionTab.verifyAtDispositionInGrid();
		records.callEntry.callEntryDispositionTab.verifyAtDescriptionInGrid();
		records.callEntry.callEntryDispositionTab.selectRowByAtDisposition();
		records.callEntry.callEntryDispositionTab.verifyAtDisposition();
		records.callEntry.callEntryDispositionTab.clickAddButton();
		records.switchToCallEntry();

	}

//				// Part - IV (270893) //Need to run and verify in 87 only
//					@Test (priority = 10, groups = { "CallEntryTabFunctionality" })// Automated by Stalin
//					public void CallEntryRelatedCallsTab87_270893(ITestContext testContext) {
//						ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
//						testContext.setAttribute("testID", "270893");
//						Browser.NavigateToLoginScreen();
//						login.loginScreen.Logon();
//						loader.navigateToModule("Records");
//						loader.navigateToScreen("Call Entry");
//						records.switchToCallEntry();
//						records.callEntry.enterAtInitialCFS();
//						records.callEntry.TabReceivedSource();
//						records.callEntry.enterAtReportedLocation();
//						records.callEntry.TabReportedDateTime();
//						records.callEntry.clickEditTab();
//						records.callEntry.stackedDate();
//						records.callEntry.stackedTime();
//						records.callEntry.finishedDate();
//						records.callEntry.finishedTime();
//						records.callEntry.EnterAtCADDisposition();
//						records.callEntry.enterAtLocation1();
//						records.switchToCallEntry();
//						records.callEntry.save();
//						records.switchToCallEntry();
//						records.callEntry.VerifyAdditionSuccessfulMessage();
//						records.switchToCallEntry();
//						records.callEntry.switchToRelatedCallsTab();
//						records.callEntry.callEntryRelatedCallsTab.EnterAtRelatedCallNo();
//						records.callEntry.callEntryRelatedCallsTab.clickSaveInternalTab();
//						records.callEntry.callEntryRelatedCallsTab.verifyUpdatedDataExistsAcknowledgeMessage(); // Action Updated
//						records.switchToCallEntry();
//						records.callEntry.switchToRelatedCallsTab();
//						records.callEntry.callEntryRelatedCallsTab.ClickAddButton();
//						records.switchToCallEntry();
//						records.callEntry.ClickSaveButton();
//						records.callEntry.Verify1051UpdateDataExistsRelatedCallsTabAcknowledgeMessage();
//						records.switchToCallEntry();
//						records.callEntry.switchToRelatedCallsTab();
//						records.callEntry.callEntryRelatedCallsTab.clickAtRelatedCallNoInGrid();
//						records.callEntry.callEntryRelatedCallsTab.verifyRelatedCallNoInfoIconIsDisplayed();
//						Set oldHandles = objectIdentification.windowHandle.collectWindowHandles();
//						records.callEntry.callEntryRelatedCallsTab.clickRelatedCallNoInfoIcon();
//						objectIdentification.windowHandle.switchToNewlyOpenedWindow(oldHandles);
//						records.callEntry.verifyAtCallNo();
//						String readReportedDate = records.callEntry.readReportedDate();
//						String readReportedLocation = records.callEntry.readReportedLocation();
//						String readInitialCFSDescription = records.callEntry.readInitialCFSDescription();
//						objectIdentification.windowHandle.switchToNewlyOpenedWindow(oldHandles);
//						Playback.driver.close();
//						records.switchToCallEntry();
//						records.callEntry.switchToRelatedCallsTab();
//						records.callEntry.callEntryRelatedCallsTab.enterAtNotes();
//						records.callEntry.callEntryRelatedCallsTab.ClickAddButton();
//						records.callEntry.callEntryRelatedCallsTab.SaveInternalTab();
//						records.switchToCallEntry();
//						records.callEntry.switchToRelatedCallsTab();
//						records.callEntry.callEntryRelatedCallsTab.verifyUpdatedSuccessfulStatusMessage();
//						records.switchToCallEntry();
//						records.callEntry.save();
//						records.switchToCallEntry();
//						records.callEntry.switchToRelatedCallsTab();
//						records.callEntry.callEntryRelatedCallsTab.VerifyAtRelatedCallNo(0);
//						records.callEntry.callEntryRelatedCallsTab.verifyActiveDateInGridByCallNo(readReportedDate);
//						records.callEntry.callEntryRelatedCallsTab.verifyActiveLocationInGrid(readReportedLocation);
//						records.callEntry.callEntryRelatedCallsTab.verifyActiveCFSInGridByCallNo(readInitialCFSDescription);
//						records.callEntry.callEntryRelatedCallsTab.VerifyAtNotesUsingRelatedCallNo();
//						records.callEntry.callEntryRelatedCallsTab.selectRowByAtNotes();
//						records.callEntry.callEntryRelatedCallsTab.verifyAtRelatedCallNo();
//						records.callEntry.callEntryRelatedCallsTab.verifyActiveLocation(readReportedLocation);
//						records.callEntry.callEntryRelatedCallsTab.verifyActiveCFS(readInitialCFSDescription);
//						records.callEntry.callEntryRelatedCallsTab.verifyAtNotes();
//						records.callEntry.callEntryRelatedCallsTab.ClickAddButton();
//						records.callEntry.callEntryRelatedCallsTab.SaveInternalTab();
//						records.switchToCallEntry();
//						String readCallNo = records.callEntry.readCallNo();
//						records.callEntry.saveNClose();
//						loader.navigateToScreen("Call Search");
//						records.switchToCallSearch();
//						records.callSearch.enterCallNoByActiveData(readCallNo);
//						records.switchToCallEntry();
//						records.callEntry.ClickResetButton();
//						records.callEntry.verifyRelatedCallsTabColorAsBlue();
//						records.callEntry.switchToRelatedCallsTab();
//						records.callEntry.callEntryRelatedCallsTab.VerifyAtRelatedCallNo(0);
//						records.callEntry.callEntryRelatedCallsTab.verifyActiveDateInGridByCallNo(readReportedDate);
//						records.callEntry.callEntryRelatedCallsTab.verifyActiveLocationInGrid(readReportedLocation);
//						records.callEntry.callEntryRelatedCallsTab.verifyActiveCFSInGridByCallNo(readInitialCFSDescription);
//						records.callEntry.callEntryRelatedCallsTab.VerifyAtNotesUsingRelatedCallNo();
//						records.callEntry.callEntryRelatedCallsTab.selectRowByAtNotes();
//						records.callEntry.callEntryRelatedCallsTab.verifyAtRelatedCallNo();
//						records.callEntry.callEntryRelatedCallsTab.verifyActiveLocation(readReportedLocation);
//						records.callEntry.callEntryRelatedCallsTab.verifyActiveCFS(readInitialCFSDescription);
//						records.callEntry.callEntryRelatedCallsTab.verifyAtNotes();
//						records.callEntry.callEntryRelatedCallsTab.ClickAddButton();
//						records.switchToCallEntry();
//			
//					}

	@Test(groups = "DomesticVoilenceFunctional")

	public void DvEntryScreenFunctionality_158777(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "158777");
		Browser.NavigateToLoginScreen();

		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyAtNameInGrid(0);
		records.caseUpdate.caseUpdateNamesTab.VerifyAtActivityInGrid(0);
		records.caseUpdate.caseUpdateNamesTab.VerifyAtName1InGrid(1);
		records.caseUpdate.caseUpdateNamesTab.VerifyAtActivityInGrid(1);
		records.caseUpdate.caseUpdateNamesTab.VerifyAtName2InGrid(2);
		records.caseUpdate.caseUpdateNamesTab.VerifyAtActivity2InGrid(2);
		records.caseUpdate.caseUpdateNamesTab.verifyDvIconAsYellow();

		records.caseUpdate.caseUpdateNamesTab.ClickDomesticViolanceIconUsingVictim();
		records.switchToDVEntry();
		records.dVEntry.VerifyAtCaseNo();
		records.dVEntry.ClickSave();
		records.dVEntry.VerifyOffenderAcknowledgeMessage();
		records.switchToDVEntry();
		records.dVEntry.EnterTotalTimeSpent();
		records.dVEntry.EnterTotalMinpent();
		records.dVEntry.ClickAlcoholInvolvedCheckBox();
		records.dVEntry.ClickOtherDrugsInvolvedCheckBox();
		records.dVEntry.SelectViolationofDomesticViolationYes();
		records.dVEntry.VerifyOffenseInformationfieldsDisabled();
		records.dVEntry.SelectViolationofDomesticViolationNo();
		records.dVEntry.SelectAllVictimInformationFieldsCheckboxs();
		records.dVEntry.SelectVORelationship();
		records.dVEntry.SelectAtOffenderName2();
		Playback.threadWait();
		records.dVEntry.VerifySexRequirdAcknowledgeMessage();
		records.switchToDVEntry();
		records.dVEntry.SelectAtOffenderName1();
		records.dVEntry.VerifyRaceRequirdAcknowledgeMessage();
		records.switchToDVEntry();
		records.dVEntry.SelectAtOffenderName();
		Playback.threadWait();
		records.dVEntry.VerifyAtOffenderSex();
		records.dVEntry.VerifyAtOffenderRace();
		records.dVEntry.SelectAllOffenderInformationFieldCheckBox();
		records.dVEntry.SelectArrestedFor();
		records.dVEntry.ClickOffenderCommitSucideCheckbox();
		records.dVEntry.SelectOffenseCompliant();
		records.dVEntry.SelectDegreeofInjury();
		records.dVEntry.EnterAdultFemale();
		records.dVEntry.EnterJuvinalMale();
		records.dVEntry.EnterRemarks();
		records.dVEntry.SaveScreen();

		records.switchToDVEntry();
		records.dVEntry.clickRefreshButton();
		records.dVEntry.VerifyAtCaseNo();
		records.dVEntry.verifyAtVictimFirstName();
		records.dVEntry.VerifyAtVictimLastName();
		records.dVEntry.verifyAtSelectedOffenderName();
		// records.dVEntry.verifyNoOfOffendersAvailableAs2();
		records.dVEntry.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.caseUpdate.clickNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyDVIconAsGreen();
		records.caseUpdate.closeTheScreen();

		loader.navigateToScreen("DV Search");
		records.switchToDVSearch();
		records.dVSearch.ClickReset();
		records.dVSearch.ClickReportedDateResetButton();
		records.dVSearch.EnterAtVictimLastName();
		records.dVSearch.EnterAtVictimFirstName();
		records.dVSearch.ClickSearch();
		records.dVSearch.VerifyAtCaseNo(0);
		records.dVSearch.VerifyAtOffenderName();
		records.dVSearch.VerifyAtVictimName();

	}

	@Test(groups = "DomesticVoilenceFunctional")
	public void DvSearchScreenFunctionality_159634_159635_159636_159637(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "159634");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("DV Search");
		records.switchToDVSearch();
		records.dVSearch.EnterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		records.switchToDVSearch();
		records.dVSearch.ClickReportedDateResetButton();
		records.dVSearch.EnterAtReportedDateFrom();
		records.dVSearch.EnterReportedDateToAsCurrentDate();
		records.dVSearch.EnterAtOfficer();
		records.dVSearch.ClickSearch();
		records.dVSearch.VerifyAtCaseNo();

		// records.dVSearch.VerifyAtOffenderName();

		records.dVSearch.ClickBack();
		records.dVSearch.ClickReset();

		records.dVSearch.EnterAtVictimLastName();
		records.dVSearch.EnterAtVictimFirstName();
		records.dVSearch.SelectAtVORelationship();
		records.dVSearch.ClickReportedDateResetButton();
		records.dVSearch.ClickSearch();
		records.dVSearch.VerifyAtVictimName();
		records.dVSearch.verifyAtRelationShipInGrid();

		records.dVSearch.ClickBack();
		records.dVSearch.ClickReset();
		records.dVSearch.ClickReportedDateResetButton();
		records.dVSearch.EnterAtOffenderLastName();
		records.dVSearch.EnterAtOffenderFirstName();
		records.dVSearch.ClickSearch();
		records.dVSearch.VerifyAtOffenderNameAppearInGrid();

		records.dVSearch.ClickBack();
		records.dVSearch.ClickReset();

		records.dVSearch.SelectAtOffenseComplaint();
		records.dVSearch.ClickReportedDateResetButton();

		records.dVSearch.ClickAlcoholInvolvedCheckbox();

		records.dVSearch.ClickOtherDrugsInvolvedCheckbox();
		records.dVSearch.ClickChildrenInvolvedCheckbox();
		records.dVSearch.ClickSearch();
		records.dVSearch.VerifyAtOffenseAppearInGrid();
		records.dVSearch.SelectRowByAtOffense();

		records.switchToDVEntry();
		records.dVEntry.VerifyAtCaseNo();
		records.dVEntry.verifyCaseNoDisabled();
		records.dVEntry.verifyCaseInfoiconIsDisplayed();
		records.dVEntry.verifyAtVictimFirstName();
		records.dVEntry.VerifyAtVictimLastName();
		records.dVEntry.verifyAtSelectedOffenderName();

		// records.dVSearch.SelectRowByAtCaseNo();
		// objectIdentification.windowHandle.switchToMainWindow();

	}

	@Test(groups = { "UOFAndUCRTabsFunctionality" }, priority = 1) // Automated by Stalin
	public void UOFIncidentSubjectInformationTypeOfForceOfficerTabsFunctionality_253783(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253783");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUseOfForceTab();
		records.caseUpdate.caseUpdateUseOfForceTab.clickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.EnterAtSubjectLastName();
		records.uOFEntry.EnterAtSubjectFirstName();
		names.switchToNameSearchHelpWindow();
		names.nameSearchHelpWindow.SelectName();
		records.switchToUOFEntry();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.selectAtLocationType();
		records.uOFEntry.incidentSubjectInformationTab.selectAtReasonInitialContact();
		records.uOFEntry.incidentSubjectInformationTab.SelectAtMedicalAssitanceRequired();
		records.uOFEntry.incidentSubjectInformationTab.SelectAtCharge();
		records.switchToUOFEntry();
		records.uOFEntry.incidentSubjectInformationTab.SelectAtPatrolArea();

		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.selectAtListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.selectAtEffectiveness();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.ClickOfficerInformationTab();
		records.uOFEntry.officerInformationTab.SelectWasOfficerOnDuty();
		records.uOFEntry.officerInformationTab.SelectOfficerFullTimeEmployee();

		records.uOFEntry.Save();
		records.uOFEntry.VerifySuccessfulBottomMessage();
		String readUOFCaseNo = records.uOFEntry.readUOFCaseNo();
		String description = records.uOFEntry.ReadOfficerPf();
		records.uOFEntry.ClickReset();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.verifyAtSelectedLocationType();
		records.uOFEntry.incidentSubjectInformationTab.verifyAtSelectedreasonforInitialContact();

		records.uOFEntry.incidentSubjectInformationTab.verifyAtSelectedmedicalAssitancerequired();
		records.uOFEntry.incidentSubjectInformationTab.verifyAtSelectedPatrolArea();
		records.uOFEntry.incidentSubjectInformationTab.verifyAtCharge();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.VerifyAtTypeOfForce(0);
		records.uOFEntry.typeOfForceTab.verifyAtEffectiveness(0);
		records.uOFEntry.typeOfForceTab.clickAtGridrowByTypeOfForce();
		records.uOFEntry.typeOfForceTab.selectAtTypesOfForce1UsedByOfficer();
		records.uOFEntry.typeOfForceTab.selectAtEffectiveness1();
		records.uOFEntry.typeOfForceTab.ClickUpdateButton();
		records.uOFEntry.Save();
		records.uOFEntry.verifyUpdateSuccessfulStatusMsg();
		records.uOFEntry.typeOfForceTab.VerifyAtTypeOfForce1(0);
		records.uOFEntry.typeOfForceTab.verifyAtEffectiveness1(0);
		records.uOFEntry.verifyAttachmentsTabIsDisplayed();
		records.uOFEntry.verifyDispositionTabIsDisplayed();
		records.uOFEntry.verifyInjuryReportTabIsDisplayed();
		records.uOFEntry.verifyApprovalTabIsDisplayed();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUseOfForceTab();

		records.caseUpdate.caseUpdateUseOfForceTab.verifyAtUOF(0, readUOFCaseNo);
		records.caseUpdate.caseUpdateUseOfForceTab.verifyAtOfficerInGrid(0, description);

	}

	@Test(groups = { "UOFAndUCRTabsFunctionality" }, priority = 2) // Automated by Stalin
	public void UOFDispositionAndInjuryReportTabFunctionality_253783A(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253783A");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UOF Search");
		records.switchToUOFSearch();
		records.uOFSearch.selectAtTypeOfForceUsed();
		records.uOFSearch.selectAtEffectiveness();
		records.uOFSearch.ClickSearch();
		records.uOFSearch.selectAtRowByCaseNo();
		records.switchToUOFEntry();
		records.uOFEntry.ClickDispositionTab();
		records.uOFEntry.uOFDispositionTab.EnterAtDispositionPFNo();
		records.uOFEntry.uOFDispositionTab.taboutDateAndTime();
		records.uOFEntry.uOFDispositionTab.SelectAtDisposition();

		records.uOFEntry.uOFDispositionTab.switchToRicTextEdit();
		records.uOFEntry.uOFDispositionTab.enterRichTextEdit1();

		records.switchToUOFEntry();
		records.uOFEntry.ClickInjuryReportTab();
		records.uOFEntry.SwitchToInjuryReportTab();
		records.uOFEntry.injuryReportTab.clickSubjectRadioButton();
		Playback.threadWait();
		records.uOFEntry.injuryReportTab.clickFrontUpperLeftChestPart();
		records.uOFEntry.injuryReportTab.clickRearRightShoulder();
		records.uOFEntry.injuryReportTab.clickSave();
		records.switchToUOFEntry();
		records.uOFEntry.Save();
		records.uOFEntry.verifyUpdateSuccessfulStatusMsg();
		records.uOFEntry.ClickInjuryReportTab();
		records.uOFEntry.SwitchToInjuryReportTab();
		records.uOFEntry.injuryReportTab.verifyAtFrontUpperLeftChestPartChangedAsRed();
		records.uOFEntry.injuryReportTab.verifyAtFRearRightShoulderPartChangedAsRed();

		records.uOFEntry.injuryReportTab.verifySubjectLabelAsgreen();

		records.uOFEntry.injuryReportTab.clickOfficerRadioButton();
		Playback.threadWait();
		records.uOFEntry.injuryReportTab.clickFrontUpperLeftChestPart();
		records.uOFEntry.injuryReportTab.clickRearRightShoulder();
		records.uOFEntry.injuryReportTab.clickSave();
		records.switchToUOFEntry();

		records.uOFEntry.ClickInjuryReportTab();
		records.uOFEntry.SwitchToInjuryReportTab();
		records.uOFEntry.injuryReportTab.verifyAtFRearRightShoulderPartChangedAsRed();
		records.uOFEntry.injuryReportTab.verifyAtFrontUpperLeftChestPartChangedAsRed();
		records.uOFEntry.injuryReportTab.verifyofficertLabelAsgreen();
		records.switchToUOFEntry();
		records.uOFEntry.ClickDispositionTab();
		records.uOFEntry.uOFDispositionTab.switchToRicTextEdit();
		records.uOFEntry.uOFDispositionTab.verifyAtRichTextEdit();
		records.switchToUOFEntry();

		records.uOFEntry.uOFDispositionTab.verifyAtDispositionPf();
		records.uOFEntry.uOFDispositionTab.VerifyAtPFDescription();
		records.uOFEntry.uOFDispositionTab.verifyAtSelectedSisposition();

	}

	@Test(groups = { "UOFAndUCRTabsFunctionality" }, priority = 3) // Automated by Stalin
	public void UOFApprovalTabFunctionality_253783B(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253783B");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UOF Search");
		records.switchToUOFSearch();
		records.uOFSearch.selectAtTypeOfForceUsed();
		records.uOFSearch.selectAtEffectiveness();
		records.uOFSearch.ClickSearch();
		records.uOFSearch.selectAtRowByCaseNo();
		records.switchToUOFEntry();
		records.uOFEntry.switchToApprovalTab();

		records.uOFEntry.approvalTab.verifyStatusInGrid(0);

		records.uOFEntry.approvalTab.selectNewActionAsSendForApproval();
		records.uOFEntry.approvalTab.tabDateAndTime();
		records.uOFEntry.approvalTab.saveInApprovalTab();
		records.uOFEntry.switchToApprovalTab();
		records.uOFEntry.approvalTab.verifyStatusInGrid(1);
		records.switchToUOFEntry();
		records.uOFEntry.verifyAtStatusUOFEntry(1);

		records.uOFEntry.switchToApprovalTab();
		records.uOFEntry.approvalTab.selectActionAsReject();
		records.uOFEntry.approvalTab.selectAtRejectionCode();
		records.uOFEntry.approvalTab.tabDateAndTime();
		records.uOFEntry.approvalTab.saveInApprovalTab();
		records.uOFEntry.switchToApprovalTab();
		records.uOFEntry.approvalTab.verifAtRejectionCountAs1();
		records.uOFEntry.approvalTab.verifyStatusInGrid(2);
		records.switchToUOFEntry();
		records.uOFEntry.verifyAtStatusUOFEntry(2);
		records.uOFEntry.switchToApprovalTab();
		records.uOFEntry.approvalTab.selectNewActionAsSendForApproval();
		records.uOFEntry.approvalTab.tabDateAndTime();
		records.uOFEntry.approvalTab.saveInApprovalTab();
		records.uOFEntry.switchToApprovalTab();
		records.uOFEntry.approvalTab.verifyStatusInGrid(1);

		records.uOFEntry.approvalTab.selectNewActionAsApprove();
		records.uOFEntry.approvalTab.tabDateAndTime();
		records.uOFEntry.approvalTab.saveInApprovalTab();
		records.uOFEntry.switchToApprovalTab();
		records.uOFEntry.approvalTab.verifyStatusInGrid(3);
		records.switchToUOFEntry();
		records.uOFEntry.verifyAtStatusUOFEntry(3);

	}

	@Test(groups = { "UOFAndUCRTabsFunctionality" }) // Sprint 6 Mahesha K S
	public void UCRScreenFunctionality_254781(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "254781");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("UCR");
		records.switchToUCR();

		records.uCR.ClickAllReportCheckbox();
		records.uCR.ClickReturnAOffenseReportCheckbox();
		records.uCR.ClickAdultArrestReportCheckbox();
		records.uCR.ClickJuviniletArrestReportCheckbox();
		records.uCR.ClickSupplementalToReturnAReportCheckbox();
		records.uCR.ClickPropertyStolenReportCheckbox();
		records.uCR.ClickGenerateReportButton();
		// records.uCR.Verify14DoYouWantToPrintTheReportAckMsg();

		records.switchToUCR();
		records.uCR.ClickViewLogFileButton();
		records.switchToUCRlogsWindow();
		records.uCR.VerifycurrenDateInLog();

	}

	@Test(groups = { "CaseUpdateTabsFunctional" })
	public void VerifyCaseUpdatePropertyTabFunctionality_242531(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "242531");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.ClickAddNewPropertyReport();
		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.selectAtReason();
		property.propertyEntry.propertyEntryMainTab.selectAtProperty();
		property.propertyEntry.propertyEntryMainTab.enterDescription();
		property.propertyEntry.propertyEntryMainTab.enterAtValue();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.tabDateAndTime();
		property.propertyEntry.recoveredTab.tabOutQuantity();
		property.propertyEntry.recoveredTab.tabOutValue();
		property.propertyEntry.recoveredTab.SelectNameByAtInPossName();
		property.switchToPropertyEntry();
		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.selectAtDisposition();
		property.propertyEntry.recoveredTab.SelectAtInitialStorageUsingDescription();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();

		property.switchToPropertyEntry();
		property.propertyEntry.verifyAtCaseNo();
		String PropertyNo = property.propertyEntry.readPropertyNo();
		property.propertyEntry.clickMainTab();
		property.propertyEntry.propertyEntryMainTab.verifyAtReason();
		property.propertyEntry.propertyEntryMainTab.verifyAtProperty();
		property.propertyEntry.propertyEntryMainTab.verifyAt$Value();

		property.propertyEntry.clickRecoveredTab();
		property.propertyEntry.recoveredTab.verifyAtDateAsCurrentDate();
		property.propertyEntry.recoveredTab.verifyAt$Value();
		property.propertyEntry.recoveredTab.verifyNameByAtInPossName();
		property.propertyEntry.recoveredTab.VerifyAtDisposition();
		property.propertyEntry.recoveredTab.verifyAtInitialStorageLocationDescription();
		property.switchToPropertyEntry();
		property.propertyEntry.SaveTheScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickPropertyTab();
		records.caseUpdate.caseUpdatePropertyTab.verifyAtPropertyNo(PropertyNo, 0);
		records.caseUpdate.caseUpdatePropertyTab.VerifyAtReasonInGrid(0);
		records.caseUpdate.caseUpdatePropertyTab.VerifyAtValueUsingReason();
		records.caseUpdate.caseUpdatePropertyTab.VerifyAtStorageUsingReason();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToNamesTab();
		records.caseUpdate.caseUpdateNamesTab.VerifyAtLastNameAndFirstName(0);

	}

	@Test(groups = "CaseUpdateTabsFunctional") // Mithun
	public void VerifyCaseUpdateActivityTabFunctionality_150428(ITestContext testContext) {
		testContext.setAttribute("testID", "150428");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		records.switchToCaseSearch();
		records.caseSearch.clickSearch();
		records.caseSearch.ClickRowAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToActivityLogTab();
		records.caseUpdate.activityLogTab.EnterAtCode();
		String CodeDescription = records.caseUpdate.activityLogTab.ReadCodeDescription();
		records.caseUpdate.activityLogTab.EnterAtHeading();
		records.caseUpdate.activityLogTab.ClickEnterCommentsButton();
		home.switchToManageCommentsScreen();
		home.manageComments.EnterText();
		home.manageComments.SaveAndCloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToActivityLogTab();
		records.caseUpdate.activityLogTab.VerifyAtDate();
		records.caseUpdate.activityLogTab.VerifyAtCodeDescription(CodeDescription);
		records.caseUpdate.activityLogTab.VerifyAtHeading();
		records.caseUpdate.activityLogTab.VerifyAtEmpName();

	}

	@Test(groups = "CaseUpdateTabsFunctional") // Mithun
	public void ValidateCaseUpdateMapTabAndANCAFunctionality_291419(ITestContext testcontext) {
		testcontext.setAttribute("testID", "291419");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToMapTab();
		records.caseUpdate.caseUpdateMapTab.VerifyLatLongValue();
		records.caseUpdate.caseUpdateMapTab.ClickReset();
		// records.callEntry.callEntryMapTab.dragAndDropPointerInMap();
		records.caseUpdate.caseUpdateMapTab.clickUpdateLatLongButton();
		records.caseUpdate.caseUpdateMapTab.VerifyYesMasterGeoOverWriteConfirmMessage();
		records.caseUpdate.caseUpdateMapTab.verifyYesUpdateLatLongConfirmMessage();
		records.caseUpdate.switchToMapTab();
		records.caseUpdate.caseUpdateMapTab.ClickReset();
		// records.callEntry.callEntryMapTab.dragAndDropPointerInMap();
		records.caseUpdate.caseUpdateMapTab.clickUpdateLatLongButton();
		records.caseUpdate.caseUpdateMapTab.VerifyYesMasterGeoOverWriteConfirmMessage();
		records.caseUpdate.caseUpdateMapTab.verifyNoUpdateLatLongConfirmMessage();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToMapTab();
		records.caseUpdate.caseUpdateMapTab.VerifyLatLongValueNotSet();
		records.switchToCaseUpdate();
		records.caseUpdate.swithchtoANCATab();
		records.caseUpdate.caseUpdateANCATab.clickAddnew();
		animalControl.switchToAnimalCaseEntry();
		animalControl.animalCaseEntry.enterAtLocation();
		animalControl.animalCaseEntry.enterAtOfficer();
		animalControl.animalCaseEntry.selectComplaintTypeAsCrueltyToAnimals();
		animalControl.animalCaseEntry.tabOutReportingDateAndTime();
		animalControl.animalCaseEntry.clickSaveButton();
		animalControl.switchToAnimalCaseEntry();
		String ACENo = animalControl.animalCaseEntry.readACENo();
		animalControl.animalCaseEntry.closeScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.swithchtoANCATab();
		records.caseUpdate.caseUpdateANCATab.clickRefresh();
		records.caseUpdate.caseUpdateANCATab.verifyReportedDateAsCurrentDateInGrid(0);
		records.caseUpdate.caseUpdateANCATab.verifyOfficerAsAutomationInGrid(0);
		records.caseUpdate.caseUpdateANCATab.verifyActiveACENoInGrid(ACENo);
		records.caseUpdate.caseUpdateANCATab.verifyAtLocationInGrid(0);
		records.caseUpdate.caseUpdateANCATab.verifyAtComplaintTypeInGrid(0);

	}

	@Test(groups = "OpenRecordRequestFuntional")
	public void OpenRecordRequestActivityHistoryTab_159697(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "159697");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Records Request Search");
		records.switchToRecordsRequestSearch();
		records.openRecordsRequest.enterAtRelatedCaseNo();
		records.openRecordsRequest.clickSearchButton();
		records.openRecordsRequest.selectRowByAtRequestedBy();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.SwitchToActivityHistoryTab();
		records.openRecordsRequestEntry.activityHistoryTab.TabOutUpdateDate();
		records.openRecordsRequestEntry.activityHistoryTab.TabOutUpdatedByCode();
		records.openRecordsRequestEntry.activityHistoryTab.EnterAtHourDuration();
		records.openRecordsRequestEntry.activityHistoryTab.EnterAtMinDuration();
		records.openRecordsRequestEntry.activityHistoryTab.EnterComments();
		records.openRecordsRequestEntry.activityHistoryTab.ClickAddButton();
		records.openRecordsRequestEntry.activityHistoryTab.VerifyAddedCommentsInGrid();
		records.openRecordsRequestEntry.activityHistoryTab.ClickShowSystemCommentsCheckbox();
		records.openRecordsRequestEntry.activityHistoryTab.VerifyStatusAsOpenDisplaysInGrid();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.Save();

	}

	@Test(groups = "CaseUpdateTabsFunctional")
	public void VerifyRecordRequestTabFunctionality_159695(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "159695");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToCaseUpdateRequestTab();
		records.caseUpdate.caseUpdateRequestTab.clickAddNew();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.tabOutReceivedDate();
		records.openRecordsRequestEntry.EnterDueByDateAs3DaysFutureDate();
		records.openRecordsRequestEntry.selectAtRequestType();
		records.openRecordsRequestEntry.EnterAtRelatedCaseNo();
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterAtLastName();
		records.openRecordsRequestEntry.requestDetailsTab.tabOutFirstName();
		names.nameSearchHelpWindow.SelectName();
		records.switchToOpenRecordsRequestEntry();
		records.openRecordsRequestEntry.clickRequestDetailsTab();
		records.openRecordsRequestEntry.requestDetailsTab.enterRequestInformationDetails();
		records.openRecordsRequestEntry.Save();
		records.switchToOpenRecordsRequestEntry();
		String RecordRequestNo = records.openRecordsRequestEntry.readRequestNo();
		records.openRecordsRequestEntry.VerifyStatusAsOpen();
		records.openRecordsRequestEntry.VerifyStatusAs3Days();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToCaseUpdateRequestTab();
		records.caseUpdate.caseUpdateRequestTab.verifyAtRecievedDateAndTimeInGrid(0);
		records.caseUpdate.caseUpdateRequestTab.verifyAtRequestNoInGrid(RecordRequestNo, 0);
		records.caseUpdate.caseUpdateRequestTab.verifyAtRequestTypeInGrid(0);

	}

	@Test(priority = 3, groups = { "CaseUpdateTabsFunctional" }) // Mithun
	public void VerifyCaseUpdateUCRTabFunctionality_251472(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251472");

		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();

		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemParameter2001AsUCRNIBRS();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.VerifyAtCharge();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsProperty();
		records.fTC.SelectPropertyLossAsStolen();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.ClickMethodOfEntryForcedRadioButton();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyUCRTabAppearsRedColor();
		records.caseUpdate.ClickUCRTab();
		records.caseUpdate.uCRTab.EnterAtUCRCode();
		records.caseUpdate.uCRTab.EnterAtOfficerAssaulted();
		records.caseUpdate.uCRTab.EnterAtOfficerKilled();
		records.caseUpdate.uCRTab.ClickArsonInvolvedCheckbox();
		records.caseUpdate.uCRTab.EnterAtUCRDisposition();
		records.caseUpdate.clickSave();
		records.caseUpdate.verify1039DateAndTimeRequiredUCRTabAckMsg();
		records.switchToCaseUpdate();
		records.caseUpdate.uCRTab.TabOutClearanceDate();
		records.caseUpdate.uCRTab.EnterAtVictimCount();
		records.caseUpdate.uCRTab.SelectAtPropertyClassification();
		records.caseUpdate.uCRTab.ClickUninhabitedCheckbox();
		records.caseUpdate.uCRTab.EnterAtPropertyDamagedValue();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.VerifyUCRTabAppearsGreenColor();
		records.caseUpdate.ClickUCRTab();
		records.caseUpdate.uCRTab.VerifyAtUCRCode();
		records.caseUpdate.uCRTab.VerifyAtUCRCodeDescription();
		records.caseUpdate.uCRTab.VerifyAtUCRLineNo();
		records.caseUpdate.uCRTab.VerifyAtOfficerAssaulted();
		records.caseUpdate.uCRTab.VerifyAtOfficerKilled();
		records.caseUpdate.uCRTab.VerifyAronInvolvedCheckboxIsSelected();
		records.caseUpdate.uCRTab.VerifyAtUCRDisposition();
		records.caseUpdate.uCRTab.VerifyAtUCRDispositionDescription();
		records.caseUpdate.uCRTab.VerifyAtUCRMethod();
		records.caseUpdate.uCRTab.VerifyClearanceDate();
		records.caseUpdate.uCRTab.VerifyAtVictimCount();
		records.caseUpdate.uCRTab.VerifyAtPropertyClassification();
		records.caseUpdate.uCRTab.VerifyUninhabitedCheckboxIsSelected();
		records.caseUpdate.uCRTab.VerifyAtPropertyDamaged();
		records.caseUpdate.uCRTab.VerifyAtMgmtCFS();
		records.caseUpdate.uCRTab.VerifyAtCADCFS();
		records.caseUpdate.uCRTab.VerifyAtCADDisposition();

	}

	@Test(groups = "CaseUpdateTabsFunctional1")
	public void CaseUpdateScreen_CaseDataTab_Functional_251473(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "251473");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		popup.switchToCodedSearch();
		popup.kPICodedLookup.selectAtCharge();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.VerifyAtCharge();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectLocationTypeAsAmusementPark();
		records.fTC.SelectSuspectOfUsing();
		records.fTC.SelectCriminalActivityAsOtherGang();
		records.fTC.selectWeaponsUsedAsNone();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.clickSaveInternalTab();
		records.caseUpdate.caseUpdateCaseDataTab.verifyOccuredAtAcknowledgePopup();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		// records.caseUpdate.VerifyUpdateSuccessfulMessage();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.caseUpdate.VerifyUpdateSuccessfulMessage();
		records.switchToCaseUpdate();
		String reportedDate = records.caseUpdate.readReportedDate();
		String reportedTime = records.caseUpdate.readReportedTime();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.clickResetButton();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyAtChargeInGrid();
		records.caseUpdate.caseUpdateCaseDataTab.VerifyOccurredAtDateIsSameAsReportedDate(reportedDate);
		records.caseUpdate.caseUpdateCaseDataTab.VerifyOccurredAtTimeIsSameAsReportedTime(reportedTime);
		records.caseUpdate.caseUpdateCaseDataTab.verifyPoliceForceUsedSelectedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.verifyDomesticViolenceSelectedAsNo();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyCaseDataTabIsBlueColor();
	}

	@Test(groups = "CaseUpdateTabsFunctional1")
	public void WalkinEntry_CaseUpdate_ReportingTab_Functional_243236A(ITestContext testContext) {
		testContext.setAttribute("testID", "243236A");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.verifyRowCountIsOneInGrid();
		records.caseUpdate.reportingTab.VerifyTypeAsIncidentReport(0);
		records.caseUpdate.reportingTab.verifyIncidentReportStatusAsReportDue();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectAtType();
		records.reportManager.tabReportedbyPF();
		records.reportManager.save();
		records.switchToReportManager();
		records.reportManager.verifyInitialReportIsAlreadyPresent();
		records.reportManager.Close();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyReportingTabBlueColor();

	}

	@Test(groups = "CaseUpdateTabsFunctional1") // Vijay
	public void CaseUpdate_Names_suspectsTab_Functional_253120(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "253120");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectCrimeAgainstAsPerson();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtCriminalActivity();
		records.fTC.selectSuspectOfUsingAsNotApplicable();
		records.fTC.selectWeaponsUsedAsNone();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.switchToSuspectsTab();
		records.callEntry.callEntrySuspectsTab.clickAddSuspects();
		names.switchToSuspectEntry();
		names.suspectEntry.EnterAtLastNameFirstName();
		names.suspectEntry.SelectRace();
		names.suspectEntry.EnterHeight();
		names.suspectEntry.EnterWeight();
		names.suspectEntry.enterAtAddress();
		names.suspectEntry.verifyAgeFieldIsNotFilled();
		names.suspectEntry.SaveAndClose();
		records.switchToCallEntry();
		records.callEntry.switchToSuspectsTab();
		records.callEntry.callEntrySuspectsTab.clickRefresh();
		records.callEntry.callEntrySuspectsTab.verifyAddedSuspectDisplayInGrid();
		records.switchToCallEntry();
		records.callEntry.swithchtoNamesTab();
		records.callEntry.callEntryNamesTab.enterAtNameID();
		records.callEntry.callEntryNamesTab.selectActivityAsVictim();
		records.callEntry.callEntryNamesTab.clickAddNameButton();
		records.callEntry.callEntryNamesTab.saveNamesTab();
		records.switchToCallEntry();
		records.callEntry.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToCaseUpdateSuspectTab();
		records.caseUpdate.caseUpdateSuspectTab.clickRefreshButton();
		records.caseUpdate.caseUpdateSuspectTab.verifyRecordCountIsNotEqualToZero();
		records.caseUpdate.caseUpdateSuspectTab.selectRowByAtLastNameAndFirstNameInGrid();
		names.switchToSuspectEntry();
		names.suspectEntry.Close();
		records.switchToCaseUpdate();
		records.caseUpdate.clickResetButton();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToCaseUpdateSuspectTab();
		records.caseUpdate.caseUpdateSuspectTab.verifyRecordCountIsNotEqualToZero();
		records.switchToCaseUpdate();
		records.caseUpdate.clickNamesTab();
		records.caseUpdate.caseUpdateNamesTab.clickVictimOffenderIcon(0);
		records.switchToNameVictim();
		records.nameVictim.selectVictimTypeAsIndividual();
		records.nameVictim.selectAtChargeOffense();
		records.nameVictim.selectDomesticViolenceAsNo();
		records.nameVictim.clickAddButton();
		records.nameVictim.ClickOffenderIcon();
		records.switchToVictimOffender();
		records.victimOffender.selectAtOffender();
		records.victimOffender.selectRelationshipAsVictimWasFriend();
		records.victimOffender.clickAddButton();
		records.victimOffender.saveNClose();
		records.switchToNameVictim();
		records.nameVictim.selectAtInjuryLevel();
		records.nameVictim.clickInjuryLevelAddButton();
		records.nameVictim.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.verifyNamesTabIsBlueColor();
		records.caseUpdate.verifySuspectTabIsBlueColor();
		records.caseUpdate.VerifyUpdateSuccessfulMessage();

	}

	@Test(groups = "CaseUpdateTabsFunctional1") // Vijay
	public void WalkInEntry_UseOfForceTab_Functional_252302(ITestContext testContext) {
		testContext.setAttribute("testID", "252302");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.clickLocationVerifyCheckbox();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		String readCaseNo = records.caseUpdate.readCaseNo();
		records.caseUpdate.ClickUseOfForceTab();
		records.caseUpdate.caseUpdateUseOfForceTab.clickAddNew();
		records.switchToUOFEntry();
		records.uOFEntry.VerifyRelatedCaseCaseNo(readCaseNo);
		records.uOFEntry.TabOfficerPF();
		records.uOFEntry.verifyAtOfficer();
		records.uOFEntry.EnterAtNameID();
		records.uOFEntry.TabUOFDateAndTime();
		records.uOFEntry.ClickIncidentSubjectInformationTab();
		records.uOFEntry.incidentSubjectInformationTab.EnterTotalNoOfOfficersUsedForce();
		records.uOFEntry.incidentSubjectInformationTab.EnterTotalNoOfOfficersUsedForceFromYourAgency();
		records.uOFEntry.incidentSubjectInformationTab.SelectListTheSubjectActionsAsOthers();
		records.uOFEntry.incidentSubjectInformationTab.EnterSubjectActionsText();
		records.uOFEntry.incidentSubjectInformationTab.SelectWasSubjectArmedWithWeaponAsYes();
		records.uOFEntry.incidentSubjectInformationTab.SelectWeapons();
		records.uOFEntry.ClickTypeOfForceTab();
		records.uOFEntry.typeOfForceTab.SelectListTheTypesOfForceUsedByOfficer();
		records.uOFEntry.typeOfForceTab.SelectEffectiveness();
		records.uOFEntry.typeOfForceTab.EnterNotes();
		records.uOFEntry.typeOfForceTab.ClickAddButton();
		records.uOFEntry.ClickOfficerInformationTab();
		records.uOFEntry.officerInformationTab.SelectOfficerFullTimeEmployee();
		records.uOFEntry.officerInformationTab.SelectWasOfficerOnDuty();
		records.uOFEntry.officerInformationTab.SelectWasOfficerInjured();
		records.uOFEntry.officerInformationTab.SelectListOfficersInjuries();
		records.uOFEntry.Save();
		records.switchToUOFEntry();
		records.uOFEntry.verifyAdditionSuccessfulStatusMsg();
		String readUOFNo = records.uOFEntry.readUOFCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickUseOfForceTab();
		records.caseUpdate.caseUpdateUseOfForceTab.VerifyAtOfficerInGrid(0);
		records.caseUpdate.caseUpdateUseOfForceTab.verifyUOFNoInGrid(readUOFNo);
		records.switchToCaseUpdate();
		records.caseUpdate.verifyUseOfForceTabIsBlueColor();
	}

	@Test(groups = "CaseUpdateTabsFunctional1") // Vijay
	public void CallEntry_RelatedCasesTab_CaseUpdate_relatedCasesTab_Functional_261414(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "261414");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.callSearch.clickSearchButton();
		records.callSearch.SelectRowInGrid(0);
		records.switchToCallEntry();
		records.callEntry.switchToRelatedCallsTab();
		records.callEntry.callEntryRelatedCallsTab.EnterAtRelatedCallNo();
		records.callEntry.callEntryRelatedCallsTab.clickPoliceCheckBox();
		records.callEntry.callEntryRelatedCallsTab.VerifyAtLocation();
		records.callEntry.callEntryRelatedCallsTab.VerifyAtCFS();
		records.callEntry.callEntryRelatedCallsTab.ClickAddButton();
		records.callEntry.callEntryRelatedCallsTab.VerifyAtRelatedCallNo(0);
		records.callEntry.callEntryRelatedCallsTab.selectRowByIndex();
		records.callEntry.callEntryRelatedCallsTab.VerifyAtLocation();
		records.callEntry.callEntryRelatedCallsTab.VerifyAtCFS();
		records.callEntry.callEntryRelatedCallsTab.ClickAddButton();
		records.callEntry.callEntryRelatedCallsTab.SaveInternalTab();
		records.switchToCallEntry();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.ClickRelatedCaseTab();
		records.caseUpdate.caseUpdateRelatedCasesTab.VerifyAtRelatedCaseNoInGrid(0);// Changed
		records.caseUpdate.caseUpdateRelatedCasesTab.ClickAtCaseNoInGrid();
		records.caseUpdate.caseUpdateRelatedCasesTab.VerifyAtLocation();
		records.caseUpdate.caseUpdateRelatedCasesTab.VerifyAtCFS();
		records.caseUpdate.caseUpdateRelatedCasesTab.ClickAddButton();
		records.caseUpdate.caseUpdateRelatedCasesTab.VerifyAtRelatedCaseNoInGrid(0);
		records.switchToCaseUpdate();
		records.caseUpdate.verifyRelatedCaseTabIsBlueColor();
	}

	@Test(groups = "CaseUpdateTabsFunctional1") // Vijay
	public void VehicleEntry_CallEntry_CaseUpdate_VehicleTab_Functional_259708(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "259708");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Vehicle");
		loader.navigateToScreen("Vehicle/Boat Entry");
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.enterAtVinNo();
		vehicle.vehicleBoatEntry.enterYearAsCurrentYear();
		vehicle.vehicleBoatEntry.enterAtMake();
		vehicle.vehicleBoatEntry.enterAtModel();
		vehicle.vehicleBoatEntry.enterAtStyle();
		vehicle.vehicleBoatEntry.enterDescription();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.clickMainTab();
		vehicle.vehicleBoatEntry.vehicleBoatEntryMainTab.enterAtPlateNumber();
		vehicle.vehicleBoatEntry.vehicleBoatEntryMainTab.selectAtState();
		vehicle.vehicleBoatEntry.saveAndCloseScreen();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.enterAtVehicleNumber();
		records.callEntry.vehicleTab.enterAtState();
		vehicle.switchToVehicleBoatEntry();
		vehicle.vehicleBoatEntry.clickSelectButton();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.selectAtActivity();
		records.callEntry.vehicleTab.clickAddButton();
		records.callEntry.vehicleTab.InternalSave();
		records.switchToCallEntry();
		records.callEntry.switchToVehicleTab();
		records.callEntry.vehicleTab.verifyAtPlate(0);
		records.switchToCallEntry();
		records.callEntry.clickCaseInfoIcon();
		records.switchToCaseUpdate();
		records.caseUpdate.switchToVehicleTab();
		records.caseUpdate.caseUpdateVehicleTab.VerifyAtActivityinGrid(0);
		records.switchToCaseUpdate();
		records.caseUpdate.verifyVehicleTabIsBlueColor();
	}

	@Test(groups = "CaseUpdateTabsFunctional1")
	public void WalkInEntry_CaseUpdate_CadDataTab_Functional_150793(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "150793");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		String reportedDateAndTime = records.caseUpdate.readReportedDateAndTime();
		records.caseUpdate.ClickCADDataTab();
		records.caseUpdate.caseUpdateCadDataTab.verifyAtReportedLocationEditFieldAndFieldIsDisabled();
		records.caseUpdate.caseUpdateCadDataTab.verifyAtDispatcherEditFieldAndFieldIsDisabled();
		records.caseUpdate.caseUpdateCadDataTab.verifyAtCADCFSEditFieldAndFieldIsDisabled();
		records.caseUpdate.caseUpdateCadDataTab.verifyAtCADDispositionEditFieldAndFieldIsDisabled();
		records.caseUpdate.caseUpdateCadDataTab.verifyAtPrimeUnitEditFieldAndFieldIsDisabled();
		records.caseUpdate.caseUpdateCadDataTab.verifyAtOfficer1EditFieldAndFieldIsDisabled();
		records.caseUpdate.caseUpdateCadDataTab.verifyAtStackedDateEditFieldAndFieldIsDisabled(reportedDateAndTime);
		records.caseUpdate.caseUpdateCadDataTab.verifyAtDispatchedDateEditFieldAndFieldIsDisabled(reportedDateAndTime);
		records.caseUpdate.caseUpdateCadDataTab.verifyAtArrivedDateEditFieldAndFieldIsDisabled(reportedDateAndTime);
		records.caseUpdate.caseUpdateCadDataTab.verifyAtFinishedDateEditFieldAndFieldIsDisabled(reportedDateAndTime);
		records.switchToCaseUpdate();
		records.caseUpdate.verifyCadDataTabIsBlueColor();

	}

	@Test(groups = { "CaseSearchFunctional" })
	public void verifyTheInCarVideoAvailableCheckBoxIsAbleToSelect_254789(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "254789");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterToDateAsCurrentDate();
		records.caseSearch.clickAdvancedTab();
		records.caseSearch.advancedTab.verifyUsedBodyWornCameraCheckBoxIsEnabled();
		records.caseSearch.advancedTab.verifyInCarVideoAvailableCheckBoxIsEnabled();
		records.caseSearch.advancedTab.verifyBothVideoTypesAvailableCheckBoxIsEnabled();
		records.caseSearch.advancedTab.clickUsedBodyWornCameraCheckBox();
		records.caseSearch.clickSearch();
		records.caseSearch.verifyRowsAreDisplayedInGrid();
		records.caseSearch.clickBackButton();
		records.caseSearch.clickAdvancedTab();
		records.caseSearch.advancedTab.clickInCarVideoAvailableCheckBox();
		records.caseSearch.clickSearch();
		records.caseSearch.verifyRowsAreDisplayedInGrid();
		records.caseSearch.clickBackButton();
		records.caseSearch.clickAdvancedTab();
		records.caseSearch.advancedTab.clickUsedBodyWornCameraCheckBox();
		records.caseSearch.advancedTab.clickInCarVideoAvailableCheckBox();
		records.caseSearch.clickSearch();
		records.caseSearch.verifyRowsAreDisplayedInGrid();
		records.caseSearch.clickBackButton();
		records.caseSearch.clickAdvancedTab();
		records.caseSearch.advancedTab.clickBothVideoTypesAvailableCheckBox();
		records.caseSearch.advancedTab.verifyUsedBodyWornCameraCheckBoxIsNotEnabled();
		records.caseSearch.advancedTab.verifyInCarVideoAvailableCheckBoxIsNotEnabled();
		records.caseSearch.clickSearch();
		records.caseSearch.verifyRowsAreDisplayedInGrid();
		records.caseSearch.clickBackButton();
		records.caseSearch.clickAdvancedTab();
		records.caseSearch.advancedTab.clickBothVideoTypesAvailableCheckBox();
		records.caseSearch.advancedTab.verifyUsedBodyWornCameraCheckBoxIsEnabled();
		records.caseSearch.advancedTab.verifyInCarVideoAvailableCheckBoxIsEnabled();
	}

	@Test(groups = "CaseSearchFunctional")
	public void VerifyRole61AccessforPublicCases_240632(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "240632");
		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.selectAtCrimeAgainst();
		records.fTC.SelectPropertyLossAsStolen();
		records.fTC.selectAtLocationType();
		records.fTC.selectAtSuspectedOfUsing();
		records.fTC.ClickMethodOfEntryForcedRadioButton();
		records.fTC.saveNClose();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.tabOccurredAtDateTime();
		records.caseUpdate.caseUpdateCaseDataTab.selectPoliceForceUsedAsNone();
		records.caseUpdate.caseUpdateCaseDataTab.SelectDomesticViolenceAsYes();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseSearch.VerifyNoRecordAcknowledgeMessage();
		records.switchToCaseSearch();
		records.caseSearch.clickBackButton();
		records.caseSearch.enterAtCaseNo();
		records.caseSearch.VerifyNoRecordAcknowledgeMessage();
		records.switchToCaseSearch();
	}

	@Test(groups = { "CaseSearchFunctional" }) // Vijay
	public void verifyCaseSearchPrimeColumnShowThePrimeOfficerPF_253114(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "253114");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter734AsFalse();
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.clickMainTab();
		records.callEntry.callEntryMainTab.verifyPrimeOfficerShowsInOfficer1Tab();
		records.callEntry.closeScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		records.switchToCaseSearch();
		records.caseSearch.clearCaseNo();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtOfficer();
		records.caseSearch.clickPrimeOnlyCheckBox();
		records.caseSearch.clickSearch();
		records.caseSearch.verifyMoverHoverMessageShowAsPrimeOfficerName(0);
		records.caseSearch.ClickRowAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickReportingTab();
		records.caseUpdate.reportingTab.clickAddReportButton();
		records.switchToReportManager();
		records.reportManager.selectTypeAsIncidentReport();
		records.reportManager.tabReportedbyPF();
		records.reportManager.tabDateAndTime();
		records.reportManager.save();
		records.switchToReportStatus();
		records.reportStatus.close();
		records.switchToCaseSearch();
		records.caseSearch.clickBackButton();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtFromDate();
		records.caseSearch.enterAtToDate();
		records.caseSearch.enterAtLoggedOfficer1();
		records.caseSearch.clickPrimeOnlyCheckBox();
		records.caseSearch.clickSearch();
		records.caseSearch.verifyMoverHoverMessageShowAsLoggedOfficerName(0);
		records.caseSearch.ClickRowAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCallInfoIcon();
		records.switchToCallEntry();
		records.callEntry.clickMainTab();
		records.callEntry.callEntryMainTab.verifyLoggedPrimeOfficerShowsInOfficer1Tab();
	}

	@Test(groups = { "CaseSearchFunctional" }) // Sep Sprint 6 Mahesha K S
	public void VerifyCantOpenReportFromCaseSearchScreenReportColumn_251434(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "254134");

		Browser.NavigateToLoginScreen();
		login.loginScreen.logonUsingTestContext();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.verifyJurisAsPX();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtFromDate();
		records.caseSearch.enterAtToDate();
		records.caseSearch.clickSearch();
		records.caseSearch.clickReportIconInGridByCaseNo();
		records.caseSearch.verify39AccessDeniedAckMsg();
		records.switchToCaseSearch();
		records.caseSearch.clickBackButton();
		records.caseSearch.verifyJurisAsPX();
		records.caseSearch.selectJurisAsBC();
		records.caseSearch.enterAtFromDate();
		records.caseSearch.clickSearch();
		records.caseSearch.clickReportIconInGridByCaseNo1();
		records.caseSearch.verify21838AccessDeniedAckMsg();
		records.switchToCaseSearch();
	}

	@Test(groups = { "CaseSearchFunctional" })
	public void verifyHoldForPublicCheckBox_254485(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "254485");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.clickAdvancedTab();
		records.caseSearch.ClickHoldForPublicCheckBox();
		records.caseSearch.clickSearch();
		records.caseSearch.SelectRowInGrid(1);
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.selectDomesticViolenceAsNo();
		records.caseUpdate.caseUpdateCaseDataTab.saveInternalTab();
		records.switchToCaseUpdate();
		records.caseUpdate.saveScreen();
		records.caseUpdate.VerifyNotForPublicChecked();
		records.switchToCaseUpdate();
	}

	@Test(groups = { "CaseSearchFunctional" }) // Vijay
	public void verifyUpdatedPrimeOfficerPFShowingInCAColumnGrid_254138(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "254138");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.enterAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.closeTheScreen();
		records.switchToCaseSearch();
		records.caseSearch.clickSearch();
		records.caseSearch.mouseHoverAtPrimeColumnAndVerify();
		records.caseSearch.ClickRowAtCaseNo();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseManagementIcon();
		cm.switchToCaseFolder();
		cm.caseFolder.clickAssignmentTab();
		cm.caseFolder.caseFolderAssignmentTab.selectAtDivision();
		cm.caseFolder.caseFolderAssignmentTab.selectAtSection();
		cm.caseFolder.caseFolderAssignmentTab.enterAtSupervisor();
		cm.caseFolder.caseFolderAssignmentTab.enterAtPrimeInvestigator();
		cm.caseFolder.caseFolderAssignmentTab.tabOutDateAssignedTime();
		cm.switchToCaseFolder();
		cm.caseFolder.saveNclose();
		records.switchToCaseUpdate();
		records.caseUpdate.SaveNClose();
		records.switchToCaseSearch();
		records.caseSearch.mouseHoverAtCAColumnAndVerify();
		records.caseSearch.mouseHoverAtPrimeColumnAndVerify();
	}

	// Automated by Mani // Date :11/02/2021 //Quarter:Q4 // Sprint:03
	// //Module:Records
	@Test(groups = "CaseSearchFunctional")
	public void ToVerifyTheFunctionalityOfShowOnlyCasesWithoutReportsCheckboxInCaseSearch_288629(
			ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "286629");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtFromDate();
		records.caseSearch.enterAtToDate();
		records.caseSearch.clickSearch();
		records.caseSearch.verifyRowsAreDisplayedInGrid();
		records.caseSearch.clickBackButton();
		records.caseSearch.verifyclickShowOnlyCasesWithReportsCheckBoxEnable();
		records.caseSearch.clickShowOnlyCasesWithReportsCheckBox();
		records.caseSearch.clickSearch();
		records.caseSearch.verifyRowsAreDisplayedInGrid();
		records.caseSearch.verifyReportIconIsDisplayed();
		records.caseSearch.clickBackButton();
		records.caseSearch.clickShowOnlyCasesWithReportsCheckBox();
		records.caseSearch.clickShowOnlyCasesWithoutReportsCheckBox();
		records.caseSearch.clickSearch();
		records.caseSearch.verifyRowsAreDisplayedInGrid();
		records.caseSearch.verifyReportIconIsNotDisplayed();
		records.caseSearch.clickBackButton();
		records.switchToCaseSearch();
		records.caseSearch.verifyclickShowOnlyCasesWithReportsCheckBoxEnable();
		records.caseSearch.verifyNotReviewedOnlyCheckBoxEnable();
		records.caseSearch.verifyclickShowOnlyCasesWithOutReportsCheckBoxEnable();

	}

	@Test(groups = "CallSearchFunctional")
	public void VerifyGreenTickInMapColumnOfCallSearchScreen_143757(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "143757");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		Playback.controlReadyThreadWait();
		records.callSearch.ClickDateResetButton();
		Playback.waitForControlReady();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.closeScreen();
		records.switchToCallSearch();
		records.callSearch.clickSearchButton();
		records.callSearch.VerifyGreenTickinMapColumn(0);
	}

	@Test(groups = "CallSearchFunctional")
	public void verifyLocationInCallSearchScreen_240639(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "240639");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtCallNo();
		records.switchToCallEntry();
		records.callEntry.VerifyAtReportedLocation();
		records.callEntry.clickEditTab();
		records.callEntry.EnterAtCallCompletionLocation();
		records.callEntry.save();
		records.switchToCallEntry();
		records.callEntry.clickEditTab();
		records.callEntry.VerifyAtCallcompletionLocation();
		records.callEntry.closeScreen();
		records.switchToCallSearch();
		records.callSearch.clickSearchButton();
		records.callSearch.VerifyAtLocationByAtCallNo();

	}

	@Test // Automated By Stalin

	public void VerifytheVinFieldInTowSearch_251106(ITestContext testContext) {
		testContext.setAttribute("testID", "251106");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.verifyVinFieldIsDisplayed();
		records.callSearch.ClickDateResetButton();
		records.callSearch.enterAtVinNo();
		records.callSearch.clickSearchButton();
		records.callSearch.VerifyAtCallNoInGrid(0);
		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Vehicle");
		loader.navigateToScreen("Tow");
		tow.switchToTowScreen();
		tow.towScreen.enterAtVinNo();
		tow.towScreen.clickSearchButton();
		tow.towScreen.verifyAtCallNoInGrid(0);

	}

	@Test(groups = "CallSearchFunctional")

	public void Police2020DefectrecordsModule_253696(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "253696");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.ClickDateResetButton();
		records.callSearch.selectAtJuris();
		records.callSearch.EnterToDateAsCurrentDate();
		records.callSearch.clickSearchButton();
		records.callSearch.clickSelectedCheckbox();
		records.callSearch.verifyCheckboxEnabledInGrid();
		records.callSearch.selectRandomGridRow();
		records.callSearch.ClickShowMapButton();
		home.switchToGlobalMapScreen();
		home.globalMapScreen.Close();
		records.switchToCallSearch();
		records.callSearch.reloadCallSearch();
		records.switchToCallSearch();
		records.callSearch.selectAtJuris1();
		records.callSearch.ClickDateResetButton();
		records.callSearch.EnterToDateAsCurrentDate();
		records.callSearch.clickSearchButton();
		records.callSearch.clickSelectedCheckbox();
		records.callSearch.verifyCheckboxEnabledInGrid();
		records.callSearch.selectRandomGridRow();
		records.callSearch.ClickShowMapButton();
		home.switchToGlobalMapScreen();
		home.globalMapScreen.Close();
		records.switchToCallSearch();
		records.callSearch.reloadCallSearch();
		records.switchToCallSearch();
		records.callSearch.selectJurisAsNull();
		records.callSearch.ClickDateResetButton();
		records.callSearch.EnterToDateAsCurrentDate();
		records.callSearch.clickSearchButton();
		records.callSearch.clickSelectedCheckbox();
		records.callSearch.verifyCheckboxEnabledInGrid();
		records.callSearch.selectRandomGridRow();
		records.callSearch.ClickShowMapButton();
		home.switchToGlobalMapScreen();
		home.globalMapScreen.Close();
		records.switchToCallSearch();
		records.callSearch.reloadCallSearch();
		records.switchToCallSearch();
	}

	@Test(groups = { "CallSearchFunctional" }) // Oct Sprint 1 Automated by Mahesha K S
	public void VerifyDataPointingInCallCaseSearchScreenFromShowMap_255335(ITestContext testContext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());

		testContext.setAttribute("testID", "255335");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.ClickDateResetButton();
		records.callSearch.enterAtFromDate();
		records.callSearch.enterAtToDate();
		records.callSearch.clickSearchButton();
		records.callSearch.clickSelectedCheckbox();
		records.callSearch.verifyCallCheckBoxesDisplayed(0);
		ArrayList<String> callNos = records.callSearch.selectCallCheckBoxesAndReadCallNo(5);
		records.callSearch.ClickShowMapButton();
		home.switchToGlobalMapScreen();
		home.globalMapScreen.verifySelectedCallNoShowingInMapScreen(callNos);
		home.globalMapScreen.Close();
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.clickDateResetButton();
		records.caseSearch.enterAtFromDate();
		records.caseSearch.enterAtToDate();
		records.caseSearch.clickSearch();
		records.caseSearch.clickClearMapButton();
		records.caseSearch.clickSelectedCheckBox();
		records.caseSearch.verifyCaseCheckBoxesDisplayed(0);
		ArrayList<String> caseNos = records.caseSearch.selectCaseCheckBoxesAndReadCaseNo(5);
		records.caseSearch.ClickShowMapButton();
		home.switchToGlobalMapScreen();
		home.globalMapScreen.verifySelectedCaseNoShowingInMapScreen(caseNos);

	}

	@Test(groups = { "CallSearchFunctional" }) // Vijay
	public void verifyCallSearchByUsingTrackingFieldCriteriaToShowResult_261411(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "261411");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.enterAtTracking();
		records.callSearch.ClickDateResetButton();
		records.callSearch.clickSearchButton();
		records.callSearch.verifyRowCountIsNotZero();
		records.callSearch.clickBackButton();
		records.callSearch.selectAtJuris();
		records.callSearch.enterAtTracking();
		records.callSearch.ClickDateResetButton();
		records.callSearch.clickSearchButton();
		records.callSearch.verifyRowCountIsNotZero();
		records.callSearch.clickBackButton();
		records.callSearch.selectJurisAsNull();
		records.callSearch.enterAtTracking();
		records.callSearch.ClickDateResetButton();
		records.callSearch.clickSearchButton();
		records.callSearch.verifyRowCountIsNotZero();

	}

	@Test(groups = { "CallSearchFunctional" }) // Q4 Sprint 5 Automated by Mahesha
	public void VerifyCallSearchScreenLocationfieldWithSpecificSelection_261987(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "261987");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		// address
		records.callSearch.ClickDateResetButton();
		records.callSearch.SelectLocationAsAddress();
		records.callSearch.EnterAtPremise();
		records.callSearch.EnterAtStreetName();
		records.callSearch.EnterAtApartment();
		records.callSearch.clickSearchButton();
		records.callSearch.verifyRecordsListedInGrid();
		records.callSearch.reloadCallSearch();
		records.switchToCallSearch();
		records.callSearch.ClickDateResetButton();
		records.callSearch.SelectLocationAsAddress();
		records.callSearch.EnterAtPremise();
		records.callSearch.EnterAtInvalidStreetName();
		records.callSearch.clickSearchButton();
		records.callSearch.VerifyNoRecordAcknowledgeMessage();

		// intersection
		// records.callSearch.reloadCallSearch();
		records.callSearch.reloadCallSearch();
		records.switchToCallSearch();
		records.callSearch.ClickResetButton();
		records.callSearch.ClickDateResetButton();
		records.callSearch.SelectLocationAsIntersection();
		records.callSearch.verifyStreet2Disabled();
		records.callSearch.EnterAtStreet1();
		records.callSearch.clickSearchButton();
		records.callSearch.verifyRecordsListedInGrid();
		records.callSearch.reloadCallSearch();
		records.switchToCallSearch();
		records.callSearch.ClickDateResetButton();
		records.callSearch.SelectLocationAsIntersection();
		records.callSearch.verifyStreet2Disabled();
		records.callSearch.EnterAtInvalidStreet1();
		records.callSearch.clickSearchButton();
		records.callSearch.VerifyNoRecordAcknowledgeMessage();

		// commonName
		records.callSearch.reloadCallSearch();
		records.switchToCallSearch();
		records.callSearch.ClickResetButton();
		records.callSearch.ClickDateResetButton();
		records.callSearch.SelectLocationAsCommonName();
		records.callSearch.EnterAtCommonName();
		records.callSearch.clickSearchButton();
		records.callSearch.verifyRecordsListedInGrid();
		records.callSearch.reloadCallSearch();
		records.switchToCallSearch();
		records.callSearch.ClickDateResetButton();
		records.callSearch.SelectLocationAsCommonName();
		records.callSearch.EnterAtInvalidCommonName();
		records.callSearch.clickSearchButton();
		records.callSearch.VerifyNoRecordAcknowledgeMessage();
		records.switchToCallSearch();
	}

	@Test(groups = { "CallSearchFunctional" }) // Q4 Sprint 5 Automated by Mahesha
	public void VerifyCallSearchScreenLocationfieldWithOutSpecificSelection_261988(ITestContext testcontext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "261988");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		// address
		records.callSearch.ClickDateResetButton();
		records.callSearch.EnterAtLocation();
		records.callSearch.verifyAddressInfoIconDisplayed();
		records.callSearch.clickSearchButton();
		records.callSearch.verifyRecordsListedInGrid();
		records.callSearch.reloadCallSearch();
		// Invalid
		records.switchToCallSearch();
		records.callSearch.ClickResetButton();
		records.callSearch.EnterAtInvalidLocations(0);
		records.callSearch.verifyInvalidAddressAcknowledge();

		// commonName
		records.switchToCallSearch();
		records.callSearch.ClickResetButton();
		records.callSearch.EnterAtLocationCommonName();
		records.callSearch.verifyAddressInfoIconDisplayed();
		records.callSearch.clickSearchButton();
		records.callSearch.verifyRecordsListedInGrid();
		records.callSearch.reloadCallSearch();
		// invalid
		records.switchToCallSearch();
		records.callSearch.ClickResetButton();
		records.callSearch.EnterAtInvalidLocations(1);
		records.callSearch.verifyInvalidAddressAcknowledge();

		// Intersection
		records.switchToCallSearch();
		records.callSearch.ClickResetButton();
		records.callSearch.EnterAtLocationIntersection();
		records.callSearch.verifyAddressInfoIconDisplayed();
		records.callSearch.clickSearchButton();
		records.callSearch.verifyRecordsListedInGrid();
		records.callSearch.reloadCallSearch();
		// Invalid
		records.switchToCallSearch();
		records.callSearch.ClickResetButton();
		records.callSearch.EnterAtInvalidLocations(2);
		records.callSearch.verifyInvalidAddressAcknowledge();
		records.switchToCallSearch();

	}

	@Test(groups = { "CallSearchFunctional" }) // Automated by Stalin
	public void callsearchnbringingresultbasedonjuris_261408(ITestContext testContext) {

		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testContext.setAttribute("testID", "261408");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Settings");
		loader.navigateToScreen("System Parameter");
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter274AsFalse();
		settings.switchToSystemParamter();
		settings.sysParameter.setSystemparameter275AsFalse();
		settings.switchToSystemParamter();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.verifyFromDateAsPreviousDate();
		records.callSearch.verifyToDateAsCurrentDate();
		records.callSearch.verifyJurisAsPXProphoenix();
		records.callSearch.ClickDateResetButton();
		records.callSearch.EnterToDateAsCurrentDate();
		records.callSearch.clickSearchButton();
		records.callSearch.clickBackButton();
		records.callSearch.ClickResetButton();
		records.callSearch.selectAtJuris();
		records.callSearch.ClickDateResetButton();
		records.callSearch.EnterToDateAsCurrentDate();
		records.callSearch.clickSearchButton();
		records.callSearch.verifyJurisAsBCInGrid();
		records.callSearch.clickBackButton();
		records.callSearch.selectJurisAsNull();
		records.callSearch.ClickDateResetButton();
		records.callSearch.EnterToDateAsCurrentDate();
		records.callSearch.clickSearchButton();
		records.callSearch.verifyJurisAsNullInGrid();

	}

	@Test(groups = "CallSearchFunctional") // Automated by Mithun
	public void verifyLocationInCallSearch_caseSearch_CrashSearch_256801(ITestContext testContext) {
		testContext.setAttribute("testID", "256801");
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Call Search");
		records.switchToCallSearch();
		records.callSearch.ClickResetButton();
		records.callSearch.SelectLocationAsIntersection();
		records.callSearch.EnterAtStreet1();
		records.callSearch.verifyStreet2IsEnabled();
		records.callSearch.EnterAtStreet2();
		records.callSearch.clickSearchButton();
		records.callSearch.VerifyAtLocationInGrid(0);

		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToScreen("Case Search");
		records.switchToCaseSearch();
		records.caseSearch.ClickReset();
		records.caseSearch.SelectLocationAsIntersection();
		records.caseSearch.EnterAtStreet1();
		records.caseSearch.verifyStreet2IsEnabled();
		records.caseSearch.EnterAtStreet2();
		records.caseSearch.clickSearch();
		records.caseSearch.VerifyAtLocationInGrid(0);

		objectIdentification.windowHandle.switchToMainWindow();
		loader.navigateToModule("Traffic");
		loader.navigateToScreen("Crash Search");
		trafficWI.switchToCrashSearch();
		trafficWI.crashSearch.clickReset();
		trafficWI.crashSearch.selectAddressAsIntersection();
		trafficWI.crashSearch.enterAtStreet1();
		trafficWI.crashSearch.enterAtStreet2();
		trafficWI.crashSearch.clickSearch();
		trafficWI.crashSearch.selectRow();
		trafficWI.switchToCrashEntry();
		trafficWI.crashEntry.verifyAtLocation();

	}

	// Automated by:-Abinaya , Date :-02/10/2022 , Quarter:-1 , Sprint:-3 ,
	// Module:-Records .
	@Test(groups = { "" })
	public void VerifytheNIBRSCyberspaceInLocationTypeOnFTCScreen_292647(ITestContext testcontext) {
		ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
		testcontext.setAttribute("testID", "292647");
		Browser.NavigateToLoginScreen();
		login.loginScreen.Logon();
		loader.navigateToModule("Records");
		loader.navigateToScreen("Walk-In Entry");
		records.switchToWalkInEntry();
		records.walkInEntry.enterAtCADCFS();
		records.walkInEntry.tabTheReportedDate();
		records.walkInEntry.tabTheReportedTime();
		records.walkInEntry.enterAtLocation();
		records.walkInEntry.tabTheReceivedSource();
		records.walkInEntry.enterAtCADDispositon();
		records.walkInEntry.enterAtUnit();
		records.walkInEntry.save();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.selectAtNIBRS();
		records.fTC.verifyAtLocationTypeNotListed();
		records.fTC.CloseScreen();
		records.switchToCaseUpdate();
		records.caseUpdate.clickCaseDataTab();
		records.caseUpdate.caseUpdateCaseDataTab.enterAtCharge1();
		records.caseUpdate.caseUpdateCaseDataTab.clickCFSAddButton();
		records.switchToFTC();
		records.fTC.selectAttemptedCompletedAsCompleted();
		records.fTC.SelectAtNIBRS1();
		records.fTC.verifyAtLocationType();
	}
	//Automated by KIRAN :-     Date :-2/10/2022  Quarter:-1  Sprint:-3  Module:-Records
	
		@Test
		public void ToVerifyWhetherCallandCaseInsertionIsWorkingProperlyInCrashEentryScreen_OH_292634(
				ITestContext testContext) {
			ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
			testContext.setAttribute("testID", "292634");
			Browser.NavigateToLoginScreen();
			login.loginScreen.Logon();
			loader.navigateToModule("Records");
			loader.navigateToScreen("Call Search");
			records.switchToCallSearch();
			records.callSearch.clickSearchButton();
			records.callSearch.ClickAtCallNoInGrid();
			records.switchToCallEntry();
			records.callEntry.clickCrashIcon();
			traffic.switchToCrashSearchHelpWindow();
			//traffic.crashSearchHelpWindow.verifyCrashNoInGrid(null);
			traffic.crashSearchHelpWindow.SelectRowByAtCaseNo();
			traffic.switchToCrashEntry();
			traffic.crashEntry.verifyAtCaseNo();
			traffic.crashEntry.verifyCaseInfoAppears();
			traffic.crashEntry.verifyAtReportedLocation();
			traffic.crashEntry.verifyReportedLocationInfoIconIsDisplayed();
			//traffic.crashEntry.clickReportedLocationInfoIcon();

			traffic.crashEntry.verifyStatusAsOnHoldAndAppearAsGreenColor();
			traffic.crashEntry.saveScreen();
			traffic.crashEntry.verify1003UpdateSuccessfulFooterMessage();
			records.switchToCallEntry();
			records.callEntry.save();
			records.callEntry.verifyUpdatedSuccessfulStatusMessage();
			records.callEntry.verifyCrashIconColorChange();
			
			loader.navigateToScreen("Case Search");
			records.switchToCaseSearch();
			records.caseSearch.clickSearch();
			records.caseSearch.selectRowByAtCaseNo();
			records.switchToCaseUpdate();
			records.caseUpdate.ClickCrashIcon();
			
			
			traffic.switchToCrashSearchHelpWindow();
			//traffic.crashSearchHelpWindow.verifyCrashNoInGrid(null);
			traffic.crashSearchHelpWindow.SelectRowByAtCaseNo();
			
			traffic.switchToCrashEntry();
			traffic.crashEntry.verifyAtCaseNo();
			traffic.crashEntry.verifyAtReportedLocation();
			traffic.crashEntry.verifyStatusAsOnHoldAndAppearAsGreenColor();
			traffic.crashEntry.saveScreen();
			traffic.crashEntry.verify1003UpdateSuccessfulFooterMessage();
			traffic.crashEntry.verifyStatusAsOnHoldAndAppearAsGreenColor();
			traffic.crashEntry.closeScreen();
			traffic.switchToCrashSearchHelpWindow();
			traffic.crashSearchHelpWindow.CloseScreen();
			
			records.switchToCaseUpdate();
			records.caseUpdate.saveScreen();
			records.caseUpdate.VerifyCrashIconColorChange();
			records.caseUpdate.VerifyUpdateSuccessfulMessage();
			
		
		}
		@Test(groups = "") // Automated by Mithun
		public void IfcallSummaryIsApproved_lockedApplicationshouldnotallowtoediteventhe24101permissionenabled_262641(ITestContext testContext) {
			testContext.setAttribute("testID", "262641");
			ExtentReport.CreateTest(Thread.currentThread().getStackTrace()[1].getMethodName());
			Browser.NavigateToLoginScreen();
			login.loginScreen.Logon();
			loader.navigateToModule("Records");
			loader.navigateToScreen("Call Search");
			records.switchToCallSearch();
			records.callSearch.ClickResetButton();
			records.callSearch.enterAtCallNo();
			records.switchToCallEntry();
			records.callEntry.verifyApprovalTabIsNotDisplayed();
			loader.navigateToModule("Settings");
			loader.navigateToScreen("System Parameter");
			settings.switchToSystemParamter();
			settings.sysParameter.clickApprovalParameterButton();
			settings.switchToApprovalParameterWindow();
			settings.approvalParameter.selectAtApprovalProcess();
			settings.approvalParameter.setEnableApprovalProcessAsTrue();
			settings.approvalParameter.saveScreen();
			settings.switchToApprovalParameterWindow();
			settings.approvalParameter.closeScreen();
			loader.navigateToModule("Records");
			loader.navigateToScreen("Call Search");
			records.switchToCallSearch();
			records.callSearch.ClickResetButton();
			records.callSearch.enterAtCallNo();
			records.switchToCallEntry();
			records.callEntry.verifyCallSummaryTabIsDisplayed();
			records.callEntry.switchToApprovalTab();
			records.callEntry.callEntryApprovalTab.verifyAllTheFieldsDisabled();
			records.switchToCallEntry();
			records.callEntry.swithchtoCallSummaryTab();
			records.callEntry.callSummaryTab.selectTemplate();
			records.callEntry.callSummaryTab.clickLoadButton();
			records.callEntry.callSummaryTab.saveCallsummaryTab();
			records.switchToCallEntry();
			records.callEntry.save();
			records.switchToCallEntry();
			records.callEntry.switchToApprovalTab();
			records.callEntry.callEntryApprovalTab.verifyAllTheFieldsEnabled();
			
		}
		
	@AfterMethod(groups = { "ReportEntrySupervisor", "ManagementReportStatus", "ReportEntryPoliceOfficer",
			"2020DefectAttachments", "2020DefectAttachmentsSequential", "2020DefectCallEntry",
			"2020DefectCallEntrySequential", "2020DefectCallSearch", "2020DefectCaseSearch", "2020DefectCaseSearch2",
			"2020DefectCaseSearchSequential", "2020DefectReportEntry", "2020DefectReportSearch",
			"2020DefectReportSearchSequential", "2020DefectCaseUpdateTabs", "2020DefectIBRSubmission",
			"2020DefectReportsVerify", "2020DefectIBRSubmissionSequential", "2020DefectUOF", "2020DefectSequential",
			"2020DefectLocalRunScripts", "2020DefectCaseFolder", "2020DefectUCR", "2021DefectTestCases",
			"2021DefectTestCases2", "2021DefectTestCases3", "2021DefectTestCases4", "IBRcodeCompletedWI",
			"DomesticVoilenceFunctional", "OpenRecordRequestFuntional", "MohanCRM", "ReportApprovalProcess",
			"ReportApprovalProcess1", "VehicleRelatedTestCase", "HomeRelatedTestCase", "incidentreportScripts",
			"GeoRelatedTestCase", "CallSummaryEnhancement", "DirectReportSuspectAndProfileSearchFunctional",
			"RecordRequestCompleteFunctionality", "CaseUpdateIcons", "CallEntryIcons", "CallEntryTabFunctionality",
			"CaseUpdateTabsFunctional", "CaseUpdateTabsFunctional1", "CaseSearchFunctional", "CallSearchFunctional" })
	public void afterMethodrecords(ITestResult testResult) {

		// System.out.println(testResult.getMethod().getMethodName());

		try {
			ExtentReport.getResult(testResult);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		objectIdentification.windowHandle.focusOnActiveElementAndSwitch();
		/*
		 * try Playback.takeScreenShotOnFailure(testResult); } catch (IOException e) {
		 * e.printStackTrace(); }
		 */

		Playback.stop();
		ExtentReport.GenerateHTML();
		login.Reset();
		loader.Reset();
		records.Reset();
	}

	@AfterSuite(groups = { "ReportEntrySupervisor", "ManagementReportStatus", "ReportEntryPoliceOfficer",
			"2020DefectAttachments", "2020DefectAttachmentsSequential", "2020DefectCallEntry",
			"2020DefectCallEntrySequential", "2020DefectCallSearch", "2020DefectCaseSearch", "2020DefectCaseSearch2",
			"2020DefectCaseSearchSequential", "2020DefectReportEntry", "2020DefectReportSearch",
			"2020DefectReportSearchSequential", "2020DefectCaseUpdateTabs", "2020DefectIBRSubmission",
			"2020DefectReportsVerify", "2020DefectIBRSubmissionSequential", "2020DefectUOF", "2020DefectUOFSequential",
			"2020DefectLocalRunScripts", "2020DefectCaseFolder", "2020DefectUCR", "IBRcodeCompletedWI",
			"2021DefectTestCases", "2021DefectTestCases2", "2021DefectTestCases3", "2021DefectTestCases4",
			"DomesticVoilenceFunctional", "OpenRecordRequestFuntional", "MohanCRM", "ReportApprovalProcess",
			"ReportApprovalProcess1", "VehicleRelatedTestCase", "HomeRelatedTestCase", "incidentreportScripts",
			"GeoRelatedTestCase", "CallSummaryEnhancement", "DirectReportSuspectAndProfileSearchFunctional",
			"RecordRequestCompleteFunctionality", "CaseUpdateIcons", "CallEntryIcons", "CallEntryTabFunctionality",
			"CaseUpdateTabsFunctional", "CaseUpdateTabsFunctional1", "CaseSearchFunctional", "CallSearchFunctional" })
	public void afterRunSuite() {
		ExtentReport.GenerateHTML();
		System.gc();
	}

}
